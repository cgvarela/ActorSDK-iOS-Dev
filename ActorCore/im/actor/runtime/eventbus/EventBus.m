//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/eventbus/EventBus.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/Log.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/eventbus/BusSubscriber.h"
#include "im/actor/runtime/eventbus/Event.h"
#include "im/actor/runtime/eventbus/EventBus.h"
#include "java/lang/Runnable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ImActorRuntimeEventbusEventBus () {
 @public
  JavaUtilHashMap *stickyEvents_;
  JavaUtilHashMap *subscribers_;
}

- (void)deliverWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)e
                                   withBoolean:(jboolean)isSticky;

@end

J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus, stickyEvents_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus, subscribers_, JavaUtilHashMap *)

__attribute__((unused)) static void ImActorRuntimeEventbusEventBus_deliverWithImActorRuntimeEventbusEvent_withBoolean_(ImActorRuntimeEventbusEventBus *self, ImActorRuntimeEventbusEvent *e, jboolean isSticky);

@interface ImActorRuntimeEventbusEventBus_SubscriberConfig : NSObject {
 @public
  JavaUtilArrayList *types_;
}

- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                                          withNSString:(NSString *)baseType;

- (JavaUtilArrayList *)getTypes;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeEventbusEventBus_SubscriberConfig)

J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus_SubscriberConfig, types_, JavaUtilArrayList *)

__attribute__((unused)) static void ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(ImActorRuntimeEventbusEventBus_SubscriberConfig *self, ImActorRuntimeEventbusEventBus *outer$, NSString *baseType);

__attribute__((unused)) static ImActorRuntimeEventbusEventBus_SubscriberConfig *new_ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(ImActorRuntimeEventbusEventBus *outer$, NSString *baseType) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeEventbusEventBus_SubscriberConfig)

@interface ImActorRuntimeEventbusEventBus_$1 : NSObject < JavaLangRunnable > {
 @public
  ImActorRuntimeEventbusEventBus *this$0_;
  ImActorRuntimeEventbusEvent *val$event_;
}

- (void)run;

- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                       withImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeEventbusEventBus_$1)

J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus_$1, this$0_, ImActorRuntimeEventbusEventBus *)
J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus_$1, val$event_, ImActorRuntimeEventbusEvent *)

__attribute__((unused)) static void ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus_$1 *self, ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0);

__attribute__((unused)) static ImActorRuntimeEventbusEventBus_$1 *new_ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeEventbusEventBus_$1)

@interface ImActorRuntimeEventbusEventBus_$2 : NSObject < JavaLangRunnable > {
 @public
  ImActorRuntimeEventbusEventBus *this$0_;
  ImActorRuntimeEventbusEvent *val$event_;
}

- (void)run;

- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                       withImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeEventbusEventBus_$2)

J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus_$2, this$0_, ImActorRuntimeEventbusEventBus *)
J2OBJC_FIELD_SETTER(ImActorRuntimeEventbusEventBus_$2, val$event_, ImActorRuntimeEventbusEvent *)

__attribute__((unused)) static void ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus_$2 *self, ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0);

__attribute__((unused)) static ImActorRuntimeEventbusEventBus_$2 *new_ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeEventbusEventBus_$2)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/eventbus/EventBus.java"


#line 12
@implementation ImActorRuntimeEventbusEventBus


#line 17
- (void)subscribeWithImActorRuntimeEventbusBusSubscriber:(id<ImActorRuntimeEventbusBusSubscriber>)subscriber {
  @synchronized(self) {
    
#line 18
    [self subscribeWithImActorRuntimeEventbusBusSubscriber:subscriber withNSString:nil];
  }
}


#line 21
- (void)subscribeWithImActorRuntimeEventbusBusSubscriber:(id<ImActorRuntimeEventbusBusSubscriber>)subscriber
                                            withNSString:(NSString *)eventType {
  @synchronized(self) {
    
#line 22
    if (![((JavaUtilHashMap *) nil_chk(subscribers_)) containsKeyWithId:subscriber]) {
      (void) [subscribers_ putWithId:subscriber withId:new_ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(self, eventType)];
    }
    else {
      
#line 25
      ImActorRuntimeEventbusEventBus_SubscriberConfig *config = [subscribers_ getWithId:subscriber];
      if (![((JavaUtilArrayList *) nil_chk([((ImActorRuntimeEventbusEventBus_SubscriberConfig *) nil_chk(config)) getTypes])) containsWithId:eventType]) {
        [((JavaUtilArrayList *) nil_chk([config getTypes])) addWithId:eventType];
      }
    }
    
#line 31
    if (eventType != nil && [((JavaUtilHashMap *) nil_chk(stickyEvents_)) containsKeyWithId:eventType]) {
      [((id<ImActorRuntimeEventbusBusSubscriber>) nil_chk(subscriber)) onBusEventWithImActorRuntimeEventbusEvent:[stickyEvents_ getWithId:eventType]];
    }
  }
}


#line 36
- (void)unsubscriveWithImActorRuntimeEventbusBusSubscriber:(id<ImActorRuntimeEventbusBusSubscriber>)subscriber {
  @synchronized(self) {
    
#line 37
    (void) [((JavaUtilHashMap *) nil_chk(subscribers_)) removeWithId:subscriber];
  }
}


#line 40
- (void)postWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)event {
  ARRuntime_dispatchWithJavaLangRunnable_(new_ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, event));
}


#line 49
- (void)postStickyWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)event {
  ARRuntime_dispatchWithJavaLangRunnable_(new_ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, event));
}


#line 58
- (void)deliverWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)e
                                   withBoolean:(jboolean)isSticky {
  ImActorRuntimeEventbusEventBus_deliverWithImActorRuntimeEventbusEvent_withBoolean_(self, e, isSticky);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ImActorRuntimeEventbusEventBus_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "subscribeWithImActorRuntimeEventbusBusSubscriber:", "subscribe", "V", 0x21, NULL, NULL },
    { "subscribeWithImActorRuntimeEventbusBusSubscriber:withNSString:", "subscribe", "V", 0x21, NULL, NULL },
    { "unsubscriveWithImActorRuntimeEventbusBusSubscriber:", "unsubscrive", "V", 0x21, NULL, NULL },
    { "postWithImActorRuntimeEventbusEvent:", "post", "V", 0x1, NULL, NULL },
    { "postStickyWithImActorRuntimeEventbusEvent:", "postSticky", "V", 0x1, NULL, NULL },
    { "deliverWithImActorRuntimeEventbusEvent:withBoolean:", "deliver", "V", 0x22, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "stickyEvents_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lim/actor/runtime/eventbus/Event;>;", .constantValue.asLong = 0 },
    { "subscribers_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/runtime/eventbus/BusSubscriber;Lim/actor/runtime/eventbus/EventBus$SubscriberConfig;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.runtime.eventbus.EventBus$SubscriberConfig;"};
  static const J2ObjcClassInfo _ImActorRuntimeEventbusEventBus = { 2, "EventBus", "im.actor.runtime.eventbus", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ImActorRuntimeEventbusEventBus;
}

@end


#line 58
void ImActorRuntimeEventbusEventBus_deliverWithImActorRuntimeEventbusEvent_withBoolean_(ImActorRuntimeEventbusEventBus *self, ImActorRuntimeEventbusEvent *e, jboolean isSticky) {
  @synchronized(self) {
    
#line 59
    ARLog_dWithNSString_withNSString_(@"EventBus", JreStrcat("$@", @"Event: ", e));
    
#line 61
    NSString *eventType = [((ImActorRuntimeEventbusEvent *) nil_chk(e)) getType];
    if (isSticky) {
      (void) [((JavaUtilHashMap *) nil_chk(self->stickyEvents_)) putWithId:eventType withId:e];
    }
    for (id<ImActorRuntimeEventbusBusSubscriber> __strong s in nil_chk([((JavaUtilHashMap *) nil_chk(self->subscribers_)) keySet])) {
      ImActorRuntimeEventbusEventBus_SubscriberConfig *config = [self->subscribers_ getWithId:s];
      if ([((JavaUtilArrayList *) nil_chk([((ImActorRuntimeEventbusEventBus_SubscriberConfig *) nil_chk(config)) getTypes])) containsWithId:nil] ||
#line 68
      [((JavaUtilArrayList *) nil_chk([config getTypes])) containsWithId:eventType]) {
        [((id<ImActorRuntimeEventbusBusSubscriber>) nil_chk(s)) onBusEventWithImActorRuntimeEventbusEvent:e];
      }
    }
  }
}

void ImActorRuntimeEventbusEventBus_init(ImActorRuntimeEventbusEventBus *self) {
  (void) NSObject_init(self);
  self->stickyEvents_ = new_JavaUtilHashMap_init();
  self->subscribers_ = new_JavaUtilHashMap_init();
}

ImActorRuntimeEventbusEventBus *new_ImActorRuntimeEventbusEventBus_init() {
  ImActorRuntimeEventbusEventBus *self = [ImActorRuntimeEventbusEventBus alloc];
  ImActorRuntimeEventbusEventBus_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeEventbusEventBus)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/eventbus/EventBus.java"


#line 74
@implementation ImActorRuntimeEventbusEventBus_SubscriberConfig


#line 77
- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                                          withNSString:(NSString *)baseType {
  ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(self, outer$, baseType);
  return self;
}


#line 81
- (JavaUtilArrayList *)getTypes {
  return types_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithImActorRuntimeEventbusEventBus:withNSString:", "SubscriberConfig", NULL, 0x1, NULL, NULL },
    { "getTypes", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "types_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ImActorRuntimeEventbusEventBus_SubscriberConfig = { 2, "SubscriberConfig", "im.actor.runtime.eventbus", "EventBus", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ImActorRuntimeEventbusEventBus_SubscriberConfig;
}

@end


#line 77
void ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(ImActorRuntimeEventbusEventBus_SubscriberConfig *self, ImActorRuntimeEventbusEventBus *outer$, NSString *baseType) {
  (void) NSObject_init(self);
  self->types_ = new_JavaUtilArrayList_init();
  
#line 78
  [self->types_ addWithId:baseType];
}


#line 77
ImActorRuntimeEventbusEventBus_SubscriberConfig *new_ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(ImActorRuntimeEventbusEventBus *outer$, NSString *baseType) {
  ImActorRuntimeEventbusEventBus_SubscriberConfig *self = [ImActorRuntimeEventbusEventBus_SubscriberConfig alloc];
  ImActorRuntimeEventbusEventBus_SubscriberConfig_initWithImActorRuntimeEventbusEventBus_withNSString_(self, outer$, baseType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeEventbusEventBus_SubscriberConfig)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/eventbus/EventBus.java"

@implementation ImActorRuntimeEventbusEventBus_$1


#line 43
- (void)run {
  ImActorRuntimeEventbusEventBus_deliverWithImActorRuntimeEventbusEvent_withBoolean_(this$0_, val$event_, false);
}

- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                       withImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)capture$0 {
  ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithImActorRuntimeEventbusEventBus:withImActorRuntimeEventbusEvent:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.runtime.eventbus.EventBus;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$event_", NULL, 0x1012, "Lim.actor.runtime.eventbus.Event;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ImActorRuntimeEventbusEventBus", "postWithImActorRuntimeEventbusEvent:" };
  static const J2ObjcClassInfo _ImActorRuntimeEventbusEventBus_$1 = { 2, "", "im.actor.runtime.eventbus", "EventBus", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ImActorRuntimeEventbusEventBus_$1;
}

@end

void ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus_$1 *self, ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) {
  self->this$0_ = outer$;
  self->val$event_ = capture$0;
  (void) NSObject_init(self);
}

ImActorRuntimeEventbusEventBus_$1 *new_ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) {
  ImActorRuntimeEventbusEventBus_$1 *self = [ImActorRuntimeEventbusEventBus_$1 alloc];
  ImActorRuntimeEventbusEventBus_$1_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeEventbusEventBus_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/eventbus/EventBus.java"

@implementation ImActorRuntimeEventbusEventBus_$2


#line 52
- (void)run {
  ImActorRuntimeEventbusEventBus_deliverWithImActorRuntimeEventbusEvent_withBoolean_(this$0_, val$event_, true);
}

- (instancetype)initWithImActorRuntimeEventbusEventBus:(ImActorRuntimeEventbusEventBus *)outer$
                       withImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)capture$0 {
  ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithImActorRuntimeEventbusEventBus:withImActorRuntimeEventbusEvent:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.runtime.eventbus.EventBus;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$event_", NULL, 0x1012, "Lim.actor.runtime.eventbus.Event;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ImActorRuntimeEventbusEventBus", "postStickyWithImActorRuntimeEventbusEvent:" };
  static const J2ObjcClassInfo _ImActorRuntimeEventbusEventBus_$2 = { 2, "", "im.actor.runtime.eventbus", "EventBus", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ImActorRuntimeEventbusEventBus_$2;
}

@end

void ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus_$2 *self, ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) {
  self->this$0_ = outer$;
  self->val$event_ = capture$0;
  (void) NSObject_init(self);
}

ImActorRuntimeEventbusEventBus_$2 *new_ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(ImActorRuntimeEventbusEventBus *outer$, ImActorRuntimeEventbusEvent *capture$0) {
  ImActorRuntimeEventbusEventBus_$2 *self = [ImActorRuntimeEventbusEventBus_$2 alloc];
  ImActorRuntimeEventbusEventBus_$2_initWithImActorRuntimeEventbusEventBus_withImActorRuntimeEventbusEvent_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeEventbusEventBus_$2)

#pragma clang diagnostic pop
