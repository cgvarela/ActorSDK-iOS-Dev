//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/KeyValueRecord.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/j2objc/annotations/ObjectiveCName.h"
#include "im/actor/runtime/storage/KeyValueRecord.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARKeyValueRecord () {
 @public
  jlong id__;
  IOSByteArray *data_;
}

@end

J2OBJC_FIELD_SETTER(ARKeyValueRecord, data_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/KeyValueRecord.java"


#line 11
@implementation ARKeyValueRecord


#line 17
- (instancetype)initWithKey:(jlong)id_
                   withData:(IOSByteArray *)data {
  ARKeyValueRecord_initWithKey_withData_(self, id_, data);
  return self;
}

- (jlong)getId {
  return id__;
}


#line 29
- (IOSByteArray *)getData {
  return data_;
}

+ (IOSObjectArray *)__annotations_initWithLong_withByteArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"initWithKey:withData:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getId {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getId"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getData {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getData"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithKey:withData:", "KeyValueRecord", NULL, 0x1, NULL, NULL },
    { "getId", NULL, "J", 0x1, NULL, NULL },
    { "getData", NULL, "[B", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "id", 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARKeyValueRecord = { 2, "KeyValueRecord", "im.actor.runtime.storage", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARKeyValueRecord;
}

@end


#line 17
void ARKeyValueRecord_initWithKey_withData_(ARKeyValueRecord *self, jlong id_, IOSByteArray *data) {
  (void) NSObject_init(self);
  
#line 18
  self->id__ = id_;
  self->data_ = data;
}


#line 17
ARKeyValueRecord *new_ARKeyValueRecord_initWithKey_withData_(jlong id_, IOSByteArray *data) {
  ARKeyValueRecord *self = [ARKeyValueRecord alloc];
  ARKeyValueRecord_initWithKey_withData_(self, id_, data);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARKeyValueRecord)

#pragma clang diagnostic pop
