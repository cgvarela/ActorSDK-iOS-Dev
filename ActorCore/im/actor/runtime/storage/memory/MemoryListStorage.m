//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/memory/MemoryListStorage.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/storage/ListEngineRecord.h"
#include "im/actor/runtime/storage/memory/MemoryListStorage.h"
#include <j2objc/java/lang/Long.h>
#include <j2objc/java/util/ArrayList.h>
#include <j2objc/java/util/HashMap.h>
#include <j2objc/java/util/List.h>
#include <j2objc/java/util/Set.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARMemoryListStorage () {
 @public
  JavaUtilHashMap *records_;
}

@end

J2OBJC_FIELD_SETTER(ARMemoryListStorage, records_, JavaUtilHashMap *)

@interface ARMemoryListStorage_Record : NSObject {
 @public
  jlong id__;
  jlong order_;
  IOSByteArray *data_;
  NSString *query_;
}

- (instancetype)initWithARMemoryListStorage:(ARMemoryListStorage *)outer$
                                   withLong:(jlong)id_
                                   withLong:(jlong)order
                              withByteArray:(IOSByteArray *)data
                               withNSString:(NSString *)query;

- (jlong)getId;

- (jlong)getOrder;

- (IOSByteArray *)getData;

- (NSString *)getQuery;

@end

J2OBJC_EMPTY_STATIC_INIT(ARMemoryListStorage_Record)

J2OBJC_FIELD_SETTER(ARMemoryListStorage_Record, data_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ARMemoryListStorage_Record, query_, NSString *)

__attribute__((unused)) static void ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(ARMemoryListStorage_Record *self, ARMemoryListStorage *outer$, jlong id_, jlong order, IOSByteArray *data, NSString *query);

__attribute__((unused)) static ARMemoryListStorage_Record *new_ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(ARMemoryListStorage *outer$, jlong id_, jlong order, IOSByteArray *data, NSString *query) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARMemoryListStorage_Record)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/memory/MemoryListStorage.java"


#line 10
@implementation ARMemoryListStorage


#line 15
- (void)updateOrAddWithValue:(ARListEngineRecord *)valueContainer {
  (void) [((JavaUtilHashMap *) nil_chk(records_)) putWithId:JavaLangLong_valueOfWithLong_([((ARListEngineRecord *) nil_chk(valueContainer)) getKey]) withId:new_ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(self, [valueContainer getKey],
#line 17
  [valueContainer getOrder], [valueContainer getData], [valueContainer getQuery])];
}

- (void)updateOrAddWithList:(id<JavaUtilList>)items {
  for (ARListEngineRecord * __strong r in nil_chk(items)) {
    [self updateOrAddWithValue:r];
  }
}


#line 28
- (void)deleteWithKey:(jlong)key {
  (void) [((JavaUtilHashMap *) nil_chk(records_)) removeWithId:JavaLangLong_valueOfWithLong_(key)];
}


#line 33
- (void)deleteWithKeys:(IOSLongArray *)keys {
  {
    IOSLongArray *a__ =
#line 34
    keys;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong l = *b__++;
      
#line 35
      [self deleteWithKey:l];
    }
  }
}


#line 40
- (void)clear {
  [((JavaUtilHashMap *) nil_chk(records_)) clear];
}


#line 45
- (ARListEngineRecord *)loadItemWithKey:(jlong)key {
  ARMemoryListStorage_Record *record = [((JavaUtilHashMap *) nil_chk(records_)) getWithId:JavaLangLong_valueOfWithLong_(key)];
  if (record != nil) {
    return new_ARListEngineRecord_initWithKey_withOrder_withQuery_withData_([record getId], [record getOrder], [record getQuery],
#line 49
    [record getData]);
  }
  return nil;
}

- (id<JavaUtilList>)loadAllItems {
  JavaUtilArrayList *res = new_JavaUtilArrayList_init();
  for (JavaLangLong *boxed__ in nil_chk([((JavaUtilHashMap *) nil_chk(records_)) keySet])) {
    jlong id_ = [((JavaLangLong *) nil_chk(boxed__)) longLongValue];
    
#line 58
    ARMemoryListStorage_Record *record = [records_ getWithId:JavaLangLong_valueOfWithLong_(id_)];
    [res addWithId:new_ARListEngineRecord_initWithKey_withOrder_withQuery_withData_(id_, [((ARMemoryListStorage_Record *) nil_chk(record)) getOrder], [record getQuery], [record getData])];
  }
  return res;
}


#line 65
- (jboolean)isEmpty {
  return [self getCount] == 0;
}


#line 70
- (jint)getCount {
  return [((JavaUtilHashMap *) nil_chk(records_)) size];
}

- (JavaLangLong *)getTopKey {
  if ([((JavaUtilHashMap *) nil_chk(records_)) size] == 0) {
    return nil;
  }
  jlong res = 0;
  jlong value = JavaLangLong_MIN_VALUE;
  for (JavaLangLong * __strong key in nil_chk([records_ keySet])) {
    ARMemoryListStorage_Record *record = [records_ getWithId:key];
    if ([((ARMemoryListStorage_Record *) nil_chk(record)) getOrder] >= value) {
      value = [record getOrder];
      res = [record getId];
    }
  }
  return JavaLangLong_valueOfWithLong_(res);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARMemoryListStorage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "updateOrAddWithValue:", "updateOrAdd", "V", 0x1, NULL, NULL },
    { "updateOrAddWithList:", "updateOrAdd", "V", 0x1, NULL, NULL },
    { "deleteWithKey:", "delete", "V", 0x1, NULL, NULL },
    { "deleteWithKeys:", "delete", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "loadItemWithKey:", "loadItem", "Lim.actor.runtime.storage.ListEngineRecord;", 0x1, NULL, NULL },
    { "loadAllItems", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "getTopKey", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "records_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Long;Lim/actor/runtime/storage/memory/MemoryListStorage$Record;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.runtime.storage.memory.MemoryListStorage$Record;"};
  static const J2ObjcClassInfo _ARMemoryListStorage = { 2, "MemoryListStorage", "im.actor.runtime.storage.memory", NULL, 0x1, 11, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ARMemoryListStorage;
}

@end

void ARMemoryListStorage_init(ARMemoryListStorage *self) {
  (void) NSObject_init(self);
  self->records_ = new_JavaUtilHashMap_init();
}

ARMemoryListStorage *new_ARMemoryListStorage_init() {
  ARMemoryListStorage *self = [ARMemoryListStorage alloc];
  ARMemoryListStorage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARMemoryListStorage)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/memory/MemoryListStorage.java"


#line 90
@implementation ARMemoryListStorage_Record


#line 97
- (instancetype)initWithARMemoryListStorage:(ARMemoryListStorage *)outer$
                                   withLong:(jlong)id_
                                   withLong:(jlong)order
                              withByteArray:(IOSByteArray *)data
                               withNSString:(NSString *)query {
  ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(self, outer$, id_, order, data, query);
  return self;
}


#line 104
- (jlong)getId {
  return id__;
}

- (jlong)getOrder {
  return order_;
}

- (IOSByteArray *)getData {
  return data_;
}

- (NSString *)getQuery {
  return query_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARMemoryListStorage:withLong:withLong:withByteArray:withNSString:", "Record", NULL, 0x1, NULL, NULL },
    { "getId", NULL, "J", 0x1, NULL, NULL },
    { "getOrder", NULL, "J", 0x1, NULL, NULL },
    { "getData", NULL, "[B", 0x1, NULL, NULL },
    { "getQuery", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "id", 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "order_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "query_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARMemoryListStorage_Record = { 2, "Record", "im.actor.runtime.storage.memory", "MemoryListStorage", 0x2, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARMemoryListStorage_Record;
}

@end


#line 97
void ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(ARMemoryListStorage_Record *self, ARMemoryListStorage *outer$, jlong id_, jlong order, IOSByteArray *data, NSString *query) {
  (void) NSObject_init(self);
  
#line 98
  self->id__ = id_;
  self->order_ = order;
  self->data_ = data;
  self->query_ = query;
}


#line 97
ARMemoryListStorage_Record *new_ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(ARMemoryListStorage *outer$, jlong id_, jlong order, IOSByteArray *data, NSString *query) {
  ARMemoryListStorage_Record *self = [ARMemoryListStorage_Record alloc];
  ARMemoryListStorage_Record_initWithARMemoryListStorage_withLong_withLong_withByteArray_withNSString_(self, outer$, id_, order, data, query);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARMemoryListStorage_Record)

#pragma clang diagnostic pop
