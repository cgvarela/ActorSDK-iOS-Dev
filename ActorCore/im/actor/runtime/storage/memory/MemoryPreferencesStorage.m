//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/memory/MemoryPreferencesStorage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/storage/memory/MemoryPreferencesStorage.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/HashMap.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARMemoryPreferencesStorage () {
 @public
  JavaUtilHashMap *keys_;
}

@end

J2OBJC_FIELD_SETTER(ARMemoryPreferencesStorage, keys_, JavaUtilHashMap *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/storage/memory/MemoryPreferencesStorage.java"


#line 7
@implementation ARMemoryPreferencesStorage


#line 12
- (void)putLongWithKey:(NSString *)key
             withValue:(jlong)v {
  (void) [((JavaUtilHashMap *) nil_chk(keys_)) putWithId:key withId:JavaLangLong_valueOfWithLong_(v)];
}

- (jlong)getLongWithKey:(NSString *)key
            withDefault:(jlong)def {
  if ([((JavaUtilHashMap *) nil_chk(keys_)) containsKeyWithId:key]) {
    return [((JavaLangLong *) nil_chk((JavaLangLong *) check_class_cast([keys_ getWithId:key], [JavaLangLong class]))) longLongValue];
  }
  return def;
}

- (void)putIntWithKey:(NSString *)key
            withValue:(jint)v {
  (void) [((JavaUtilHashMap *) nil_chk(keys_)) putWithId:key withId:JavaLangInteger_valueOfWithInt_(v)];
}

- (jint)getIntWithKey:(NSString *)key
          withDefault:(jint)def {
  if ([((JavaUtilHashMap *) nil_chk(keys_)) containsKeyWithId:key]) {
    return [((JavaLangInteger *) nil_chk((JavaLangInteger *) check_class_cast([keys_ getWithId:key], [JavaLangInteger class]))) intValue];
  }
  return def;
}

- (void)putBoolWithKey:(NSString *)key
             withValue:(jboolean)v {
  (void) [((JavaUtilHashMap *) nil_chk(keys_)) putWithId:key withId:JavaLangBoolean_valueOfWithBoolean_(v)];
}

- (jboolean)getBoolWithKey:(NSString *)key
               withDefault:(jboolean)def {
  if ([((JavaUtilHashMap *) nil_chk(keys_)) containsKeyWithId:key]) {
    return [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) check_class_cast([keys_ getWithId:key], [JavaLangBoolean class]))) booleanValue];
  }
  return def;
}

- (void)putBytesWithKey:(NSString *)key
              withValue:(IOSByteArray *)v {
  (void) [((JavaUtilHashMap *) nil_chk(keys_)) putWithId:key withId:v];
}

- (IOSByteArray *)getBytesWithKey:(NSString *)key {
  if ([((JavaUtilHashMap *) nil_chk(keys_)) containsKeyWithId:key]) {
    return (IOSByteArray *) check_class_cast([keys_ getWithId:key], [IOSByteArray class]);
  }
  return nil;
}


#line 64
- (void)putStringWithKey:(NSString *)key
               withValue:(NSString *)v {
  (void) [((JavaUtilHashMap *) nil_chk(keys_)) putWithId:key withId:v];
}

- (NSString *)getStringWithKey:(NSString *)key {
  if ([((JavaUtilHashMap *) nil_chk(keys_)) containsKeyWithId:key]) {
    return (NSString *) check_class_cast([keys_ getWithId:key], [NSString class]);
  }
  return nil;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARMemoryPreferencesStorage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "putLongWithKey:withValue:", "putLong", "V", 0x1, NULL, NULL },
    { "getLongWithKey:withDefault:", "getLong", "J", 0x1, NULL, NULL },
    { "putIntWithKey:withValue:", "putInt", "V", 0x1, NULL, NULL },
    { "getIntWithKey:withDefault:", "getInt", "I", 0x1, NULL, NULL },
    { "putBoolWithKey:withValue:", "putBool", "V", 0x1, NULL, NULL },
    { "getBoolWithKey:withDefault:", "getBool", "Z", 0x1, NULL, NULL },
    { "putBytesWithKey:withValue:", "putBytes", "V", 0x1, NULL, NULL },
    { "getBytesWithKey:", "getBytes", "[B", 0x1, NULL, NULL },
    { "putStringWithKey:withValue:", "putString", "V", 0x1, NULL, NULL },
    { "getStringWithKey:", "getString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "keys_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARMemoryPreferencesStorage = { 2, "MemoryPreferencesStorage", "im.actor.runtime.storage.memory", NULL, 0x1, 11, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARMemoryPreferencesStorage;
}

@end

void ARMemoryPreferencesStorage_init(ARMemoryPreferencesStorage *self) {
  (void) NSObject_init(self);
  self->keys_ = new_JavaUtilHashMap_init();
}

ARMemoryPreferencesStorage *new_ARMemoryPreferencesStorage_init() {
  ARMemoryPreferencesStorage *self = [ARMemoryPreferencesStorage alloc];
  ARMemoryPreferencesStorage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARMemoryPreferencesStorage)

#pragma clang diagnostic pop
