//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java//im/actor/runtime/generic/GenericAssetsProvider.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/generic/GenericAssetsProvider.h"
#include <j2objc/java/io/ByteArrayOutputStream.h>
#include <j2objc/java/io/IOException.h>
#include <j2objc/java/io/InputStream.h>
#include <j2objc/java/lang/ClassLoader.h>
#include <j2objc/java/net/URL.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARGenericAssetsProvider ()

- (IOSByteArray *)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

@end

__attribute__((unused)) static IOSByteArray *ARGenericAssetsProvider_readFullyWithJavaIoInputStream_(ARGenericAssetsProvider *self, JavaIoInputStream *inputStream);

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java//im/actor/runtime/generic/GenericAssetsProvider.java"


#line 12
@implementation ARGenericAssetsProvider


#line 15
- (jboolean)hasAssetWithNSString:(NSString *)name {
  return [((JavaLangClassLoader *) nil_chk([[self getClass] getClassLoader])) getResourceWithNSString:name] != nil;
}


#line 20
- (NSString *)loadAssetWithNSString:(NSString *)name {
  JavaIoInputStream *stream = [((JavaLangClassLoader *) nil_chk([[self getClass] getClassLoader])) getResourceAsStreamWithNSString:name];
  @try {
    return [self readFullyWithJavaIoInputStream:stream withNSString:@"UTF-8"];
  }
  @catch (
#line 24
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
  @finally {
    
#line 27
    if (stream != nil) {
      @try {
        [stream close];
      }
      @catch (
#line 30
      JavaIoIOException *e) {
        [((JavaIoIOException *) nil_chk(e)) printStackTrace];
      }
    }
  }
  return nil;
}


#line 38
- (NSString *)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                                withNSString:(NSString *)encoding {
  return [NSString stringWithBytes:ARGenericAssetsProvider_readFullyWithJavaIoInputStream_(self, inputStream) charsetName:encoding];
}


#line 42
- (IOSByteArray *)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  return ARGenericAssetsProvider_readFullyWithJavaIoInputStream_(self, inputStream);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARGenericAssetsProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasAssetWithNSString:", "hasAsset", "Z", 0x1, NULL, NULL },
    { "loadAssetWithNSString:", "loadAsset", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "readFullyWithJavaIoInputStream:withNSString:", "readFully", "Ljava.lang.String;", 0x1, "Ljava.io.IOException;", NULL },
    { "readFullyWithJavaIoInputStream:", "readFully", "[B", 0x2, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARGenericAssetsProvider = { 2, "GenericAssetsProvider", "im.actor.runtime.generic", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARGenericAssetsProvider;
}

@end


#line 42
IOSByteArray *ARGenericAssetsProvider_readFullyWithJavaIoInputStream_(ARGenericAssetsProvider *self, JavaIoInputStream *inputStream) {
  JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:1024];
  jint length = 0;
  while ((length = [((JavaIoInputStream *) nil_chk(inputStream)) readWithByteArray:buffer]) != -1) {
    [baos writeWithByteArray:buffer withInt:0 withInt:length];
  }
  return [baos toByteArray];
}

void ARGenericAssetsProvider_init(ARGenericAssetsProvider *self) {
  (void) NSObject_init(self);
}

ARGenericAssetsProvider *new_ARGenericAssetsProvider_init() {
  ARGenericAssetsProvider *self = [ARGenericAssetsProvider alloc];
  ARGenericAssetsProvider_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARGenericAssetsProvider)

#pragma clang diagnostic pop
