//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java//im/actor/runtime/generic/threading/GenericAtomicLong.java
//

#ifndef _ImActorRuntimeGenericThreadingGenericAtomicLong_H_
#define _ImActorRuntimeGenericThreadingGenericAtomicLong_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include "im/actor/runtime/threading/AtomicLongCompat.h"

@class JavaUtilConcurrentAtomicAtomicLong;

@interface ARGenericAtomicLong : ARAtomicLongCompat {
 @public
  JavaUtilConcurrentAtomicAtomicLong *atomicLong_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)value;

- (jlong)get;

- (jlong)getAndIncrement;

- (jlong)incrementAndGet;

- (void)setWithLong:(jlong)v;

@end

J2OBJC_EMPTY_STATIC_INIT(ARGenericAtomicLong)

J2OBJC_FIELD_SETTER(ARGenericAtomicLong, atomicLong_, JavaUtilConcurrentAtomicAtomicLong *)

FOUNDATION_EXPORT void ARGenericAtomicLong_initWithLong_(ARGenericAtomicLong *self, jlong value);

FOUNDATION_EXPORT ARGenericAtomicLong *new_ARGenericAtomicLong_initWithLong_(jlong value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARGenericAtomicLong)

@compatibility_alias ImActorRuntimeGenericThreadingGenericAtomicLong ARGenericAtomicLong;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeGenericThreadingGenericAtomicLong_H_
