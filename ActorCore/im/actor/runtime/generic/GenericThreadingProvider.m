//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java//im/actor/runtime/generic/GenericThreadingProvider.java
//

#include "J2ObjC_source.h"
#include "im/actor/runtime/actors/ActorSystem.h"
#include "im/actor/runtime/actors/ThreadPriority.h"
#include "im/actor/runtime/actors/mailbox/ActorDispatcher.h"
#include "im/actor/runtime/generic/GenericThreadingProvider.h"
#include "im/actor/runtime/generic/threading/GenericAtomicInteger.h"
#include "im/actor/runtime/generic/threading/GenericAtomicLong.h"
#include "im/actor/runtime/generic/threading/GenericDispatcherActor.h"
#include "im/actor/runtime/generic/threading/GenericThreadLocal.h"
#include "im/actor/runtime/threading/AbsTimerCompat.h"
#include "im/actor/runtime/threading/AtomicIntegerCompat.h"
#include "im/actor/runtime/threading/AtomicLongCompat.h"
#include "im/actor/runtime/threading/ThreadLocalCompat.h"
#include "im/actor/runtime/threading/TimerCompat.h"
#include "java/lang/Runnable.h"
#include "java/lang/Runtime.h"
#include "java/lang/System.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java//im/actor/runtime/generic/GenericThreadingProvider.java"


#line 20
@implementation ARGenericThreadingProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 22
- (instancetype)init {
  ARGenericThreadingProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 27
- (jlong)getActorTime {
  return JavaLangSystem_nanoTime() / 1000000;
}


#line 32
- (jlong)getCurrentTime {
  return JavaLangSystem_currentTimeMillis();
}


#line 37
- (jlong)getSyncedCurrentTime {
  return [self getCurrentTime];
}


#line 42
- (jint)getCoresCount {
  return [((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) availableProcessors];
}


#line 47
- (ARAtomicIntegerCompat *)createAtomicIntWithInitValue:(jint)value {
  return new_ARGenericAtomicInteger_initWithInt_(value);
}


#line 52
- (ARAtomicLongCompat *)createAtomicLongWithInitValue:(jlong)value {
  return new_ARGenericAtomicLong_initWithLong_(value);
}


#line 57
- (ARThreadLocalCompat *)createThreadLocal {
  return new_ARGenericThreadLocal_init();
}


#line 62
- (ARAbsTimerCompat *)createTimer:(id<JavaLangRunnable>)runnable {
  return new_ARTimerCompat_initWithJavaLangRunnable_(runnable);
}


#line 67
- (ARActorDispatcher *)createDispatcherWithName:(NSString *)name
                               withThreadsCount:(jint)threadsCount
                                   withPriority:(ARThreadPriorityEnum *)priority
                                withActorSystem:(ARActorSystem *)actorSystem {
  return new_ARGenericDispatcherActor_initWithNSString_withARActorSystem_withInt_withARThreadPriorityEnum_(name, actorSystem, threadsCount, priority);
}


#line 72
- (ARActorDispatcher *)createDefaultDispatcherWithName:(NSString *)name
                                          withPriority:(ARThreadPriorityEnum *)priority
                                       withActorSystem:(ARActorSystem *)actorSystem {
  return [self createDispatcherWithName:name withThreadsCount:[self getCoresCount] * 2 withPriority:priority withActorSystem:actorSystem];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GenericThreadingProvider", NULL, 0x1, NULL, NULL },
    { "getActorTime", NULL, "J", 0x1, NULL, NULL },
    { "getCurrentTime", NULL, "J", 0x1, NULL, NULL },
    { "getSyncedCurrentTime", NULL, "J", 0x1, NULL, NULL },
    { "getCoresCount", NULL, "I", 0x1, NULL, NULL },
    { "createAtomicIntWithInitValue:", "createAtomicInt", "Lim.actor.runtime.threading.AtomicIntegerCompat;", 0x1, NULL, NULL },
    { "createAtomicLongWithInitValue:", "createAtomicLong", "Lim.actor.runtime.threading.AtomicLongCompat;", 0x1, NULL, NULL },
    { "createThreadLocal", NULL, "Lim.actor.runtime.threading.ThreadLocalCompat;", 0x1, NULL, "<T:Ljava/lang/Object;>()Lim/actor/runtime/threading/ThreadLocalCompat<TT;>;" },
    { "createTimer:", "createTimer", "Lim.actor.runtime.threading.AbsTimerCompat;", 0x1, NULL, NULL },
    { "createDispatcherWithName:withThreadsCount:withPriority:withActorSystem:", "createDispatcher", "Lim.actor.runtime.actors.mailbox.ActorDispatcher;", 0x1, NULL, NULL },
    { "createDefaultDispatcherWithName:withPriority:withActorSystem:", "createDefaultDispatcher", "Lim.actor.runtime.actors.mailbox.ActorDispatcher;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARGenericThreadingProvider = { 2, "GenericThreadingProvider", "im.actor.runtime.generic", NULL, 0x1, 11, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARGenericThreadingProvider;
}

@end


#line 22
void ARGenericThreadingProvider_init(ARGenericThreadingProvider *self) {
  (void) NSObject_init(self);
}


#line 22
ARGenericThreadingProvider *new_ARGenericThreadingProvider_init() {
  ARGenericThreadingProvider *self = [ARGenericThreadingProvider alloc];
  ARGenericThreadingProvider_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARGenericThreadingProvider)

#pragma clang diagnostic pop
