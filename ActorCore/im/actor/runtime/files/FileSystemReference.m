//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/files/FileSystemReference.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "com/google/j2objc/annotations/ObjectiveCName.h"
#include "im/actor/runtime/files/FileSystemReference.h"
#include "im/actor/runtime/files/InputFile.h"
#include "im/actor/runtime/files/OutputFile.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARFileSystemReference : NSObject

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/files/FileSystemReference.java"


#line 9
@implementation ARFileSystemReference

+ (IOSObjectArray *)__annotations_getDescriptor {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getDescriptor"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_isExist {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"isExist"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getSize {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getSize"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_openWriteWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"openWriteWithSize:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_openRead {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"openRead"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getDescriptor", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "isExist", NULL, "Z", 0x401, NULL, NULL },
    { "getSize", NULL, "I", 0x401, NULL, NULL },
    { "openWriteWithSize:", "openWrite", "Lim.actor.runtime.files.OutputFile;", 0x401, NULL, NULL },
    { "openRead", NULL, "Lim.actor.runtime.files.InputFile;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARFileSystemReference = { 2, "FileSystemReference", "im.actor.runtime.files", NULL, 0x609, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARFileSystemReference;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ARFileSystemReference)

#pragma clang diagnostic pop
