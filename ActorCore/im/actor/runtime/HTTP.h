//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/HTTP.java
//

#ifndef _ImActorRuntimeHTTP_H_
#define _ImActorRuntimeHTTP_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class IOSByteArray;
@protocol ARFileDownloadCallback;
@protocol ARFileUploadCallback;

@interface ARHTTP : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)getMethodWithNSString:(NSString *)url
                      withInt:(jint)startOffset
                      withInt:(jint)size
                      withInt:(jint)totalSize
   withARFileDownloadCallback:(id<ARFileDownloadCallback>)callback;

+ (void)putMethodWithNSString:(NSString *)url
                withByteArray:(IOSByteArray *)contents
     withARFileUploadCallback:(id<ARFileUploadCallback>)callback;

@end

J2OBJC_STATIC_INIT(ARHTTP)

FOUNDATION_EXPORT void ARHTTP_getMethodWithNSString_withInt_withInt_withInt_withARFileDownloadCallback_(NSString *url, jint startOffset, jint size, jint totalSize, id<ARFileDownloadCallback> callback);

FOUNDATION_EXPORT void ARHTTP_putMethodWithNSString_withByteArray_withARFileUploadCallback_(NSString *url, IOSByteArray *contents, id<ARFileUploadCallback> callback);

FOUNDATION_EXPORT void ARHTTP_init(ARHTTP *self);

FOUNDATION_EXPORT ARHTTP *new_ARHTTP_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARHTTP)

@compatibility_alias ImActorRuntimeHTTP ARHTTP;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeHTTP_H_
