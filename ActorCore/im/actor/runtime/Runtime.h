//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/Runtime.java
//

#ifndef _ImActorRuntimeRuntime_H_
#define _ImActorRuntimeRuntime_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ARAbsTimerCompat;
@class ARActorDispatcher;
@class ARActorSystem;
@class ARAtomicIntegerCompat;
@class ARAtomicLongCompat;
@class ARThreadLocalCompat;
@class ARThreadPriorityEnum;
@protocol ARLocaleRuntime;
@protocol JavaLangRunnable;

@interface ARRuntime : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)checkMainThread;

+ (ARAtomicIntegerCompat *)createAtomicIntWithInt:(jint)init_;

+ (ARAtomicLongCompat *)createAtomicLongWithLong:(jlong)init_;

+ (ARActorDispatcher *)createDefaultDispatcherWithNSString:(NSString *)name
                                  withARThreadPriorityEnum:(ARThreadPriorityEnum *)priority
                                         withARActorSystem:(ARActorSystem *)actorSystem;

+ (ARActorDispatcher *)createDispatcherWithNSString:(NSString *)name
                                            withInt:(jint)threadsCount
                           withARThreadPriorityEnum:(ARThreadPriorityEnum *)priority
                                  withARActorSystem:(ARActorSystem *)actorSystem;

+ (ARThreadLocalCompat *)createThreadLocal;

+ (ARAbsTimerCompat *)createTimerWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

+ (void)dispatchWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

+ (jlong)getActorTime;

+ (jlong)getCurrentSyncedTime;

+ (jlong)getCurrentTime;

+ (id<ARLocaleRuntime>)getLocaleRuntime;

+ (jboolean)isSingleThread;

+ (void)killApp;

+ (void)postToMainThreadWithJavaLangRunnable:(id<JavaLangRunnable>)runnable;

@end

J2OBJC_STATIC_INIT(ARRuntime)

FOUNDATION_EXPORT id<ARLocaleRuntime> ARRuntime_getLocaleRuntime();

FOUNDATION_EXPORT ARActorDispatcher *ARRuntime_createDefaultDispatcherWithNSString_withARThreadPriorityEnum_withARActorSystem_(NSString *name, ARThreadPriorityEnum *priority, ARActorSystem *actorSystem);

FOUNDATION_EXPORT ARActorDispatcher *ARRuntime_createDispatcherWithNSString_withInt_withARThreadPriorityEnum_withARActorSystem_(NSString *name, jint threadsCount, ARThreadPriorityEnum *priority, ARActorSystem *actorSystem);

FOUNDATION_EXPORT jlong ARRuntime_getActorTime();

FOUNDATION_EXPORT jlong ARRuntime_getCurrentTime();

FOUNDATION_EXPORT jlong ARRuntime_getCurrentSyncedTime();

FOUNDATION_EXPORT ARAtomicIntegerCompat *ARRuntime_createAtomicIntWithInt_(jint init_);

FOUNDATION_EXPORT ARAtomicLongCompat *ARRuntime_createAtomicLongWithLong_(jlong init_);

FOUNDATION_EXPORT ARThreadLocalCompat *ARRuntime_createThreadLocal();

FOUNDATION_EXPORT ARAbsTimerCompat *ARRuntime_createTimerWithJavaLangRunnable_(id<JavaLangRunnable> runnable);

FOUNDATION_EXPORT jboolean ARRuntime_isSingleThread();

FOUNDATION_EXPORT void ARRuntime_checkMainThread();

FOUNDATION_EXPORT void ARRuntime_postToMainThreadWithJavaLangRunnable_(id<JavaLangRunnable> runnable);

FOUNDATION_EXPORT void ARRuntime_dispatchWithJavaLangRunnable_(id<JavaLangRunnable> runnable);

FOUNDATION_EXPORT void ARRuntime_killApp();

FOUNDATION_EXPORT void ARRuntime_init(ARRuntime *self);

FOUNDATION_EXPORT ARRuntime *new_ARRuntime_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARRuntime)

@compatibility_alias ImActorRuntimeRuntime ARRuntime;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeRuntime_H_
