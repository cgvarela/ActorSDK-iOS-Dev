//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-cocoa/src/main/java//im/actor/runtime/cocoa/CocoaLogProvider.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/cocoa/CocoaLogProvider.h"
#include <j2objc/java/lang/Throwable.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-cocoa/src/main/java//im/actor/runtime/cocoa/CocoaLogProvider.java"


#line 5
@implementation ARCocoaLogProvider


#line 8
- (void)warringWithTag:(NSString *)tag
           withMessage:(NSString *)message {
  NSLog(@"WARRING %@: %@", tag, message);
}

- (void)errorWithTag:(NSString *)tag
       withThrowable:(JavaLangThrowable *)throwable {
  NSLog(@"ERROR %@:", tag);
  [throwable printStackTrace];
}


#line 20
- (void)debugWithTag:(NSString *)tag
         withMessage:(NSString *)message {
  NSLog(@"%@: %@", tag, message);
}

- (void)verboseWithTag:(NSString *)tag
           withMessage:(NSString *)message {
  NSLog(@"%@: %@", tag, message);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARCocoaLogProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "warringWithTag:withMessage:", "w", "V", 0x101, NULL, NULL },
    { "errorWithTag:withThrowable:", "e", "V", 0x101, NULL, NULL },
    { "debugWithTag:withMessage:", "d", "V", 0x101, NULL, NULL },
    { "verboseWithTag:withMessage:", "v", "V", 0x101, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARCocoaLogProvider = { 2, "CocoaLogProvider", "im.actor.runtime.cocoa", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARCocoaLogProvider;
}

@end

void ARCocoaLogProvider_init(ARCocoaLogProvider *self) {
  (void) NSObject_init(self);
}

ARCocoaLogProvider *new_ARCocoaLogProvider_init() {
  ARCocoaLogProvider *self = [ARCocoaLogProvider alloc];
  ARCocoaLogProvider_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARCocoaLogProvider)

#pragma clang diagnostic pop
