//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/bser/Limits.java
//

#include "J2ObjC_source.h"
#include "im/actor/runtime/bser/Limits.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARLimits ()

- (instancetype)init;

@end

__attribute__((unused)) static void ARLimits_init(ARLimits *self);

__attribute__((unused)) static ARLimits *new_ARLimits_init() NS_RETURNS_RETAINED;

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/bser/Limits.java"


#line 7
@implementation ARLimits

+ (jint)MAX_BLOCK_SIZE {
  return ARLimits_MAX_BLOCK_SIZE;
}

+ (jint)MAX_PROTO_REPEATED {
  return ARLimits_MAX_PROTO_REPEATED;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 11
- (instancetype)init {
  ARLimits_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Limits", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_BLOCK_SIZE", "MAX_BLOCK_SIZE", 0x19, "I", NULL, NULL, .constantValue.asInt = ARLimits_MAX_BLOCK_SIZE },
    { "MAX_PROTO_REPEATED", "MAX_PROTO_REPEATED", 0x19, "I", NULL, NULL, .constantValue.asInt = ARLimits_MAX_PROTO_REPEATED },
  };
  static const J2ObjcClassInfo _ARLimits = { 2, "Limits", "im.actor.runtime.bser", NULL, 0x10, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARLimits;
}

@end


#line 11
void ARLimits_init(ARLimits *self) {
  (void) NSObject_init(self);
}


#line 11
ARLimits *new_ARLimits_init() {
  ARLimits *self = [ARLimits alloc];
  ARLimits_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARLimits)

#pragma clang diagnostic pop
