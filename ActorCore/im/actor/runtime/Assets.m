//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/Assets.java
//

#include "J2ObjC_source.h"
#include "im/actor/runtime/Assets.h"
#include "im/actor/runtime/AssetsRuntime.h"
#include "im/actor/runtime/AssetsRuntimeProvider.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

static id<ARAssetsRuntime> ARAssets_assetsRuntime_;
J2OBJC_STATIC_FIELD_GETTER(ARAssets, assetsRuntime_, id<ARAssetsRuntime>)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/Assets.java"

J2OBJC_INITIALIZED_DEFN(ARAssets)

@implementation ARAssets


#line 7
+ (jboolean)hasAssetWithNSString:(NSString *)name {
  return ARAssets_hasAssetWithNSString_(name);
}

+ (NSString *)loadAssetWithNSString:(NSString *)name {
  return ARAssets_loadAssetWithNSString_(name);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARAssets_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ARAssets class]) {
    ARAssets_assetsRuntime_ = new_ARAssetsRuntimeProvider_init();
    J2OBJC_SET_INITIALIZED(ARAssets)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasAssetWithNSString:", "hasAsset", "Z", 0x9, NULL, NULL },
    { "loadAssetWithNSString:", "loadAsset", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "assetsRuntime_", NULL, 0x1a, "Lim.actor.runtime.AssetsRuntime;", &ARAssets_assetsRuntime_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARAssets = { 2, "Assets", "im.actor.runtime", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARAssets;
}

@end


#line 7
jboolean ARAssets_hasAssetWithNSString_(NSString *name) {
  ARAssets_initialize();
  
#line 8
  return [((id<ARAssetsRuntime>) nil_chk(ARAssets_assetsRuntime_)) hasAssetWithNSString:name];
}


#line 11
NSString *ARAssets_loadAssetWithNSString_(NSString *name) {
  ARAssets_initialize();
  
#line 12
  return [((id<ARAssetsRuntime>) nil_chk(ARAssets_assetsRuntime_)) loadAssetWithNSString:name];
}

void ARAssets_init(ARAssets *self) {
  (void) NSObject_init(self);
}

ARAssets *new_ARAssets_init() {
  ARAssets *self = [ARAssets alloc];
  ARAssets_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARAssets)

#pragma clang diagnostic pop
