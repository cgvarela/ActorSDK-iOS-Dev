//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/markdown/MarkdownParser.java
//

#ifndef _ImActorRuntimeMarkdownMarkdownParser_H_
#define _ImActorRuntimeMarkdownMarkdownParser_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ARMDDocument;

#define ARMarkdownParser_MODE_FULL 0
#define ARMarkdownParser_MODE_LITE 1
#define ARMarkdownParser_MODE_ONLY_LINKS 2

@interface ARMarkdownParser : NSObject

+ (jint)MODE_FULL;

+ (jint)MODE_LITE;

+ (jint)MODE_ONLY_LINKS;

#pragma mark Public

- (instancetype)initWithInt:(jint)mode;

/*!
 @brief Parsing markdown document
 @param text markdown text
 @return parsed document
 */
- (ARMDDocument *)processDocumentWithNSString:(NSString *)text;

@end

J2OBJC_EMPTY_STATIC_INIT(ARMarkdownParser)

J2OBJC_STATIC_FIELD_GETTER(ARMarkdownParser, MODE_FULL, jint)

J2OBJC_STATIC_FIELD_GETTER(ARMarkdownParser, MODE_LITE, jint)

J2OBJC_STATIC_FIELD_GETTER(ARMarkdownParser, MODE_ONLY_LINKS, jint)

FOUNDATION_EXPORT void ARMarkdownParser_initWithInt_(ARMarkdownParser *self, jint mode);

FOUNDATION_EXPORT ARMarkdownParser *new_ARMarkdownParser_initWithInt_(jint mode) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARMarkdownParser)

@compatibility_alias ImActorRuntimeMarkdownMarkdownParser ARMarkdownParser;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeMarkdownMarkdownParser_H_
