//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/markdown/MDCode.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/markdown/MDCode.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARMDCode () {
 @public
  NSString *code_;
}

@end

J2OBJC_FIELD_SETTER(ARMDCode, code_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/markdown/MDCode.java"


#line 3
@implementation ARMDCode


#line 7
- (instancetype)initWithNSString:(NSString *)code {
  ARMDCode_initWithNSString_(self, code);
  return self;
}


#line 11
- (NSString *)getCode {
  return code_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "MDCode", NULL, 0x1, NULL, NULL },
    { "getCode", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "code_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARMDCode = { 2, "MDCode", "im.actor.runtime.markdown", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARMDCode;
}

@end


#line 7
void ARMDCode_initWithNSString_(ARMDCode *self, NSString *code) {
  (void) NSObject_init(self);
  
#line 8
  self->code_ = code;
}


#line 7
ARMDCode *new_ARMDCode_initWithNSString_(NSString *code) {
  ARMDCode *self = [ARMDCode alloc];
  ARMDCode_initWithNSString_(self, code);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARMDCode)

#pragma clang diagnostic pop
