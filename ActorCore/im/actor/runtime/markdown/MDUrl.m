//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/markdown/MDUrl.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/markdown/MDText.h"
#include "im/actor/runtime/markdown/MDUrl.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARMDUrl () {
 @public
  NSString *urlTitle_;
  NSString *url_;
}

@end

J2OBJC_FIELD_SETTER(ARMDUrl, urlTitle_, NSString *)
J2OBJC_FIELD_SETTER(ARMDUrl, url_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/markdown/MDUrl.java"


#line 3
@implementation ARMDUrl


#line 8
- (instancetype)initWithNSString:(NSString *)urlTitle
                    withNSString:(NSString *)url {
  ARMDUrl_initWithNSString_withNSString_(self, urlTitle, url);
  return self;
}


#line 13
- (NSString *)getUrlTitle {
  return urlTitle_;
}

- (NSString *)getUrl {
  return url_;
}


#line 22
- (NSString *)toMarkdown {
  return JreStrcat("C$$$C", '[', urlTitle_, @"](", url_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "MDUrl", NULL, 0x1, NULL, NULL },
    { "getUrlTitle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toMarkdown", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "urlTitle_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "url_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARMDUrl = { 2, "MDUrl", "im.actor.runtime.markdown", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARMDUrl;
}

@end


#line 8
void ARMDUrl_initWithNSString_withNSString_(ARMDUrl *self, NSString *urlTitle, NSString *url) {
  (void) ARMDText_init(self);
  
#line 9
  self->urlTitle_ = urlTitle;
  self->url_ = url;
}


#line 8
ARMDUrl *new_ARMDUrl_initWithNSString_withNSString_(NSString *urlTitle, NSString *url) {
  ARMDUrl *self = [ARMDUrl alloc];
  ARMDUrl_initWithNSString_withNSString_(self, urlTitle, url);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARMDUrl)

#pragma clang diagnostic pop
