//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/collections/ContainerHelpers.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/collections/ContainerHelpers.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/collections/ContainerHelpers.java"

J2OBJC_INITIALIZED_DEFN(ARContainerHelpers)

IOSBooleanArray *ARContainerHelpers_EMPTY_BOOLEANS_;
IOSIntArray *ARContainerHelpers_EMPTY_INTS_;
IOSLongArray *ARContainerHelpers_EMPTY_LONGS_;
IOSObjectArray *ARContainerHelpers_EMPTY_OBJECTS_;


#line 19
@implementation ARContainerHelpers

+ (IOSBooleanArray *)EMPTY_BOOLEANS {
  return ARContainerHelpers_EMPTY_BOOLEANS_;
}

+ (IOSIntArray *)EMPTY_INTS {
  return ARContainerHelpers_EMPTY_INTS_;
}

+ (IOSLongArray *)EMPTY_LONGS {
  return ARContainerHelpers_EMPTY_LONGS_;
}

+ (IOSObjectArray *)EMPTY_OBJECTS {
  return ARContainerHelpers_EMPTY_OBJECTS_;
}


#line 26
+ (jint)binarySearchWithIntArray:(IOSIntArray *)array
                         withInt:(jint)size
                         withInt:(jint)value {
  return ARContainerHelpers_binarySearchWithIntArray_withInt_withInt_(array, size, value);
}


#line 45
+ (jint)binarySearchWithLongArray:(IOSLongArray *)array
                          withInt:(jint)size
                         withLong:(jlong)value {
  return ARContainerHelpers_binarySearchWithLongArray_withInt_withLong_(array, size, value);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARContainerHelpers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ARContainerHelpers class]) {
    ARContainerHelpers_EMPTY_BOOLEANS_ = [IOSBooleanArray newArrayWithLength:
#line 20
    0];
    ARContainerHelpers_EMPTY_INTS_ = [IOSIntArray newArrayWithLength:
#line 21
    0];
    ARContainerHelpers_EMPTY_LONGS_ = [IOSLongArray newArrayWithLength:
#line 22
    0];
    ARContainerHelpers_EMPTY_OBJECTS_ = [IOSObjectArray newArrayWithLength:
#line 23
    0 type:NSObject_class_()];
    J2OBJC_SET_INITIALIZED(ARContainerHelpers)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "binarySearchWithIntArray:withInt:withInt:", "binarySearch", "I", 0x8, NULL, NULL },
    { "binarySearchWithLongArray:withInt:withLong:", "binarySearch", "I", 0x8, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_BOOLEANS_", NULL, 0x18, "[Z", &ARContainerHelpers_EMPTY_BOOLEANS_, NULL, .constantValue.asLong = 0 },
    { "EMPTY_INTS_", NULL, 0x18, "[I", &ARContainerHelpers_EMPTY_INTS_, NULL, .constantValue.asLong = 0 },
    { "EMPTY_LONGS_", NULL, 0x18, "[J", &ARContainerHelpers_EMPTY_LONGS_, NULL, .constantValue.asLong = 0 },
    { "EMPTY_OBJECTS_", NULL, 0x18, "[Ljava.lang.Object;", &ARContainerHelpers_EMPTY_OBJECTS_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARContainerHelpers = { 2, "ContainerHelpers", "im.actor.runtime.collections", NULL, 0x0, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARContainerHelpers;
}

@end


#line 26
jint ARContainerHelpers_binarySearchWithIntArray_withInt_withInt_(IOSIntArray *array, jint size, jint value) {
  ARContainerHelpers_initialize();
  
#line 27
  jint lo = 0;
  jint hi = size - 1;
  
#line 30
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jint midVal = IOSIntArray_Get(nil_chk(array), mid);
    
#line 34
    if (midVal < value) {
      lo = mid + 1;
    }
    else
#line 36
    if (midVal > value) {
      hi = mid - 1;
    }
    else {
      
#line 39
      return mid;
    }
  }
  return ~lo;
}


#line 45
jint ARContainerHelpers_binarySearchWithLongArray_withInt_withLong_(IOSLongArray *array, jint size, jlong value) {
  ARContainerHelpers_initialize();
  
#line 46
  jint lo = 0;
  jint hi = size - 1;
  
#line 49
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jlong midVal = IOSLongArray_Get(nil_chk(array), mid);
    
#line 53
    if (midVal < value) {
      lo = mid + 1;
    }
    else
#line 55
    if (midVal > value) {
      hi = mid - 1;
    }
    else {
      
#line 58
      return mid;
    }
  }
  return ~lo;
}

void ARContainerHelpers_init(ARContainerHelpers *self) {
  (void) NSObject_init(self);
}

ARContainerHelpers *new_ARContainerHelpers_init() {
  ARContainerHelpers *self = [ARContainerHelpers alloc];
  ARContainerHelpers_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARContainerHelpers)

#pragma clang diagnostic pop
