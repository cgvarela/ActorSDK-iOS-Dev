//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/ActorSystem.java
//

#ifndef _ImActorRuntimeActorsActorSystem_H_
#define _ImActorRuntimeActorsActorSystem_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ARActorDispatcher;
@class ARActorRef;
@class ARActorSelection;
@class ARProps;
@protocol ARTraceInterface;

/*!
 @brief Entry point for Actor Model, creates all actors and dispatchers
 */
@interface ARActorSystem : NSObject

#pragma mark Public

/*!
 @brief Creating new actor system
 */
- (instancetype)init;

/*!
 @brief Creating new actor system
 */
- (instancetype)initWithBoolean:(jboolean)addDefaultDispatcher;

- (ARActorRef *)actorOfWithARActorSelection:(ARActorSelection *)selection;

/*!
 @brief Creating or getting existing actor from actor props
 @param props Actor Props
 @param path  Actor Path
 @return ActorRef
 */
- (ARActorRef *)actorOfWithARProps:(ARProps *)props
                      withNSString:(NSString *)path;

/*!
 @brief Adding dispatcher with threads count = <code>Runtime.getRuntime().availableProcessors()</code>
 @param dispatcherId dispatcher id
 */
- (void)addDispatcherWithNSString:(NSString *)dispatcherId;

/*!
 @brief Registering custom dispatcher
 @param dispatcherId dispatcher id
 @param dispatcher   dispatcher object
 */
- (void)addDispatcherWithNSString:(NSString *)dispatcherId
            withARActorDispatcher:(ARActorDispatcher *)dispatcher;

/*!
 @brief Adding dispatcher with specific threads count
 @param dispatcherId dispatcher id
 @param threadsCount threads count
 */
- (void)addDispatcherWithNSString:(NSString *)dispatcherId
                          withInt:(jint)threadsCount;

/*!
 @brief Getting current trace interface for actor system
 @return trace interface
 */
- (id<ARTraceInterface>)getTraceInterface;

/*!
 @brief Setting current trace interface for actor system
 @param traceInterface trace interface
 */
- (void)setTraceInterfaceWithARTraceInterface:(id<ARTraceInterface>)traceInterface;

/*!
 @brief Main actor system
 @return ActorSystem
 */
+ (ARActorSystem *)system;

@end

J2OBJC_STATIC_INIT(ARActorSystem)

FOUNDATION_EXPORT ARActorSystem *ARActorSystem_system();

FOUNDATION_EXPORT void ARActorSystem_init(ARActorSystem *self);

FOUNDATION_EXPORT ARActorSystem *new_ARActorSystem_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ARActorSystem_initWithBoolean_(ARActorSystem *self, jboolean addDefaultDispatcher);

FOUNDATION_EXPORT ARActorSystem *new_ARActorSystem_initWithBoolean_(jboolean addDefaultDispatcher) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARActorSystem)

@compatibility_alias ImActorRuntimeActorsActorSystem ARActorSystem;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeActorsActorSystem_H_
