//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/Props.java
//

#ifndef _ImActorRuntimeActorsProps_H_
#define _ImActorRuntimeActorsProps_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ARActor;
@class ARMailbox;
@class ARMailboxesQueue;
@class IOSClass;
@protocol ARActorCreator;
@protocol ARMailboxCreator;

/*!
 @brief <p>Props is a configuration class to specify options for the creation of actors, think of it as an immutable and
 thus freely shareable recipe for creating an actor including associated dispatcher information.
 </p>
 For more information you may read about <a href="http://doc.akka.io/docs/akka/2.3.5/java/untyped-actors.html">Akka Props</a>.
 */
@interface ARProps : NSObject

#pragma mark Public

/*!
 @brief Changing dispatcher
 @param dispatcher dispatcher id
 @return this
 */
- (ARProps *)changeDispatcherWithNSString:(NSString *)dispatcher;

/*!
 @brief Creating actor from Props
 @return Actor
 @throws Exception
 */
- (id)create;

/*!
 @brief Create props from Actor creator
 @param clazz   Actor class
 @param creator Actor creator class
 @return Props object
 */
+ (ARProps *)createWithIOSClass:(IOSClass *)clazz
             withARActorCreator:(id<ARActorCreator>)creator;

/*!
 @brief Create props from Actor creator with custom mailbox
 @param clazz   Actor class
 @param creator Actor creator class
 @return Props object
 */
+ (ARProps *)createWithIOSClass:(IOSClass *)clazz
             withARActorCreator:(id<ARActorCreator>)creator
           withARMailboxCreator:(id<ARMailboxCreator>)mailboxCreator;

/*!
 @brief Creating mailbox for actor
 @param queue queue of mailboxes
 @return mailbox
 */
- (ARMailbox *)createMailboxWithARMailboxesQueue:(ARMailboxesQueue *)queue;

/*!
 @brief Getting dispatcher id if available
 @return the dispatcher
 */
- (NSString *)getDispatcher;

@end

J2OBJC_EMPTY_STATIC_INIT(ARProps)

FOUNDATION_EXPORT ARProps *ARProps_createWithIOSClass_withARActorCreator_(IOSClass *clazz, id<ARActorCreator> creator);

FOUNDATION_EXPORT ARProps *ARProps_createWithIOSClass_withARActorCreator_withARMailboxCreator_(IOSClass *clazz, id<ARActorCreator> creator, id<ARMailboxCreator> mailboxCreator);

J2OBJC_TYPE_LITERAL_HEADER(ARProps)

@compatibility_alias ImActorRuntimeActorsProps ARProps;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeActorsProps_H_
