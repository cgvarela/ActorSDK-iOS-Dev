//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/dispatch/DispatchResult.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/actors/dispatch/DispatchResult.h"
#include "im/actor/runtime/threading/ThreadLocalCompat.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ImActorRuntimeActorsDispatchDispatchResult () {
 @public
  jboolean isResult_;
  id res_;
  jlong delay_;
}

@end

J2OBJC_FIELD_SETTER(ImActorRuntimeActorsDispatchDispatchResult, res_, id)

static ARThreadLocalCompat *ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_;
J2OBJC_STATIC_FIELD_GETTER(ImActorRuntimeActorsDispatchDispatchResult, FREE_RESULTS_, ARThreadLocalCompat *)
J2OBJC_STATIC_FIELD_SETTER(ImActorRuntimeActorsDispatchDispatchResult, FREE_RESULTS_, ARThreadLocalCompat *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/dispatch/DispatchResult.java"

J2OBJC_INITIALIZED_DEFN(ImActorRuntimeActorsDispatchDispatchResult)


#line 9
@implementation ImActorRuntimeActorsDispatchDispatchResult


#line 13
+ (ImActorRuntimeActorsDispatchDispatchResult *)resultWithId:(id)res {
  return ImActorRuntimeActorsDispatchDispatchResult_resultWithId_(res);
}


#line 24
+ (ImActorRuntimeActorsDispatchDispatchResult *)delayWithLong:(jlong)delay {
  return ImActorRuntimeActorsDispatchDispatchResult_delayWithLong_(delay);
}


#line 40
- (instancetype)initWithBoolean:(jboolean)isResult
                         withId:(id)res
                       withLong:(jlong)delay {
  ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(self, isResult, res, delay);
  return self;
}


#line 46
- (void)updateWithBoolean:(jboolean)isResult
                   withId:(id)res
                 withLong:(jlong)delay {
  self->isResult_ = isResult;
  self->res_ = res;
  self->delay_ = delay;
}


#line 52
- (jboolean)isResult {
  return isResult_;
}

- (id)getRes {
  return res_;
}

- (jlong)getDelay {
  return delay_;
}

- (void)recycle {
  [((ARThreadLocalCompat *) nil_chk(ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_)) setWithId:self];
}

+ (void)initialize {
  if (self == [ImActorRuntimeActorsDispatchDispatchResult class]) {
    ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_ = ARRuntime_createThreadLocal();
    J2OBJC_SET_INITIALIZED(ImActorRuntimeActorsDispatchDispatchResult)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "resultWithId:", "result", "Lim.actor.runtime.actors.dispatch.DispatchResult;", 0x9, NULL, NULL },
    { "delayWithLong:", "delay", "Lim.actor.runtime.actors.dispatch.DispatchResult;", 0x9, NULL, NULL },
    { "initWithBoolean:withId:withLong:", "DispatchResult", NULL, 0x0, NULL, NULL },
    { "updateWithBoolean:withId:withLong:", "update", "V", 0x0, NULL, NULL },
    { "isResult", NULL, "Z", 0x1, NULL, NULL },
    { "getRes", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getDelay", NULL, "J", 0x1, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FREE_RESULTS_", NULL, 0xa, "Lim.actor.runtime.threading.ThreadLocalCompat;", &ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_, "Lim/actor/runtime/threading/ThreadLocalCompat<Lim/actor/runtime/actors/dispatch/DispatchResult;>;", .constantValue.asLong = 0 },
    { "isResult_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "res_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "delay_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ImActorRuntimeActorsDispatchDispatchResult = { 2, "DispatchResult", "im.actor.runtime.actors.dispatch", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ImActorRuntimeActorsDispatchDispatchResult;
}

@end


#line 13
ImActorRuntimeActorsDispatchDispatchResult *ImActorRuntimeActorsDispatchDispatchResult_resultWithId_(id res) {
  ImActorRuntimeActorsDispatchDispatchResult_initialize();
  
#line 14
  ImActorRuntimeActorsDispatchDispatchResult *result = [((ARThreadLocalCompat *) nil_chk(ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_)) get];
  if (result != nil) {
    [ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_ remove];
    [result updateWithBoolean:true withId:res withLong:0];
  }
  else {
    
#line 19
    result = new_ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(true, res, 0);
  }
  return result;
}


#line 24
ImActorRuntimeActorsDispatchDispatchResult *ImActorRuntimeActorsDispatchDispatchResult_delayWithLong_(jlong delay) {
  ImActorRuntimeActorsDispatchDispatchResult_initialize();
  
#line 25
  ImActorRuntimeActorsDispatchDispatchResult *result = [((ARThreadLocalCompat *) nil_chk(ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_)) get];
  if (result != nil) {
    [ImActorRuntimeActorsDispatchDispatchResult_FREE_RESULTS_ remove];
    [result updateWithBoolean:false withId:nil withLong:delay];
  }
  else {
    
#line 30
    result = new_ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(false, nil, delay);
  }
  return result;
}


#line 40
void ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(ImActorRuntimeActorsDispatchDispatchResult *self, jboolean isResult, id res, jlong delay) {
  (void) NSObject_init(self);
  
#line 41
  self->isResult_ = isResult;
  self->res_ = res;
  self->delay_ = delay;
}


#line 40
ImActorRuntimeActorsDispatchDispatchResult *new_ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(jboolean isResult, id res, jlong delay) {
  ImActorRuntimeActorsDispatchDispatchResult *self = [ImActorRuntimeActorsDispatchDispatchResult alloc];
  ImActorRuntimeActorsDispatchDispatchResult_initWithBoolean_withId_withLong_(self, isResult, res, delay);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeActorsDispatchDispatchResult)

#pragma clang diagnostic pop
