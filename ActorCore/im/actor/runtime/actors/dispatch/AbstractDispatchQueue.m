//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/dispatch/AbstractDispatchQueue.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/actors/dispatch/AbstractDispatchQueue.h"
#include "im/actor/runtime/actors/dispatch/DispatchResult.h"
#include "im/actor/runtime/actors/dispatch/QueueListener.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ImActorRuntimeActorsDispatchAbstractDispatchQueue () {
 @public
  id<ImActorRuntimeActorsDispatchQueueListener> listener_;
}

@end

J2OBJC_FIELD_SETTER(ImActorRuntimeActorsDispatchAbstractDispatchQueue, listener_, id<ImActorRuntimeActorsDispatchQueueListener>)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/actors/dispatch/AbstractDispatchQueue.java"


#line 11
@implementation ImActorRuntimeActorsDispatchAbstractDispatchQueue

+ (jlong)FOREVER {
  return ImActorRuntimeActorsDispatchAbstractDispatchQueue_FOREVER;
}


#line 30
- (ImActorRuntimeActorsDispatchDispatchResult *)dispatchWithLong:(jlong)time {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 35
- (void)notifyQueueChanged {
  id<ImActorRuntimeActorsDispatchQueueListener> lListener = listener_;
  if (lListener != nil) {
    [lListener onQueueChanged];
  }
}

- (ImActorRuntimeActorsDispatchDispatchResult *)resultWithId:(id)obj {
  return ImActorRuntimeActorsDispatchDispatchResult_resultWithId_(obj);
}

- (ImActorRuntimeActorsDispatchDispatchResult *)delayWithLong:(jlong)delay {
  return ImActorRuntimeActorsDispatchDispatchResult_delayWithLong_(delay);
}


#line 55
- (id<ImActorRuntimeActorsDispatchQueueListener>)getListener {
  return listener_;
}


#line 64
- (void)setListenerWithImActorRuntimeActorsDispatchQueueListener:(id<ImActorRuntimeActorsDispatchQueueListener>)listener {
  self->listener_ = listener;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ImActorRuntimeActorsDispatchAbstractDispatchQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithLong:", "dispatch", "Lim.actor.runtime.actors.dispatch.DispatchResult;", 0x401, NULL, NULL },
    { "notifyQueueChanged", NULL, "V", 0x4, NULL, NULL },
    { "resultWithId:", "result", "Lim.actor.runtime.actors.dispatch.DispatchResult;", 0x4, NULL, "(TT;)Lim/actor/runtime/actors/dispatch/DispatchResult;" },
    { "delayWithLong:", "delay", "Lim.actor.runtime.actors.dispatch.DispatchResult;", 0x4, NULL, NULL },
    { "getListener", NULL, "Lim.actor.runtime.actors.dispatch.QueueListener;", 0x1, NULL, NULL },
    { "setListenerWithImActorRuntimeActorsDispatchQueueListener:", "setListener", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FOREVER", "FOREVER", 0x1c, "J", NULL, NULL, .constantValue.asLong = ImActorRuntimeActorsDispatchAbstractDispatchQueue_FOREVER },
    { "listener_", NULL, 0x2, "Lim.actor.runtime.actors.dispatch.QueueListener;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ImActorRuntimeActorsDispatchAbstractDispatchQueue = { 2, "AbstractDispatchQueue", "im.actor.runtime.actors.dispatch", NULL, 0x401, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_ImActorRuntimeActorsDispatchAbstractDispatchQueue;
}

@end

void ImActorRuntimeActorsDispatchAbstractDispatchQueue_init(ImActorRuntimeActorsDispatchAbstractDispatchQueue *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorRuntimeActorsDispatchAbstractDispatchQueue)

#pragma clang diagnostic pop
