//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/ValueModel.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "com/google/j2objc/annotations/ObjectiveCName.h"
#include "im/actor/runtime/mvvm/Value.h"
#include "im/actor/runtime/mvvm/ValueModel.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARValueModel () {
 @public
  id value_;
}

@end

J2OBJC_FIELD_SETTER(ARValueModel, value_, id)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/ValueModel.java"


#line 6
@implementation ARValueModel

@synthesize value = value_;


#line 11
- (instancetype)initWithNSString:(NSString *)name
                          withId:(id)defaultValue {
  ARValueModel_initWithNSString_withId_(self, name, defaultValue);
  return self;
}

- (id)get {
  return value_;
}


#line 29
- (jboolean)changeWithValue:(id)value {
  if (self->value_ != nil && value != nil && [value isEqual:self->value_]) {
    return false;
  }
  
#line 35
  self->value_ = value;
  
#line 37
  [self notifyWithId:value];
  
#line 39
  return true;
}


#line 43
- (jboolean)changeNoNotificationWithValue:(id)value {
  if (self->value_ != nil && value != nil && [value isEqual:self->value_]) {
    return false;
  }
  
#line 49
  self->value_ = value;
  
#line 51
  return true;
}

- (jboolean)changeInUIThreadWithValue:(id)value {
  if (self->value_ != nil && value != nil && [value isEqual:self->value_]) {
    return false;
  }
  
#line 60
  self->value_ = value;
  
#line 62
  [self notifyInMainThreadWithId:value];
  
#line 64
  return true;
}


#line 71
- (void)forceNotify {
  [self notifyWithId:value_];
}

+ (IOSObjectArray *)__annotations_changeWithId_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"changeWithValue:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_changeNoNotificationWithId_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"changeNoNotificationWithValue:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_changeInUIThreadWithId_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"changeInUIThreadWithValue:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_forceNotify {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"forceNotify"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withId:", "ValueModel", NULL, 0x1, NULL, "(Ljava/lang/String;TT;)V" },
    { "get", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "changeWithValue:", "change", "Z", 0x1, NULL, "(TT;)Z" },
    { "changeNoNotificationWithValue:", "changeNoNotification", "Z", 0x1, NULL, "(TT;)Z" },
    { "changeInUIThreadWithValue:", "changeInUIThread", "Z", 0x4, NULL, "(TT;)Z" },
    { "forceNotify", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _ARValueModel = { 2, "ValueModel", "im.actor.runtime.mvvm", NULL, 0x1, 6, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lim/actor/runtime/mvvm/Value<TT;>;" };
  return &_ARValueModel;
}

@end


#line 11
void ARValueModel_initWithNSString_withId_(ARValueModel *self, NSString *name, id defaultValue) {
  (void) ARValue_initWithNSString_(self, name);
  self->value_ = defaultValue;
}


#line 11
ARValueModel *new_ARValueModel_initWithNSString_withId_(NSString *name, id defaultValue) {
  ARValueModel *self = [ARValueModel alloc];
  ARValueModel_initWithNSString_withId_(self, name, defaultValue);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARValueModel)

#pragma clang diagnostic pop
