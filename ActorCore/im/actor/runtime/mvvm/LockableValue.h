//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/LockableValue.java
//

#ifndef _ImActorRuntimeMvvmLockableValue_H_
#define _ImActorRuntimeMvvmLockableValue_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include "im/actor/runtime/mvvm/Value.h"

@interface ARLockableValue : ARValue

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                     withARValue:(ARValue *)baseValue;

/*!
 @brief Can be executed only between create/release lock calls
 */
- (void)changeWithId:(id)obj;

- (jint)createLock;

- (void)destroy;

- (id)get;

- (void)releaseLockWithInt:(jint)id_;

#pragma mark Protected

- (id)getModifiedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ARLockableValue)

FOUNDATION_EXPORT void ARLockableValue_initWithNSString_withARValue_(ARLockableValue *self, NSString *name, ARValue *baseValue);

FOUNDATION_EXPORT ARLockableValue *new_ARLockableValue_initWithNSString_withARValue_(NSString *name, ARValue *baseValue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARLockableValue)

@compatibility_alias ImActorRuntimeMvvmLockableValue ARLockableValue;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeMvvmLockableValue_H_
