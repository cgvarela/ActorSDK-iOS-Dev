//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/Value.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSObjectArray.h>
#include <j2objc/J2ObjC_source.h>
#include "com/google/j2objc/annotations/ObjectiveCName.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/mvvm/Value.h"
#include "im/actor/runtime/mvvm/ValueChangedListener.h"
#include <j2objc/java/lang/Runnable.h>
#include <j2objc/java/util/ArrayList.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARValue () {
 @public
  JavaUtilArrayList *listeners_;
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(ARValue, listeners_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ARValue, name_, NSString *)

@interface ARValue_$1 : NSObject < JavaLangRunnable > {
 @public
  ARValue *this$0_;
  id val$value_;
}

- (void)run;

- (instancetype)initWithARValue:(ARValue *)outer$
                         withId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ARValue_$1)

J2OBJC_FIELD_SETTER(ARValue_$1, this$0_, ARValue *)
J2OBJC_FIELD_SETTER(ARValue_$1, val$value_, id)

__attribute__((unused)) static void ARValue_$1_initWithARValue_withId_(ARValue_$1 *self, ARValue *outer$, id capture$0);

__attribute__((unused)) static ARValue_$1 *new_ARValue_$1_initWithARValue_withId_(ARValue *outer$, id capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARValue_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/Value.java"


#line 12
@implementation ARValue


#line 23
- (instancetype)initWithNSString:(NSString *)name {
  ARValue_initWithNSString_(self, name);
  return self;
}


#line 33
- (id)get {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 41
- (NSString *)getName {
  return name_;
}


#line 51
- (void)subscribeWithListener:(id<ARValueChangedListener>)listener {
  [self subscribeWithListener:listener notify:true];
}


#line 62
- (void)subscribeWithListener:(id<ARValueChangedListener>)listener
                       notify:(jboolean)notify {
  ARRuntime_checkMainThread();
  
#line 65
  if ([((JavaUtilArrayList *) nil_chk(listeners_)) containsWithId:listener]) {
    return;
  }
  [listeners_ addWithId:listener];
  if (notify) {
    [((id<ARValueChangedListener>) nil_chk(listener)) onChanged:[self get] withModel:self];
  }
}


#line 80
- (void)unsubscribeWithListener:(id<ARValueChangedListener>)listener {
  ARRuntime_checkMainThread();
  
#line 83
  [((JavaUtilArrayList *) nil_chk(listeners_)) removeWithId:listener];
}


#line 91
- (void)notifyWithId:(id)value {
  ARRuntime_postToMainThreadWithJavaLangRunnable_(new_ARValue_$1_initWithARValue_withId_(self, value));
}


#line 106
- (void)notifyInMainThreadWithId:(id)value {
  {
    IOSObjectArray *a__ = [listeners_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((JavaUtilArrayList *) nil_chk(listeners_)) size] type:ARValueChangedListener_class_()]];
    id<ARValueChangedListener> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ARValueChangedListener> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ARValueChangedListener> listener = *b__++;
      
#line 109
      [((id<ARValueChangedListener>) nil_chk(listener)) onChanged:value withModel:self];
    }
  }
}

+ (IOSObjectArray *)__annotations_get {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"get"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_subscribeWithARValueChangedListener_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"subscribeWithListener:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_subscribeWithARValueChangedListener_withBoolean_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"subscribeWithListener:notify:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_unsubscribeWithARValueChangedListener_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"unsubscribeWithListener:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Value", NULL, 0x1, NULL, NULL },
    { "get", NULL, "TT;", 0x401, NULL, "()TT;" },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "subscribeWithListener:", "subscribe", "V", 0x1, NULL, NULL },
    { "subscribeWithListener:notify:", "subscribe", "V", 0x1, NULL, NULL },
    { "unsubscribeWithListener:", "unsubscribe", "V", 0x1, NULL, NULL },
    { "notifyWithId:", "notify", "V", 0x4, NULL, "(TT;)V" },
    { "notifyInMainThreadWithId:", "notifyInMainThread", "V", 0x4, NULL, "(TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listeners_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lim/actor/runtime/mvvm/ValueChangedListener<TT;>;>;", .constantValue.asLong = 0 },
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARValue = { 2, "Value", "im.actor.runtime.mvvm", NULL, 0x401, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_ARValue;
}

@end


#line 23
void ARValue_initWithNSString_(ARValue *self, NSString *name) {
  (void) NSObject_init(self);
  self->listeners_ = new_JavaUtilArrayList_init();
  
#line 24
  self->name_ = name;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARValue)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/mvvm/Value.java"

@implementation ARValue_$1


#line 94
- (void)run {
  [this$0_ notifyInMainThreadWithId:val$value_];
}

- (instancetype)initWithARValue:(ARValue *)outer$
                         withId:(id)capture$0 {
  ARValue_$1_initWithARValue_withId_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithARValue:withId:", "", NULL, 0x0, NULL, "(Lim/actor/runtime/mvvm/Value;TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.runtime.mvvm.Value;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$value_", NULL, 0x1012, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ARValue", "notifyWithId:" };
  static const J2ObjcClassInfo _ARValue_$1 = { 2, "", "im.actor.runtime.mvvm", "Value", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ARValue_$1;
}

@end

void ARValue_$1_initWithARValue_withId_(ARValue_$1 *self, ARValue *outer$, id capture$0) {
  self->this$0_ = outer$;
  self->val$value_ = capture$0;
  (void) NSObject_init(self);
}

ARValue_$1 *new_ARValue_$1_initWithARValue_withId_(ARValue *outer$, id capture$0) {
  ARValue_$1 *self = [ARValue_$1 alloc];
  ARValue_$1_initWithARValue_withId_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARValue_$1)

#pragma clang diagnostic pop
