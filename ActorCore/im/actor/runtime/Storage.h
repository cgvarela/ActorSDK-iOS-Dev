//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/Storage.java
//

#ifndef _ImActorRuntimeStorage_H_
#define _ImActorRuntimeStorage_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ARMVVMCollection;
@protocol ARBserCreator;
@protocol AREnginesRuntime;
@protocol ARFileSystemReference;
@protocol ARFileSystemRuntime;
@protocol ARIndexStorage;
@protocol ARKeyValueStorage;
@protocol ARListEngine;
@protocol ARPlatformDisplayList;
@protocol ARPreferencesStorage;
@protocol ARStorageRuntime;
@protocol ARValueModelCreator;

@interface ARStorage : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<ARFileSystemReference>)commitTempFileWithARFileSystemReference:(id<ARFileSystemReference>)sourceFile
                                                            withLong:(jlong)fileId
                                                        withNSString:(NSString *)fileName;

+ (id<ARPlatformDisplayList>)createDisplayListWithARListEngine:(id<ARListEngine>)engine
                                                   withBoolean:(jboolean)isSharedInstance
                                                  withNSString:(NSString *)entityName;

+ (id<ARIndexStorage>)createIndexWithNSString:(NSString *)name;

+ (id<ARKeyValueStorage>)createKeyValueWithNSString:(NSString *)name;

+ (ARMVVMCollection *)createKeyValueWithNSString:(NSString *)name
                         withARValueModelCreator:(id<ARValueModelCreator>)wrapperCreator
                               withARBserCreator:(id<ARBserCreator>)creator;

+ (id<ARListEngine>)createListWithNSString:(NSString *)name
                         withARBserCreator:(id<ARBserCreator>)creator;

+ (id<ARPreferencesStorage>)createPreferencesStorage;

+ (id<ARFileSystemReference>)createTempFile;

+ (id<ARFileSystemReference>)fileFromDescriptorWithNSString:(NSString *)descriptor;

+ (id<AREnginesRuntime>)getEnginesRuntime;

+ (id<ARFileSystemRuntime>)getFileSystemRuntime;

+ (id<ARStorageRuntime>)getStorageRuntime;

+ (jboolean)isFsPersistent;

+ (void)resetStorage;

@end

J2OBJC_STATIC_INIT(ARStorage)

FOUNDATION_EXPORT id<ARStorageRuntime> ARStorage_getStorageRuntime();

FOUNDATION_EXPORT id<AREnginesRuntime> ARStorage_getEnginesRuntime();

FOUNDATION_EXPORT id<ARFileSystemRuntime> ARStorage_getFileSystemRuntime();

FOUNDATION_EXPORT id<ARPreferencesStorage> ARStorage_createPreferencesStorage();

FOUNDATION_EXPORT id<ARIndexStorage> ARStorage_createIndexWithNSString_(NSString *name);

FOUNDATION_EXPORT id<ARKeyValueStorage> ARStorage_createKeyValueWithNSString_(NSString *name);

FOUNDATION_EXPORT id<ARListEngine> ARStorage_createListWithNSString_withARBserCreator_(NSString *name, id<ARBserCreator> creator);

FOUNDATION_EXPORT ARMVVMCollection *ARStorage_createKeyValueWithNSString_withARValueModelCreator_withARBserCreator_(NSString *name, id<ARValueModelCreator> wrapperCreator, id<ARBserCreator> creator);

FOUNDATION_EXPORT id<ARPlatformDisplayList> ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_(id<ARListEngine> engine, jboolean isSharedInstance, NSString *entityName);

FOUNDATION_EXPORT void ARStorage_resetStorage();

FOUNDATION_EXPORT id<ARFileSystemReference> ARStorage_createTempFile();

FOUNDATION_EXPORT jboolean ARStorage_isFsPersistent();

FOUNDATION_EXPORT id<ARFileSystemReference> ARStorage_fileFromDescriptorWithNSString_(NSString *descriptor);

FOUNDATION_EXPORT id<ARFileSystemReference> ARStorage_commitTempFileWithARFileSystemReference_withLong_withNSString_(id<ARFileSystemReference> sourceFile, jlong fileId, NSString *fileName);

FOUNDATION_EXPORT void ARStorage_init(ARStorage *self);

FOUNDATION_EXPORT ARStorage *new_ARStorage_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARStorage)

@compatibility_alias ImActorRuntimeStorage ARStorage;


#pragma clang diagnostic pop
#endif // _ImActorRuntimeStorage_H_
