//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/bouncycastle/RuntimeRandomProvider.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/Crypto.h"
#include "im/actor/runtime/crypto/bouncycastle/RuntimeRandomProvider.h"
#include <j2objc/java/math/BigInteger.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/bouncycastle/RuntimeRandomProvider.java"

J2OBJC_INITIALIZED_DEFN(ARRuntimeRandomProvider)

ARRuntimeRandomProvider *ARRuntimeRandomProvider_INSTANCE_;


#line 7
@implementation ARRuntimeRandomProvider

+ (ARRuntimeRandomProvider *)INSTANCE {
  return ARRuntimeRandomProvider_INSTANCE_;
}


#line 12
- (IOSByteArray *)randomBytesWithInt:(jint)length {
  return ARCrypto_randomBytesWithInt_(length);
}


#line 17
- (jint)randomIntWithInt:(jint)maxValue {
  return ARCrypto_randomIntWithInt_(maxValue);
}


#line 22
- (void)nextBytesWithByteArray:(IOSByteArray *)data {
  ARCrypto_nextBytesWithByteArray_(data);
}


#line 27
- (JavaMathBigInteger *)generateBigIntegerWithInt:(jint)numBits {
  return ARCrypto_generateBigIntegerWithInt_(numBits);
}


#line 32
- (JavaMathBigInteger *)generateBigIntegerWithInt:(jint)numBits
                                          withInt:(jint)certanity {
  return ARCrypto_generateBigIntegerWithInt_withInt_(numBits, certanity);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARRuntimeRandomProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ARRuntimeRandomProvider class]) {
    ARRuntimeRandomProvider_INSTANCE_ = new_ARRuntimeRandomProvider_init();
    J2OBJC_SET_INITIALIZED(ARRuntimeRandomProvider)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "randomBytesWithInt:", "randomBytes", "[B", 0x1, NULL, NULL },
    { "randomIntWithInt:", "randomInt", "I", 0x1, NULL, NULL },
    { "nextBytesWithByteArray:", "nextBytes", "V", 0x1, NULL, NULL },
    { "generateBigIntegerWithInt:", "generateBigInteger", "Ljava.math.BigInteger;", 0x1, NULL, NULL },
    { "generateBigIntegerWithInt:withInt:", "generateBigInteger", "Ljava.math.BigInteger;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x19, "Lim.actor.runtime.crypto.bouncycastle.RuntimeRandomProvider;", &ARRuntimeRandomProvider_INSTANCE_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARRuntimeRandomProvider = { 2, "RuntimeRandomProvider", "im.actor.runtime.crypto.bouncycastle", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARRuntimeRandomProvider;
}

@end

void ARRuntimeRandomProvider_init(ARRuntimeRandomProvider *self) {
  (void) NSObject_init(self);
}

ARRuntimeRandomProvider *new_ARRuntimeRandomProvider_init() {
  ARRuntimeRandomProvider *self = [ARRuntimeRandomProvider alloc];
  ARRuntimeRandomProvider_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRuntimeRandomProvider)

#pragma clang diagnostic pop
