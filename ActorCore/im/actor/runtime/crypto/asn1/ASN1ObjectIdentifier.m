//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1ObjectIdentifier.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include "im/actor/runtime/crypto/asn1/ASN1ObjectIdentifier.h"
#include "im/actor/runtime/crypto/asn1/ASN1Primitive.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARASN1ObjectIdentifier () {
 @public
  NSString *identifier_;
}

@end

J2OBJC_FIELD_SETTER(ARASN1ObjectIdentifier, identifier_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1ObjectIdentifier.java"


#line 12
@implementation ARASN1ObjectIdentifier

+ (ARASN1ObjectIdentifier *)readObjectIdentifierWithARDataInput:(ARDataInput *)dataInput {
  return ARASN1ObjectIdentifier_readObjectIdentifierWithARDataInput_(dataInput);
}


#line 50
- (instancetype)initWithNSString:(NSString *)identifier {
  ARASN1ObjectIdentifier_initWithNSString_(self, identifier);
  return self;
}


#line 54
- (NSString *)getIdentifier {
  return identifier_;
}


#line 59
- (void)serializeWithARDataOutput:(ARDataOutput *)dataOutput {
  
#line 61
  [((ARDataOutput *) nil_chk(dataOutput)) writeByteWithInt:ARASN1Primitive_TAG_OBJECT_IDENTIFIER];
  
#line 63
  ARDataOutput *content = new_ARDataOutput_init();
  
#line 65
  IOSObjectArray *items = [((NSString *) nil_chk(identifier_)) split:@"\\."];
  jint val1 = JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(nil_chk(items), 0));
  jint val2 = JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(items, 1));
  
#line 72
  [content writeByteWithInt:val1 * 40 + val2];
  
#line 74
  for (jint i = 2; i < items->size_; i++) {
    jlong value = JavaLangLong_parseLongWithNSString_(IOSObjectArray_Get(items, i));
    
#line 77
    IOSByteArray *result = [IOSByteArray newArrayWithLength:9];
    jint pos = 8;
    *IOSByteArray_GetRef(result, pos) = (jbyte) ((jint) value & (jint) 0x7f);
    while (value >= (JreLShift64(1LL, 7))) {
      JreRShiftAssignLong(&value, 7);
      *IOSByteArray_GetRef(result, --pos) = (jbyte) (((jint) value & (jint) 0x7f) | (jint) 0x80);
    }
    [content writeBytesWithByteArray:result withInt:pos withInt:9 - pos];
  }
  
#line 87
  IOSByteArray *contentV = [content toByteArray];
  [dataOutput writeASN1LengthWithInt:((IOSByteArray *) nil_chk(contentV))->size_];
  [dataOutput writeBytesWithByteArray:contentV withInt:0 withInt:contentV->size_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readObjectIdentifierWithARDataInput:", "readObjectIdentifier", "Lim.actor.runtime.crypto.asn1.ASN1ObjectIdentifier;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:", "ASN1ObjectIdentifier", NULL, 0x1, NULL, NULL },
    { "getIdentifier", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "serializeWithARDataOutput:", "serialize", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "identifier_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARASN1ObjectIdentifier = { 2, "ASN1ObjectIdentifier", "im.actor.runtime.crypto.asn1", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARASN1ObjectIdentifier;
}

@end


#line 14
ARASN1ObjectIdentifier *ARASN1ObjectIdentifier_readObjectIdentifierWithARDataInput_(ARDataInput *dataInput) {
  ARASN1ObjectIdentifier_initialize();
  
#line 15
  NSString *res;
  
#line 18
  jint firstByte = [((ARDataInput *) nil_chk(dataInput)) readByte];
  jlong firstValue = firstByte & (jint) 0x7F;
  
#line 21
  if (firstValue < 40) {
    res = @"0";
  }
  else
#line 23
  if (firstValue < 80) {
    res = JreStrcat("$J", @"1.", (firstValue - 40));
  }
  else {
    
#line 26
    res = JreStrcat("$J", @"2.", (firstValue - 80));
  }
  
#line 30
  jlong value = 0;
  while (![dataInput isEOF]) {
    jint b = [dataInput readByte];
    value += (b & (jint) 0x7f);
    
#line 36
    if ((b & (jint) 0x80) == 0) {
      (void) JreStrAppendStrong(&res, "C", '.');
      (void) JreStrAppendStrong(&res, "J", value);
      value = 0;
    }
    else {
      
#line 41
      JreLShiftAssignLong(&value, 7);
    }
  }
  
#line 45
  return new_ARASN1ObjectIdentifier_initWithNSString_(res);
}


#line 50
void ARASN1ObjectIdentifier_initWithNSString_(ARASN1ObjectIdentifier *self, NSString *identifier) {
  (void) ARASN1Primitive_init(self);
  
#line 51
  self->identifier_ = identifier;
}


#line 50
ARASN1ObjectIdentifier *new_ARASN1ObjectIdentifier_initWithNSString_(NSString *identifier) {
  ARASN1ObjectIdentifier *self = [ARASN1ObjectIdentifier alloc];
  ARASN1ObjectIdentifier_initWithNSString_(self, identifier);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARASN1ObjectIdentifier)

#pragma clang diagnostic pop
