//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1Integer.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include "im/actor/runtime/crypto/asn1/ASN1Integer.h"
#include "im/actor/runtime/crypto/asn1/ASN1Primitive.h"
#include <j2objc/java/io/IOException.h>
#include <j2objc/java/math/BigInteger.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARASN1Integer () {
 @public
  IOSByteArray *data_;
}

@end

J2OBJC_FIELD_SETTER(ARASN1Integer, data_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1Integer.java"


#line 13
@implementation ARASN1Integer

+ (ARASN1Integer *)readIntegerWithARDataInput:(ARDataInput *)dataInput {
  return ARASN1Integer_readIntegerWithARDataInput_(dataInput);
}


#line 21
- (instancetype)initWithByteArray:(IOSByteArray *)data {
  ARASN1Integer_initWithByteArray_(self, data);
  return self;
}


#line 25
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)data {
  ARASN1Integer_initWithJavaMathBigInteger_(self, data);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 29
- (instancetype)init {
  ARASN1Integer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 33
- (instancetype)initWithInt:(jint)val {
  ARASN1Integer_initWithInt_(self, val);
  return self;
}


#line 37
- (IOSByteArray *)getData {
  return data_;
}

- (JavaMathBigInteger *)asBigInteger {
  
#line 43
  return new_JavaMathBigInteger_initWithByteArray_(data_);
}

- (void)serializeWithARDataOutput:(ARDataOutput *)dataOutput {
  [((ARDataOutput *) nil_chk(dataOutput)) writeByteWithInt:ARASN1Primitive_TAG_INTEGER];
  [dataOutput writeASN1LengthWithInt:((IOSByteArray *) nil_chk(data_))->size_];
  [dataOutput writeBytesWithByteArray:data_ withInt:0 withInt:data_->size_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readIntegerWithARDataInput:", "readInteger", "Lim.actor.runtime.crypto.asn1.ASN1Integer;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithByteArray:", "ASN1Integer", NULL, 0x1, NULL, NULL },
    { "initWithJavaMathBigInteger:", "ASN1Integer", NULL, 0x1, NULL, NULL },
    { "init", "ASN1Integer", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "ASN1Integer", NULL, 0x1, NULL, NULL },
    { "getData", NULL, "[B", 0x1, NULL, NULL },
    { "asBigInteger", NULL, "Ljava.math.BigInteger;", 0x1, NULL, NULL },
    { "serializeWithARDataOutput:", "serialize", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARASN1Integer = { 2, "ASN1Integer", "im.actor.runtime.crypto.asn1", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARASN1Integer;
}

@end


#line 15
ARASN1Integer *ARASN1Integer_readIntegerWithARDataInput_(ARDataInput *dataInput) {
  ARASN1Integer_initialize();
  
#line 16
  return new_ARASN1Integer_initWithByteArray_([dataInput readBytesWithInt:[((ARDataInput *) nil_chk(dataInput)) getRemaining]]);
}


#line 21
void ARASN1Integer_initWithByteArray_(ARASN1Integer *self, IOSByteArray *data) {
  (void) ARASN1Primitive_init(self);
  
#line 22
  self->data_ = data;
}


#line 21
ARASN1Integer *new_ARASN1Integer_initWithByteArray_(IOSByteArray *data) {
  ARASN1Integer *self = [ARASN1Integer alloc];
  ARASN1Integer_initWithByteArray_(self, data);
  return self;
}


#line 25
void ARASN1Integer_initWithJavaMathBigInteger_(ARASN1Integer *self, JavaMathBigInteger *data) {
  (void) ARASN1Primitive_init(self);
  
#line 26
  self->data_ = [((JavaMathBigInteger *) nil_chk(data)) toByteArray];
}


#line 25
ARASN1Integer *new_ARASN1Integer_initWithJavaMathBigInteger_(JavaMathBigInteger *data) {
  ARASN1Integer *self = [ARASN1Integer alloc];
  ARASN1Integer_initWithJavaMathBigInteger_(self, data);
  return self;
}


#line 29
void ARASN1Integer_init(ARASN1Integer *self) {
  (void) ARASN1Primitive_init(self);
  
#line 30
  self->data_ = [((JavaMathBigInteger *) nil_chk(JreLoadStatic(JavaMathBigInteger, ZERO_))) toByteArray];
}


#line 29
ARASN1Integer *new_ARASN1Integer_init() {
  ARASN1Integer *self = [ARASN1Integer alloc];
  ARASN1Integer_init(self);
  return self;
}


#line 33
void ARASN1Integer_initWithInt_(ARASN1Integer *self, jint val) {
  (void) ARASN1Primitive_init(self);
  
#line 34
  self->data_ = [new_JavaMathBigInteger_initWithNSString_(JreStrcat("I", val)) toByteArray];
}


#line 33
ARASN1Integer *new_ARASN1Integer_initWithInt_(jint val) {
  ARASN1Integer *self = [ARASN1Integer alloc];
  ARASN1Integer_initWithInt_(self, val);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARASN1Integer)

#pragma clang diagnostic pop
