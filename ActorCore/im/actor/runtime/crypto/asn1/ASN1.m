//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/crypto/asn1/ASN1.h"
#include "im/actor/runtime/crypto/asn1/ASN1BitString.h"
#include "im/actor/runtime/crypto/asn1/ASN1Integer.h"
#include "im/actor/runtime/crypto/asn1/ASN1Null.h"
#include "im/actor/runtime/crypto/asn1/ASN1ObjectIdentifier.h"
#include "im/actor/runtime/crypto/asn1/ASN1OctetString.h"
#include "im/actor/runtime/crypto/asn1/ASN1Primitive.h"
#include "im/actor/runtime/crypto/asn1/ASN1Sequence.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1.java"


#line 11
@implementation ARASN1


#line 12
+ (ARASN1Primitive *)readObjectWithByteArray:(IOSByteArray *)sourceData {
  return ARASN1_readObjectWithByteArray_(sourceData);
}

+ (ARASN1Primitive *)readObjectWithByteArray:(IOSByteArray *)sourceData
                                     withInt:(jint)offset
                                     withInt:(jint)len {
  return ARASN1_readObjectWithByteArray_withInt_withInt_(sourceData, offset, len);
}


#line 20
+ (ARASN1Primitive *)readObjectWithARDataInput:(ARDataInput *)dataInput {
  return ARASN1_readObjectWithARDataInput_(dataInput);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARASN1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readObjectWithByteArray:", "readObject", "Lim.actor.runtime.crypto.asn1.ASN1Primitive;", 0x9, "Ljava.io.IOException;", NULL },
    { "readObjectWithByteArray:withInt:withInt:", "readObject", "Lim.actor.runtime.crypto.asn1.ASN1Primitive;", 0x9, "Ljava.io.IOException;", NULL },
    { "readObjectWithARDataInput:", "readObject", "Lim.actor.runtime.crypto.asn1.ASN1Primitive;", 0x9, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARASN1 = { 2, "ASN1", "im.actor.runtime.crypto.asn1", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARASN1;
}

@end


#line 12
ARASN1Primitive *ARASN1_readObjectWithByteArray_(IOSByteArray *sourceData) {
  ARASN1_initialize();
  
#line 13
  return ARASN1_readObjectWithByteArray_withInt_withInt_(sourceData, 0, ((IOSByteArray *) nil_chk(sourceData))->size_);
}


#line 16
ARASN1Primitive *ARASN1_readObjectWithByteArray_withInt_withInt_(IOSByteArray *sourceData, jint offset, jint len) {
  ARASN1_initialize();
  
#line 17
  return ARASN1_readObjectWithARDataInput_(new_ARDataInput_initWithByteArray_withInt_withInt_(sourceData, offset, len));
}


#line 20
ARASN1Primitive *ARASN1_readObjectWithARDataInput_(ARDataInput *dataInput) {
  ARASN1_initialize();
  
#line 21
  jint tag = [((ARDataInput *) nil_chk(dataInput)) readASN1Tag];
  jint tagNumber = [dataInput readASN1TagNumberWithInt:tag];
  jboolean isConstructed = (tag & ARASN1Primitive_TAG_CONSTRUCTED) != 0;
  jint length = [dataInput readASN1Length];
  
#line 28
  if ((tag & ARASN1Primitive_TAG_APPLICATION) != 0) {
    
#line 30
    @throw new_JavaIoIOException_init();
  }
  
#line 33
  if ((tag & ARASN1Primitive_TAG_TAGGED) != 0) {
    
#line 35
    @throw new_JavaIoIOException_init();
  }
  
#line 38
  ARDataInput *objDataInput;
  if (length > 0) {
    objDataInput = new_ARDataInput_initWithByteArray_withInt_withInt_([dataInput getData], [dataInput getOffset], length);
    [dataInput skipWithInt:length];
  }
  else {
    
#line 43
    objDataInput = dataInput;
  }
  
#line 46
  switch (tagNumber) {
    case ARASN1Primitive_TAG_SEQUENCE:
    return ARASN1Sequence_readSequenceWithARDataInput_(objDataInput);
    case ARASN1Primitive_TAG_INTEGER:
    return ARASN1Integer_readIntegerWithARDataInput_(objDataInput);
    case ARASN1Primitive_TAG_OBJECT_IDENTIFIER:
    return ARASN1ObjectIdentifier_readObjectIdentifierWithARDataInput_(objDataInput);
    case ARASN1Primitive_TAG_NULL:
    return new_ARASN1Null_init();
    case ARASN1Primitive_TAG_BIT_STRING:
    return ARASN1BitString_readBitStringWithARDataInput_(objDataInput);
    case ARASN1Primitive_TAG_OCTET_STRING:
    return ARASN1OctetString_readOctetStringWithARDataInput_(objDataInput);
    default:
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Unsupported tag number #", tagNumber));
  }
}

void ARASN1_init(ARASN1 *self) {
  (void) NSObject_init(self);
}

ARASN1 *new_ARASN1_init() {
  ARASN1 *self = [ARASN1 alloc];
  ARASN1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARASN1)

#pragma clang diagnostic pop
