//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1Sequence.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSObjectArray.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include "im/actor/runtime/crypto/asn1/ASN1.h"
#include "im/actor/runtime/crypto/asn1/ASN1Primitive.h"
#include "im/actor/runtime/crypto/asn1/ASN1Sequence.h"
#include <j2objc/java/io/IOException.h>
#include <j2objc/java/util/ArrayList.h>
#include <j2objc/java/util/List.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARASN1Sequence () {
 @public
  JavaUtilArrayList *sequence_;
}

@end

J2OBJC_FIELD_SETTER(ARASN1Sequence, sequence_, JavaUtilArrayList *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/asn1/ASN1Sequence.java"


#line 14
@implementation ARASN1Sequence

+ (ARASN1Sequence *)readSequenceWithARDataInput:(ARDataInput *)dataInput {
  return ARASN1Sequence_readSequenceWithARDataInput_(dataInput);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 26
- (instancetype)init {
  ARASN1Sequence_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 30
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)sequence {
  ARASN1Sequence_initWithJavaUtilList_(self, sequence);
  return self;
}


#line 34
- (instancetype)initWithARASN1PrimitiveArray:(IOSObjectArray *)sequence {
  ARASN1Sequence_initWithARASN1PrimitiveArray_(self, sequence);
  return self;
}


#line 41
- (void)addWithARASN1Primitive:(ARASN1Primitive *)item {
  [((JavaUtilArrayList *) nil_chk(sequence_)) addWithId:item];
}

- (JavaUtilArrayList *)getSequence {
  return sequence_;
}

- (jint)size {
  return [((JavaUtilArrayList *) nil_chk(sequence_)) size];
}

- (ARASN1Primitive *)getWithInt:(jint)index {
  return [((JavaUtilArrayList *) nil_chk(sequence_)) getWithInt:index];
}


#line 58
- (void)serializeWithARDataOutput:(ARDataOutput *)dataOutput {
  [((ARDataOutput *) nil_chk(dataOutput)) writeByteWithInt:ARASN1Primitive_TAG_SEQUENCE | ARASN1Primitive_TAG_CONSTRUCTED];
  ARDataOutput *content = new_ARDataOutput_init();
  for (ARASN1Primitive * __strong primitive in nil_chk(sequence_)) {
    [((ARASN1Primitive *) nil_chk(primitive)) serializeWithARDataOutput:content];
  }
  IOSByteArray *contentV = [content toByteArray];
  [dataOutput writeASN1LengthWithInt:((IOSByteArray *) nil_chk(contentV))->size_];
  [dataOutput writeBytesWithByteArray:contentV withInt:0 withInt:contentV->size_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readSequenceWithARDataInput:", "readSequence", "Lim.actor.runtime.crypto.asn1.ASN1Sequence;", 0x9, "Ljava.io.IOException;", NULL },
    { "init", "ASN1Sequence", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilList:", "ASN1Sequence", NULL, 0x1, NULL, NULL },
    { "initWithARASN1PrimitiveArray:", "ASN1Sequence", NULL, 0x81, NULL, NULL },
    { "addWithARASN1Primitive:", "add", "V", 0x1, NULL, NULL },
    { "getSequence", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lim.actor.runtime.crypto.asn1.ASN1Primitive;", 0x1, NULL, NULL },
    { "serializeWithARDataOutput:", "serialize", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sequence_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lim/actor/runtime/crypto/asn1/ASN1Primitive;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARASN1Sequence = { 2, "ASN1Sequence", "im.actor.runtime.crypto.asn1", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARASN1Sequence;
}

@end


#line 16
ARASN1Sequence *ARASN1Sequence_readSequenceWithARDataInput_(ARDataInput *dataInput) {
  ARASN1Sequence_initialize();
  
#line 17
  ARASN1Sequence *sequence = new_ARASN1Sequence_init();
  while (![((ARDataInput *) nil_chk(dataInput)) isEOF]) {
    [sequence addWithARASN1Primitive:ARASN1_readObjectWithARDataInput_(dataInput)];
  }
  return sequence;
}


#line 26
void ARASN1Sequence_init(ARASN1Sequence *self) {
  (void) ARASN1Primitive_init(self);
  
#line 27
  self->sequence_ = new_JavaUtilArrayList_init();
}


#line 26
ARASN1Sequence *new_ARASN1Sequence_init() {
  ARASN1Sequence *self = [ARASN1Sequence alloc];
  ARASN1Sequence_init(self);
  return self;
}


#line 30
void ARASN1Sequence_initWithJavaUtilList_(ARASN1Sequence *self, id<JavaUtilList> sequence) {
  (void) ARASN1Primitive_init(self);
  
#line 31
  self->sequence_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(sequence);
}


#line 30
ARASN1Sequence *new_ARASN1Sequence_initWithJavaUtilList_(id<JavaUtilList> sequence) {
  ARASN1Sequence *self = [ARASN1Sequence alloc];
  ARASN1Sequence_initWithJavaUtilList_(self, sequence);
  return self;
}


#line 34
void ARASN1Sequence_initWithARASN1PrimitiveArray_(ARASN1Sequence *self, IOSObjectArray *sequence) {
  (void) ARASN1Primitive_init(self);
  
#line 35
  self->sequence_ = new_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ =
#line 36
    sequence;
    ARASN1Primitive * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ARASN1Primitive * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ARASN1Primitive *p = *b__++;
      
#line 37
      [self->sequence_ addWithId:p];
    }
  }
}


#line 34
ARASN1Sequence *new_ARASN1Sequence_initWithARASN1PrimitiveArray_(IOSObjectArray *sequence) {
  ARASN1Sequence *self = [ARASN1Sequence alloc];
  ARASN1Sequence_initWithARASN1PrimitiveArray_(self, sequence);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARASN1Sequence)

#pragma clang diagnostic pop
