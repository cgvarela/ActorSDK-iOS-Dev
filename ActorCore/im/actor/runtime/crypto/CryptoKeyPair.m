//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/CryptoKeyPair.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/runtime/crypto/CryptoKeyPair.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARCryptoKeyPair () {
 @public
  IOSByteArray *publicKey_;
  IOSByteArray *privateKey_;
}

@end

J2OBJC_FIELD_SETTER(ARCryptoKeyPair, publicKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ARCryptoKeyPair, privateKey_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//im/actor/runtime/crypto/CryptoKeyPair.java"


#line 7
@implementation ARCryptoKeyPair


#line 11
- (instancetype)initWithByteArray:(IOSByteArray *)publicKey
                    withByteArray:(IOSByteArray *)privateKey {
  ARCryptoKeyPair_initWithByteArray_withByteArray_(self, publicKey, privateKey);
  return self;
}


#line 16
- (IOSByteArray *)getPublicKey {
  return publicKey_;
}

- (IOSByteArray *)getPrivateKey {
  return privateKey_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByteArray:withByteArray:", "CryptoKeyPair", NULL, 0x1, NULL, NULL },
    { "getPublicKey", NULL, "[B", 0x1, NULL, NULL },
    { "getPrivateKey", NULL, "[B", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "privateKey_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARCryptoKeyPair = { 2, "CryptoKeyPair", "im.actor.runtime.crypto", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARCryptoKeyPair;
}

@end


#line 11
void ARCryptoKeyPair_initWithByteArray_withByteArray_(ARCryptoKeyPair *self, IOSByteArray *publicKey, IOSByteArray *privateKey) {
  (void) NSObject_init(self);
  
#line 12
  self->publicKey_ = publicKey;
  self->privateKey_ = privateKey;
}


#line 11
ARCryptoKeyPair *new_ARCryptoKeyPair_initWithByteArray_withByteArray_(IOSByteArray *publicKey, IOSByteArray *privateKey) {
  ARCryptoKeyPair *self = [ARCryptoKeyPair alloc];
  ARCryptoKeyPair_initWithByteArray_withByteArray_(self, publicKey, privateKey);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARCryptoKeyPair)

#pragma clang diagnostic pop
