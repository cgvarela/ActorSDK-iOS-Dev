//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-cocoa/src/main/java//im/actor/core/CocoaMessenger.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/j2objc/annotations/ObjectiveCName.h"
#include "im/actor/core/CocoaMessenger.h"
#include "im/actor/core/Configuration.h"
#include "im/actor/core/Messenger.h"
#include "im/actor/core/entity/Dialog.h"
#include "im/actor/core/entity/Message.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/Modules.h"
#include "im/actor/core/modules/internal/DisplayLists.h"
#include "im/actor/core/modules/internal/MessagesModule.h"
#include "im/actor/runtime/generic/mvvm/BindedDisplayList.h"
#include "im/actor/runtime/mvvm/PlatformDisplayList.h"
#include "java/util/HashMap.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACCocoaMessenger () {
 @public
  ARBindedDisplayList *dialogList_;
  JavaUtilHashMap *messagesLists_;
}

@end

J2OBJC_FIELD_SETTER(ACCocoaMessenger, dialogList_, ARBindedDisplayList *)
J2OBJC_FIELD_SETTER(ACCocoaMessenger, messagesLists_, JavaUtilHashMap *)

@interface ACCocoaMessenger_$1 : NSObject < ARBindedDisplayList_BindHook > {
 @public
  ACCocoaMessenger *this$0_;
}

- (void)onScrolledToEnd;

- (void)onItemTouchedWithId:(ACDialog *)item;

- (instancetype)initWithACCocoaMessenger:(ACCocoaMessenger *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ACCocoaMessenger_$1)

J2OBJC_FIELD_SETTER(ACCocoaMessenger_$1, this$0_, ACCocoaMessenger *)

__attribute__((unused)) static void ACCocoaMessenger_$1_initWithACCocoaMessenger_(ACCocoaMessenger_$1 *self, ACCocoaMessenger *outer$);

__attribute__((unused)) static ACCocoaMessenger_$1 *new_ACCocoaMessenger_$1_initWithACCocoaMessenger_(ACCocoaMessenger *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACCocoaMessenger_$1)

@interface ACCocoaMessenger_$2 : NSObject < ARBindedDisplayList_BindHook > {
 @public
  ACCocoaMessenger *this$0_;
  ACPeer *val$peer_;
}

- (void)onScrolledToEnd;

- (void)onItemTouchedWithId:(ACMessage *)item;

- (instancetype)initWithACCocoaMessenger:(ACCocoaMessenger *)outer$
                              withACPeer:(ACPeer *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ACCocoaMessenger_$2)

J2OBJC_FIELD_SETTER(ACCocoaMessenger_$2, this$0_, ACCocoaMessenger *)
J2OBJC_FIELD_SETTER(ACCocoaMessenger_$2, val$peer_, ACPeer *)

__attribute__((unused)) static void ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(ACCocoaMessenger_$2 *self, ACCocoaMessenger *outer$, ACPeer *capture$0);

__attribute__((unused)) static ACCocoaMessenger_$2 *new_ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(ACCocoaMessenger *outer$, ACPeer *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACCocoaMessenger_$2)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-cocoa/src/main/java//im/actor/core/CocoaMessenger.java"


#line 16
@implementation ACCocoaMessenger


#line 27
- (instancetype)initWithConfiguration:(ACConfiguration *)configuration {
  ACCocoaMessenger_initWithConfiguration_(self, configuration);
  return self;
}

- (ARBindedDisplayList *)getDialogsDisplayList {
  if (dialogList_ == nil) {
    dialogList_ = (ARBindedDisplayList *) check_class_cast([((ACDisplayLists *) nil_chk([((ACModules *) nil_chk(modules_)) getDisplayListsModule])) getDialogsSharedList], [ARBindedDisplayList class]);
    [((ARBindedDisplayList *) nil_chk(dialogList_)) setBindHook:new_ACCocoaMessenger_$1_initWithACCocoaMessenger_(self)];
  }
  
#line 48
  return dialogList_;
}


#line 52
- (ARBindedDisplayList *)getMessageDisplayList:(ACPeer *)peer {
  if (![((JavaUtilHashMap *) nil_chk(messagesLists_)) containsKeyWithId:peer]) {
    ARBindedDisplayList *list = (ARBindedDisplayList *) check_class_cast([((ACDisplayLists *) nil_chk([((ACModules *) nil_chk(modules_)) getDisplayListsModule])) getMessagesSharedListWithACPeer:peer], [ARBindedDisplayList class]);
    [((ARBindedDisplayList *) nil_chk(list)) setBindHook:new_ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(self, peer)];
    
#line 68
    (void) [messagesLists_ putWithId:peer withId:list];
  }
  
#line 71
  return [messagesLists_ getWithId:peer];
}


#line 75
- (ARBindedDisplayList *)buildSearchDisplayList {
  return (ARBindedDisplayList *) check_class_cast([((ACDisplayLists *) nil_chk([((ACModules *) nil_chk(modules_)) getDisplayListsModule])) buildSearchListWithBoolean:false], [ARBindedDisplayList class]);
}


#line 80
- (ARBindedDisplayList *)buildContactsDisplayList {
  return (ARBindedDisplayList *) check_class_cast([((ACDisplayLists *) nil_chk([((ACModules *) nil_chk(modules_)) getDisplayListsModule])) buildContactListWithBoolean:false], [ARBindedDisplayList class]);
}

+ (IOSObjectArray *)__annotations_initWithACConfiguration_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"initWithConfiguration:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getDialogsDisplayList {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getDialogsDisplayList"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getMessageDisplayListWithACPeer_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"getMessageDisplayList:"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_buildSearchDisplayList {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"buildSearchDisplayList"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_buildContactsDisplayList {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[ComGoogleJ2objcAnnotationsObjectiveCName alloc] initWithValue:@"buildContactsDisplayList"] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithConfiguration:", "CocoaMessenger", NULL, 0x1, NULL, NULL },
    { "getDialogsDisplayList", NULL, "Lim.actor.runtime.generic.mvvm.BindedDisplayList;", 0x1, NULL, NULL },
    { "getMessageDisplayList:", "getMessageDisplayList", "Lim.actor.runtime.generic.mvvm.BindedDisplayList;", 0x1, NULL, NULL },
    { "buildSearchDisplayList", NULL, "Lim.actor.runtime.generic.mvvm.BindedDisplayList;", 0x1, NULL, NULL },
    { "buildContactsDisplayList", NULL, "Lim.actor.runtime.generic.mvvm.BindedDisplayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dialogList_", NULL, 0x2, "Lim.actor.runtime.generic.mvvm.BindedDisplayList;", NULL, "Lim/actor/runtime/generic/mvvm/BindedDisplayList<Lim/actor/core/entity/Dialog;>;", .constantValue.asLong = 0 },
    { "messagesLists_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Lim/actor/runtime/generic/mvvm/BindedDisplayList<Lim/actor/core/entity/Message;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACCocoaMessenger = { 2, "CocoaMessenger", "im.actor.core", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACCocoaMessenger;
}

@end


#line 27
void ACCocoaMessenger_initWithConfiguration_(ACCocoaMessenger *self, ACConfiguration *configuration) {
  (void) ACMessenger_initWithConfiguration_(self, configuration);
  self->messagesLists_ = new_JavaUtilHashMap_init();
}


#line 27
ACCocoaMessenger *new_ACCocoaMessenger_initWithConfiguration_(ACConfiguration *configuration) {
  ACCocoaMessenger *self = [ACCocoaMessenger alloc];
  ACCocoaMessenger_initWithConfiguration_(self, configuration);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCocoaMessenger)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-cocoa/src/main/java//im/actor/core/CocoaMessenger.java"

@implementation ACCocoaMessenger_$1


#line 37
- (void)onScrolledToEnd {
  [((ACMessagesModule *) nil_chk([((ACModules *) nil_chk(this$0_->modules_)) getMessagesModule])) loadMoreDialogs];
}


#line 42
- (void)onItemTouchedWithId:(ACDialog *)item {
}

- (instancetype)initWithACCocoaMessenger:(ACCocoaMessenger *)outer$ {
  ACCocoaMessenger_$1_initWithACCocoaMessenger_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onScrolledToEnd", NULL, "V", 0x1, NULL, NULL },
    { "onItemTouchedWithId:", "onItemTouched", "V", 0x1, NULL, NULL },
    { "initWithACCocoaMessenger:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.CocoaMessenger;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACCocoaMessenger", "getDialogsDisplayList" };
  static const J2ObjcClassInfo _ACCocoaMessenger_$1 = { 2, "", "im.actor.core", "CocoaMessenger", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lim/actor/runtime/generic/mvvm/BindedDisplayList$BindHook<Lim/actor/core/entity/Dialog;>;" };
  return &_ACCocoaMessenger_$1;
}

@end

void ACCocoaMessenger_$1_initWithACCocoaMessenger_(ACCocoaMessenger_$1 *self, ACCocoaMessenger *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ACCocoaMessenger_$1 *new_ACCocoaMessenger_$1_initWithACCocoaMessenger_(ACCocoaMessenger *outer$) {
  ACCocoaMessenger_$1 *self = [ACCocoaMessenger_$1 alloc];
  ACCocoaMessenger_$1_initWithACCocoaMessenger_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCocoaMessenger_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-cocoa/src/main/java//im/actor/core/CocoaMessenger.java"

@implementation ACCocoaMessenger_$2


#line 57
- (void)onScrolledToEnd {
  [((ACMessagesModule *) nil_chk([((ACModules *) nil_chk(this$0_->modules_)) getMessagesModule])) loadMoreHistoryWithACPeer:val$peer_];
}


#line 62
- (void)onItemTouchedWithId:(ACMessage *)item {
  if ([((ACMessage *) nil_chk(item)) isOnServer]) {
    [((ACMessagesModule *) nil_chk([((ACModules *) nil_chk(this$0_->modules_)) getMessagesModule])) onMessageShownWithACPeer:val$peer_ withInt:[item getSenderId] withLong:[item getSortDate]];
  }
}

- (instancetype)initWithACCocoaMessenger:(ACCocoaMessenger *)outer$
                              withACPeer:(ACPeer *)capture$0 {
  ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onScrolledToEnd", NULL, "V", 0x1, NULL, NULL },
    { "onItemTouchedWithId:", "onItemTouched", "V", 0x1, NULL, NULL },
    { "initWithACCocoaMessenger:withACPeer:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.CocoaMessenger;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$peer_", NULL, 0x1012, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACCocoaMessenger", "getMessageDisplayList:" };
  static const J2ObjcClassInfo _ACCocoaMessenger_$2 = { 2, "", "im.actor.core", "CocoaMessenger", 0x8008, 3, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lim/actor/runtime/generic/mvvm/BindedDisplayList$BindHook<Lim/actor/core/entity/Message;>;" };
  return &_ACCocoaMessenger_$2;
}

@end

void ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(ACCocoaMessenger_$2 *self, ACCocoaMessenger *outer$, ACPeer *capture$0) {
  self->this$0_ = outer$;
  self->val$peer_ = capture$0;
  (void) NSObject_init(self);
}

ACCocoaMessenger_$2 *new_ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(ACCocoaMessenger *outer$, ACPeer *capture$0) {
  ACCocoaMessenger_$2 *self = [ACCocoaMessenger_$2 alloc];
  ACCocoaMessenger_$2_initWithACCocoaMessenger_withACPeer_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCocoaMessenger_$2)

#pragma clang diagnostic pop
