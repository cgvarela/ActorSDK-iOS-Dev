//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/utils/RandomUtils.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/modules/utils/RandomUtils.h"
#include "java/util/Random.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

static JavaUtilRandom *ACRandomUtils_RANDOM_;
J2OBJC_STATIC_FIELD_GETTER(ACRandomUtils, RANDOM_, JavaUtilRandom *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/utils/RandomUtils.java"

J2OBJC_INITIALIZED_DEFN(ACRandomUtils)


#line 9
@implementation ACRandomUtils


#line 13
+ (jlong)nextRid {
  return ACRandomUtils_nextRid();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACRandomUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ACRandomUtils class]) {
    ACRandomUtils_RANDOM_ = new_JavaUtilRandom_init();
    J2OBJC_SET_INITIALIZED(ACRandomUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "nextRid", NULL, "J", 0x29, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "RANDOM_", NULL, 0x1a, "Ljava.util.Random;", &ACRandomUtils_RANDOM_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACRandomUtils = { 2, "RandomUtils", "im.actor.core.modules.utils", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACRandomUtils;
}

@end


#line 13
jlong ACRandomUtils_nextRid() {
  ACRandomUtils_initialize();
  @synchronized(ACRandomUtils_class_()) {
    
#line 14
    return [((JavaUtilRandom *) nil_chk(ACRandomUtils_RANDOM_)) nextLong];
  }
}

void ACRandomUtils_init(ACRandomUtils *self) {
  (void) NSObject_init(self);
}

ACRandomUtils *new_ACRandomUtils_init() {
  ACRandomUtils *self = [ACRandomUtils alloc];
  ACRandomUtils_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACRandomUtils)

#pragma clang diagnostic pop
