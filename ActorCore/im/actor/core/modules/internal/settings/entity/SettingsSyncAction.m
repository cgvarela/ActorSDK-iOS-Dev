//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/settings/entity/SettingsSyncAction.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/modules/internal/settings/entity/SettingsSyncAction.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACSettingsSyncAction () {
 @public
  NSString *key_;
  NSString *value_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(ACSettingsSyncAction, key_, NSString *)
J2OBJC_FIELD_SETTER(ACSettingsSyncAction, value_, NSString *)

__attribute__((unused)) static void ACSettingsSyncAction_init(ACSettingsSyncAction *self);

__attribute__((unused)) static ACSettingsSyncAction *new_ACSettingsSyncAction_init() NS_RETURNS_RETAINED;

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/settings/entity/SettingsSyncAction.java"


#line 14
@implementation ACSettingsSyncAction

+ (ACSettingsSyncAction *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ACSettingsSyncAction_fromBytesWithByteArray_(data);
}


#line 23
- (instancetype)initWithNSString:(NSString *)key
                    withNSString:(NSString *)value {
  ACSettingsSyncAction_initWithNSString_withNSString_(self, key, value);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 28
- (instancetype)init {
  ACSettingsSyncAction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 32
- (NSString *)getKey {
  return key_;
}

- (NSString *)getValue {
  return value_;
}


#line 41
- (void)parseWithARBserValues:(ARBserValues *)values {
  key_ = [((ARBserValues *) nil_chk(values)) getStringWithInt:1];
  value_ = [values optStringWithInt:2];
}


#line 47
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:key_];
  if (value_ != nil) {
    [writer writeStringWithInt:2 withNSString:value_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.modules.internal.settings.entity.SettingsSyncAction;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withNSString:", "SettingsSyncAction", NULL, 0x1, NULL, NULL },
    { "init", "SettingsSyncAction", NULL, 0x2, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACSettingsSyncAction = { 2, "SettingsSyncAction", "im.actor.core.modules.internal.settings.entity", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACSettingsSyncAction;
}

@end


#line 16
ACSettingsSyncAction *ACSettingsSyncAction_fromBytesWithByteArray_(IOSByteArray *data) {
  ACSettingsSyncAction_initialize();
  
#line 17
  return ARBser_parseWithARBserObject_withByteArray_(new_ACSettingsSyncAction_init(), data);
}

void ACSettingsSyncAction_initWithNSString_withNSString_(ACSettingsSyncAction *self, NSString *key, NSString *value) {
  (void) ARBserObject_init(self);
  
#line 24
  self->key_ = key;
  self->value_ = value;
}


#line 23
ACSettingsSyncAction *new_ACSettingsSyncAction_initWithNSString_withNSString_(NSString *key, NSString *value) {
  ACSettingsSyncAction *self = [ACSettingsSyncAction alloc];
  ACSettingsSyncAction_initWithNSString_withNSString_(self, key, value);
  return self;
}


#line 28
void ACSettingsSyncAction_init(ACSettingsSyncAction *self) {
  (void) ARBserObject_init(self);
}


#line 28
ACSettingsSyncAction *new_ACSettingsSyncAction_init() {
  ACSettingsSyncAction *self = [ACSettingsSyncAction alloc];
  ACSettingsSyncAction_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACSettingsSyncAction)

#pragma clang diagnostic pop
