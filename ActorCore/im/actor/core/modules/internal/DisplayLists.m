//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/DisplayLists.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/entity/Contact.h"
#include "im/actor/core/entity/Dialog.h"
#include "im/actor/core/entity/Message.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/entity/SearchEntity.h"
#include "im/actor/core/modules/AbsModule.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/ContactsModule.h"
#include "im/actor/core/modules/internal/DisplayLists.h"
#include "im/actor/core/modules/internal/MessagesModule.h"
#include "im/actor/core/modules/internal/SearchModule.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/Storage.h"
#include "im/actor/runtime/mvvm/PlatformDisplayList.h"
#include "im/actor/runtime/storage/ListEngine.h"
#include <j2objc/java/util/HashMap.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACDisplayLists () {
 @public
  id<ARPlatformDisplayList> dialogGlobalList_;
  id<ARPlatformDisplayList> contactsGlobalList_;
  JavaUtilHashMap *chatsGlobalLists_;
  JavaUtilHashMap *chatsDocsGlobalLists_;
}

@end

J2OBJC_FIELD_SETTER(ACDisplayLists, dialogGlobalList_, id<ARPlatformDisplayList>)
J2OBJC_FIELD_SETTER(ACDisplayLists, contactsGlobalList_, id<ARPlatformDisplayList>)
J2OBJC_FIELD_SETTER(ACDisplayLists, chatsGlobalLists_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACDisplayLists, chatsDocsGlobalLists_, JavaUtilHashMap *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/DisplayLists.java"


#line 20
@implementation ACDisplayLists


#line 29
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context {
  ACDisplayLists_initWithACModuleContext_(self, context);
  return self;
}


#line 33
- (id<ARPlatformDisplayList>)getContactsSharedList {
  ARRuntime_checkMainThread();
  
#line 36
  if (contactsGlobalList_ == nil) {
    contactsGlobalList_ = [self buildContactListWithBoolean:true];
  }
  
#line 40
  return contactsGlobalList_;
}


#line 43
- (id<ARPlatformDisplayList>)getDialogsSharedList {
  ARRuntime_checkMainThread();
  
#line 46
  if (dialogGlobalList_ == nil) {
    dialogGlobalList_ = [self buildDialogsListWithBoolean:true];
  }
  
#line 50
  return dialogGlobalList_;
}


#line 53
- (id<ARPlatformDisplayList>)getMessagesSharedListWithACPeer:(ACPeer *)peer {
  ARRuntime_checkMainThread();
  
#line 56
  if (![((JavaUtilHashMap *) nil_chk(chatsGlobalLists_)) containsKeyWithId:peer]) {
    (void) [chatsGlobalLists_ putWithId:peer withId:[self buildChatListWithACPeer:peer withBoolean:true]];
  }
  
#line 60
  return [chatsGlobalLists_ getWithId:peer];
}


#line 63
- (id<ARPlatformDisplayList>)getDocsSharedListWithACPeer:(ACPeer *)peer {
  ARRuntime_checkMainThread();
  
#line 66
  if (![((JavaUtilHashMap *) nil_chk(chatsDocsGlobalLists_)) containsKeyWithId:peer]) {
    (void) [chatsDocsGlobalLists_ putWithId:peer withId:[self buildChatDocsListWithACPeer:peer withBoolean:true]];
  }
  
#line 70
  return [chatsDocsGlobalLists_ getWithId:peer];
}


#line 74
- (id<ARPlatformDisplayList>)buildDialogsListWithBoolean:(jboolean)isShared {
  ARRuntime_checkMainThread();
  
#line 77
  id<ARPlatformDisplayList> res = ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_([((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getDialogsEngine],
#line 78
  isShared, ACDialog_ENTITY_NAME_);
  
#line 80
  [((id<ARPlatformDisplayList>) nil_chk(res)) initTop];
  
#line 82
  return res;
}


#line 85
- (id<ARPlatformDisplayList>)buildContactListWithBoolean:(jboolean)isShared {
  ARRuntime_checkMainThread();
  
#line 88
  id<ARPlatformDisplayList> res = ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_([((ACContactsModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getContactsModule])) getContacts],
#line 89
  isShared, ACContact_ENTITY_NAME_);
  [((id<ARPlatformDisplayList>) nil_chk(res)) initTop];
  return res;
}


#line 94
- (id<ARPlatformDisplayList>)buildChatListWithACPeer:(ACPeer *)peer
                                         withBoolean:(jboolean)isShared {
  ARRuntime_checkMainThread();
  
#line 97
  id<ARPlatformDisplayList> res = ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_([((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getConversationEngineWithACPeer:peer],
#line 98
  isShared, ACMessage_ENTITY_NAME_);
  
#line 100
  jlong lastRead = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) loadReadStateWithACPeer:peer];
  
#line 102
  if (lastRead != 0) {
    [((id<ARPlatformDisplayList>) nil_chk(res)) initCenterWithLong:lastRead];
  }
  else {
    
#line 105
    [((id<ARPlatformDisplayList>) nil_chk(res)) initTop];
  }
  
#line 108
  return res;
}


#line 111
- (id<ARPlatformDisplayList>)buildChatDocsListWithACPeer:(ACPeer *)peer
                                             withBoolean:(jboolean)isShared {
  ARRuntime_checkMainThread();
  
#line 114
  id<ARPlatformDisplayList> res = ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_([((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getConversationDocsEngineWithACPeer:peer],
#line 115
  isShared, ACMessage_ENTITY_NAME_);
  
#line 117
  [((id<ARPlatformDisplayList>) nil_chk(res)) initTop];
  
#line 119
  return res;
}


#line 122
- (id<ARPlatformDisplayList>)buildSearchListWithBoolean:(jboolean)isGlobalList {
  ARRuntime_checkMainThread();
  
#line 125
  id<ARPlatformDisplayList> res = ARStorage_createDisplayListWithARListEngine_withBoolean_withNSString_([((ACSearchModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getSearchModule])) getSearchList],
#line 126
  isGlobalList, ACSearchEntity_ENTITY_NAME_);
  [((id<ARPlatformDisplayList>) nil_chk(res)) initEmpty];
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "DisplayLists", NULL, 0x1, NULL, NULL },
    { "getContactsSharedList", NULL, "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "getDialogsSharedList", NULL, "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "getMessagesSharedListWithACPeer:", "getMessagesSharedList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "getDocsSharedListWithACPeer:", "getDocsSharedList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "buildDialogsListWithBoolean:", "buildDialogsList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "buildContactListWithBoolean:", "buildContactList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "buildChatListWithACPeer:withBoolean:", "buildChatList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "buildChatDocsListWithACPeer:withBoolean:", "buildChatDocsList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
    { "buildSearchListWithBoolean:", "buildSearchList", "Lim.actor.runtime.mvvm.PlatformDisplayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dialogGlobalList_", NULL, 0x2, "Lim.actor.runtime.mvvm.PlatformDisplayList;", NULL, "Lim/actor/runtime/mvvm/PlatformDisplayList<Lim/actor/core/entity/Dialog;>;", .constantValue.asLong = 0 },
    { "contactsGlobalList_", NULL, 0x2, "Lim.actor.runtime.mvvm.PlatformDisplayList;", NULL, "Lim/actor/runtime/mvvm/PlatformDisplayList<Lim/actor/core/entity/Contact;>;", .constantValue.asLong = 0 },
    { "chatsGlobalLists_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Lim/actor/runtime/mvvm/PlatformDisplayList<Lim/actor/core/entity/Message;>;>;", .constantValue.asLong = 0 },
    { "chatsDocsGlobalLists_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Lim/actor/runtime/mvvm/PlatformDisplayList<Lim/actor/core/entity/Message;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDisplayLists = { 2, "DisplayLists", "im.actor.core.modules.internal", NULL, 0x1, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDisplayLists;
}

@end


#line 29
void ACDisplayLists_initWithACModuleContext_(ACDisplayLists *self, id<ACModuleContext> context) {
  (void) ACAbsModule_initWithACModuleContext_(self, context);
  self->chatsGlobalLists_ = new_JavaUtilHashMap_init();
  self->chatsDocsGlobalLists_ = new_JavaUtilHashMap_init();
}


#line 29
ACDisplayLists *new_ACDisplayLists_initWithACModuleContext_(id<ACModuleContext> context) {
  ACDisplayLists *self = [ACDisplayLists alloc];
  ACDisplayLists_initWithACModuleContext_(self, context);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDisplayLists)

#pragma clang diagnostic pop
