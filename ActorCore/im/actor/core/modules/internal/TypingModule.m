//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/TypingModule.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/AbsModule.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/TypingModule.h"
#include "im/actor/core/modules/internal/typing/OwnTypingActor.h"
#include "im/actor/core/modules/internal/typing/TypingActor.h"
#include "im/actor/core/viewmodel/GroupTypingVM.h"
#include "im/actor/core/viewmodel/UserTypingVM.h"
#include "im/actor/runtime/actors/ActorRef.h"
#include <j2objc/java/lang/Integer.h>
#include <j2objc/java/util/HashMap.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACTypingModule () {
 @public
  ARActorRef *ownTypingActor_;
  ARActorRef *typingActor_;
  JavaUtilHashMap *uids_;
  JavaUtilHashMap *groups_;
}

@end

J2OBJC_FIELD_SETTER(ACTypingModule, ownTypingActor_, ARActorRef *)
J2OBJC_FIELD_SETTER(ACTypingModule, typingActor_, ARActorRef *)
J2OBJC_FIELD_SETTER(ACTypingModule, uids_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACTypingModule, groups_, JavaUtilHashMap *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/TypingModule.java"


#line 18
@implementation ACTypingModule


#line 25
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context {
  ACTypingModule_initWithACModuleContext_(self, context);
  return self;
}


#line 32
- (ACGroupTypingVM *)getGroupTypingWithInt:(jint)gid {
  @synchronized(groups_) {
    if (![((JavaUtilHashMap *) nil_chk(groups_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(gid)]) {
      (void) [groups_ putWithId:JavaLangInteger_valueOfWithInt_(gid) withId:new_ACGroupTypingVM_initWithInt_(gid)];
    }
    return [groups_ getWithId:JavaLangInteger_valueOfWithInt_(gid)];
  }
}

- (ACUserTypingVM *)getTypingWithInt:(jint)uid {
  @synchronized(uids_) {
    if (![((JavaUtilHashMap *) nil_chk(uids_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(uid)]) {
      (void) [uids_ putWithId:JavaLangInteger_valueOfWithInt_(uid) withId:new_ACUserTypingVM_initWithInt_(uid)];
    }
    return [uids_ getWithId:JavaLangInteger_valueOfWithInt_(uid)];
  }
}

- (void)onTypingWithACPeer:(ACPeer *)peer {
  [((ARActorRef *) nil_chk(ownTypingActor_)) sendWithId:new_ACOwnTypingActor_Typing_initWithACPeer_(peer)];
}

- (void)resetModule {
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "TypingModule", NULL, 0x1, NULL, NULL },
    { "getGroupTypingWithInt:", "getGroupTyping", "Lim.actor.core.viewmodel.GroupTypingVM;", 0x1, NULL, NULL },
    { "getTypingWithInt:", "getTyping", "Lim.actor.core.viewmodel.UserTypingVM;", 0x1, NULL, NULL },
    { "onTypingWithACPeer:", "onTyping", "V", 0x1, NULL, NULL },
    { "resetModule", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ownTypingActor_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "typingActor_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "uids_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Integer;Lim/actor/core/viewmodel/UserTypingVM;>;", .constantValue.asLong = 0 },
    { "groups_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Integer;Lim/actor/core/viewmodel/GroupTypingVM;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACTypingModule = { 2, "TypingModule", "im.actor.core.modules.internal", NULL, 0x1, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACTypingModule;
}

@end


#line 25
void ACTypingModule_initWithACModuleContext_(ACTypingModule *self, id<ACModuleContext> context) {
  (void) ACAbsModule_initWithACModuleContext_(self, context);
  self->uids_ = new_JavaUtilHashMap_init();
  self->groups_ = new_JavaUtilHashMap_init();
  
#line 28
  self->ownTypingActor_ = ACOwnTypingActor_getWithACModuleContext_(context);
  self->typingActor_ = ACTypingActor_getWithACModuleContext_(context);
}


#line 25
ACTypingModule *new_ACTypingModule_initWithACModuleContext_(id<ACModuleContext> context) {
  ACTypingModule *self = [ACTypingModule alloc];
  ACTypingModule_initWithACModuleContext_(self, context);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACTypingModule)

#pragma clang diagnostic pop
