//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/notifications/entity/PendingNotification.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/entity/ContentDescription.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/internal/notifications/entity/PendingNotification.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACPendingNotification () {
 @public
  ACPeer *peer_;
  jint sender_;
  jlong date_;
  ACContentDescription *content_;
}

@end

J2OBJC_FIELD_SETTER(ACPendingNotification, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACPendingNotification, content_, ACContentDescription *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/notifications/entity/PendingNotification.java"


#line 15
@implementation ACPendingNotification


#line 21
- (instancetype)initWithACPeer:(ACPeer *)peer
                       withInt:(jint)sender
                      withLong:(jlong)date
      withACContentDescription:(ACContentDescription *)content {
  ACPendingNotification_initWithACPeer_withInt_withLong_withACContentDescription_(self, peer, sender, date, content);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 28
- (instancetype)init {
  ACPendingNotification_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 31
- (ACPeer *)getPeer {
  return peer_;
}

- (jint)getSender {
  return sender_;
}

- (jlong)getDate {
  return date_;
}

- (ACContentDescription *)getContent {
  return content_;
}


#line 48
- (void)parseWithARBserValues:(ARBserValues *)values {
  peer_ = ACPeer_fromUniqueIdWithLong_([((ARBserValues *) nil_chk(values)) getLongWithInt:1]);
  sender_ = [values getIntWithInt:2];
  date_ = [values getLongWithInt:4];
  content_ = ACContentDescription_fromBytesWithByteArray_([values getBytesWithInt:5]);
}


#line 56
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:[((ACPeer *) nil_chk(peer_)) getUnuqueId]];
  [writer writeIntWithInt:2 withInt:sender_];
  [writer writeLongWithInt:4 withLong:date_];
  [writer writeObjectWithInt:5 withARBserObject:content_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withInt:withLong:withACContentDescription:", "PendingNotification", NULL, 0x1, NULL, NULL },
    { "init", "PendingNotification", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getSender", NULL, "I", 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "getContent", NULL, "Lim.actor.core.entity.ContentDescription;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "sender_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "content_", NULL, 0x2, "Lim.actor.core.entity.ContentDescription;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPendingNotification = { 2, "PendingNotification", "im.actor.core.modules.internal.notifications.entity", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPendingNotification;
}

@end


#line 21
void ACPendingNotification_initWithACPeer_withInt_withLong_withACContentDescription_(ACPendingNotification *self, ACPeer *peer, jint sender, jlong date, ACContentDescription *content) {
  (void) ARBserObject_init(self);
  
#line 22
  self->peer_ = peer;
  self->sender_ = sender;
  self->date_ = date;
  self->content_ = content;
}


#line 21
ACPendingNotification *new_ACPendingNotification_initWithACPeer_withInt_withLong_withACContentDescription_(ACPeer *peer, jint sender, jlong date, ACContentDescription *content) {
  ACPendingNotification *self = [ACPendingNotification alloc];
  ACPendingNotification_initWithACPeer_withInt_withLong_withACContentDescription_(self, peer, sender, date, content);
  return self;
}


#line 28
void ACPendingNotification_init(ACPendingNotification *self) {
  (void) ARBserObject_init(self);
}


#line 28
ACPendingNotification *new_ACPendingNotification_init() {
  ACPendingNotification *self = [ACPendingNotification alloc];
  ACPendingNotification_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPendingNotification)

#pragma clang diagnostic pop
