//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/file/entity/Downloaded.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/modules/internal/file/entity/Downloaded.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACDownloaded () {
 @public
  jlong fileId_;
  jint fileSize_;
  NSString *descriptor_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(ACDownloaded, descriptor_, NSString *)

__attribute__((unused)) static void ACDownloaded_init(ACDownloaded *self);

__attribute__((unused)) static ACDownloaded *new_ACDownloaded_init() NS_RETURNS_RETAINED;

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/file/entity/Downloaded.java"


#line 15
@implementation ACDownloaded

+ (ACDownloaded *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ACDownloaded_fromBytesWithByteArray_(data);
}


#line 25
- (instancetype)initWithLong:(jlong)fileId
                     withInt:(jint)fileSize
                withNSString:(NSString *)descriptor {
  ACDownloaded_initWithLong_withInt_withNSString_(self, fileId, fileSize, descriptor);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 31
- (instancetype)init {
  ACDownloaded_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 35
- (jlong)getFileId {
  return fileId_;
}

- (jint)getFileSize {
  return fileSize_;
}

- (NSString *)getDescriptor {
  return descriptor_;
}


#line 48
- (void)parseWithARBserValues:(ARBserValues *)values {
  fileId_ = [((ARBserValues *) nil_chk(values)) getLongWithInt:1];
  fileSize_ = [values getIntWithInt:2];
  descriptor_ = [values getStringWithInt:3];
}


#line 55
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:fileId_];
  [writer writeIntWithInt:2 withInt:fileSize_];
  [writer writeStringWithInt:3 withNSString:descriptor_];
}


#line 62
- (jlong)getEngineId {
  return fileId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.modules.internal.file.entity.Downloaded;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithLong:withInt:withNSString:", "Downloaded", NULL, 0x1, NULL, NULL },
    { "init", "Downloaded", NULL, 0x2, NULL, NULL },
    { "getFileId", NULL, "J", 0x1, NULL, NULL },
    { "getFileSize", NULL, "I", 0x1, NULL, NULL },
    { "getDescriptor", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getEngineId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fileId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "fileSize_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "descriptor_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDownloaded = { 2, "Downloaded", "im.actor.core.modules.internal.file.entity", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDownloaded;
}

@end


#line 17
ACDownloaded *ACDownloaded_fromBytesWithByteArray_(IOSByteArray *data) {
  ACDownloaded_initialize();
  
#line 18
  return ARBser_parseWithARBserObject_withByteArray_(new_ACDownloaded_init(), data);
}


#line 25
void ACDownloaded_initWithLong_withInt_withNSString_(ACDownloaded *self, jlong fileId, jint fileSize, NSString *descriptor) {
  (void) ARBserObject_init(self);
  
#line 26
  self->fileId_ = fileId;
  self->fileSize_ = fileSize;
  self->descriptor_ = descriptor;
}


#line 25
ACDownloaded *new_ACDownloaded_initWithLong_withInt_withNSString_(jlong fileId, jint fileSize, NSString *descriptor) {
  ACDownloaded *self = [ACDownloaded alloc];
  ACDownloaded_initWithLong_withInt_withNSString_(self, fileId, fileSize, descriptor);
  return self;
}

void ACDownloaded_init(ACDownloaded *self) {
  (void) ARBserObject_init(self);
}


#line 31
ACDownloaded *new_ACDownloaded_init() {
  ACDownloaded *self = [ACDownloaded alloc];
  ACDownloaded_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDownloaded)

#pragma clang diagnostic pop
