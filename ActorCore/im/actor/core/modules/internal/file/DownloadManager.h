//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/file/DownloadManager.java
//

#ifndef _ImActorCoreModulesInternalFileDownloadManager_H_
#define _ImActorCoreModulesInternalFileDownloadManager_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include <ActorSDK/im/actor/core/modules/utils/ModuleActor.h>

@class ACFileReference;
@protocol ACFileCallback;
@protocol ACModuleContext;
@protocol ARFileSystemReference;

@interface ACDownloadManager : ACModuleActor

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (void)bindDownloadWithACFileReference:(ACFileReference *)fileReference
                            withBoolean:(jboolean)autoStart
                     withACFileCallback:(id<ACFileCallback>)callback;

- (void)cancelDownloadWithLong:(jlong)fileId;

- (void)onDownloadedWithLong:(jlong)fileId
   withARFileSystemReference:(id<ARFileSystemReference>)reference;

- (void)onDownloadErrorWithLong:(jlong)fileId;

- (void)onDownloadProgressWithLong:(jlong)fileId
                         withFloat:(jfloat)progress;

- (void)onReceiveWithId:(id)message;

- (void)preStart;

- (void)requestStateWithLong:(jlong)fileId
          withACFileCallback:(id<ACFileCallback>)callback;

- (void)startDownloadWithACFileReference:(ACFileReference *)fileReference;

- (void)unbindDownloadWithLong:(jlong)fileId
                   withBoolean:(jboolean)autoCancel
            withACFileCallback:(id<ACFileCallback>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager)

FOUNDATION_EXPORT void ACDownloadManager_initWithACModuleContext_(ACDownloadManager *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ACDownloadManager *new_ACDownloadManager_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager)

@compatibility_alias ImActorCoreModulesInternalFileDownloadManager ACDownloadManager;

@interface ACDownloadManager_RequestState : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId
          withACFileCallback:(id<ACFileCallback>)callback;

- (id<ACFileCallback>)getCallback;

- (jlong)getFileId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_RequestState)

FOUNDATION_EXPORT void ACDownloadManager_RequestState_initWithLong_withACFileCallback_(ACDownloadManager_RequestState *self, jlong fileId, id<ACFileCallback> callback);

FOUNDATION_EXPORT ACDownloadManager_RequestState *new_ACDownloadManager_RequestState_initWithLong_withACFileCallback_(jlong fileId, id<ACFileCallback> callback) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_RequestState)

@interface ACDownloadManager_BindDownload : NSObject

#pragma mark Public

- (instancetype)initWithACFileReference:(ACFileReference *)fileReference
                            withBoolean:(jboolean)isAutostart
                     withACFileCallback:(id<ACFileCallback>)callback;

- (id<ACFileCallback>)getCallback;

- (ACFileReference *)getFileReference;

- (jboolean)isAutostart;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_BindDownload)

FOUNDATION_EXPORT void ACDownloadManager_BindDownload_initWithACFileReference_withBoolean_withACFileCallback_(ACDownloadManager_BindDownload *self, ACFileReference *fileReference, jboolean isAutostart, id<ACFileCallback> callback);

FOUNDATION_EXPORT ACDownloadManager_BindDownload *new_ACDownloadManager_BindDownload_initWithACFileReference_withBoolean_withACFileCallback_(ACFileReference *fileReference, jboolean isAutostart, id<ACFileCallback> callback) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_BindDownload)

@interface ACDownloadManager_StartDownload : NSObject

#pragma mark Public

- (instancetype)initWithACFileReference:(ACFileReference *)fileReference;

- (ACFileReference *)getFileReference;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_StartDownload)

FOUNDATION_EXPORT void ACDownloadManager_StartDownload_initWithACFileReference_(ACDownloadManager_StartDownload *self, ACFileReference *fileReference);

FOUNDATION_EXPORT ACDownloadManager_StartDownload *new_ACDownloadManager_StartDownload_initWithACFileReference_(ACFileReference *fileReference) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_StartDownload)

@interface ACDownloadManager_CancelDownload : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId;

- (jlong)getFileId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_CancelDownload)

FOUNDATION_EXPORT void ACDownloadManager_CancelDownload_initWithLong_(ACDownloadManager_CancelDownload *self, jlong fileId);

FOUNDATION_EXPORT ACDownloadManager_CancelDownload *new_ACDownloadManager_CancelDownload_initWithLong_(jlong fileId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_CancelDownload)

@interface ACDownloadManager_UnbindDownload : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId
                 withBoolean:(jboolean)isAutocancel
          withACFileCallback:(id<ACFileCallback>)callback;

- (id<ACFileCallback>)getCallback;

- (jlong)getFileId;

- (jboolean)isAutocancel;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_UnbindDownload)

FOUNDATION_EXPORT void ACDownloadManager_UnbindDownload_initWithLong_withBoolean_withACFileCallback_(ACDownloadManager_UnbindDownload *self, jlong fileId, jboolean isAutocancel, id<ACFileCallback> callback);

FOUNDATION_EXPORT ACDownloadManager_UnbindDownload *new_ACDownloadManager_UnbindDownload_initWithLong_withBoolean_withACFileCallback_(jlong fileId, jboolean isAutocancel, id<ACFileCallback> callback) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_UnbindDownload)

@interface ACDownloadManager_OnDownloadProgress : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId
                   withFloat:(jfloat)progress;

- (jlong)getFileId;

- (jfloat)getProgress;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_OnDownloadProgress)

FOUNDATION_EXPORT void ACDownloadManager_OnDownloadProgress_initWithLong_withFloat_(ACDownloadManager_OnDownloadProgress *self, jlong fileId, jfloat progress);

FOUNDATION_EXPORT ACDownloadManager_OnDownloadProgress *new_ACDownloadManager_OnDownloadProgress_initWithLong_withFloat_(jlong fileId, jfloat progress) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_OnDownloadProgress)

@interface ACDownloadManager_OnDownloaded : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId
   withARFileSystemReference:(id<ARFileSystemReference>)reference;

- (jlong)getFileId;

- (id<ARFileSystemReference>)getReference;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_OnDownloaded)

FOUNDATION_EXPORT void ACDownloadManager_OnDownloaded_initWithLong_withARFileSystemReference_(ACDownloadManager_OnDownloaded *self, jlong fileId, id<ARFileSystemReference> reference);

FOUNDATION_EXPORT ACDownloadManager_OnDownloaded *new_ACDownloadManager_OnDownloaded_initWithLong_withARFileSystemReference_(jlong fileId, id<ARFileSystemReference> reference) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_OnDownloaded)

@interface ACDownloadManager_OnDownloadedError : NSObject

#pragma mark Public

- (instancetype)initWithLong:(jlong)fileId;

- (jlong)getFileId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDownloadManager_OnDownloadedError)

FOUNDATION_EXPORT void ACDownloadManager_OnDownloadedError_initWithLong_(ACDownloadManager_OnDownloadedError *self, jlong fileId);

FOUNDATION_EXPORT ACDownloadManager_OnDownloadedError *new_ACDownloadManager_OnDownloadedError_initWithLong_(jlong fileId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDownloadManager_OnDownloadedError)


#pragma clang diagnostic pop
#endif // _ImActorCoreModulesInternalFileDownloadManager_H_
