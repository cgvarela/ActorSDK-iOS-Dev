//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/CursorReaderActor.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiOutPeer.h"
#include "im/actor/core/api/rpc/RequestMessageRead.h"
#include "im/actor/core/api/rpc/ResponseVoid.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/messages/CursorActor.h"
#include "im/actor/core/modules/internal/messages/CursorReaderActor.h"
#include "im/actor/core/modules/utils/ModuleActor.h"
#include "im/actor/core/network/RpcCallback.h"
#include "im/actor/core/network/RpcException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACCursorReaderActor_MarkRead () {
 @public
  ACPeer *peer_;
  jlong date_;
}

@end

J2OBJC_FIELD_SETTER(ACCursorReaderActor_MarkRead, peer_, ACPeer *)

@interface ACCursorReaderActor_$1 : NSObject < ACRpcCallback > {
 @public
  ACCursorReaderActor *this$0_;
  ACPeer *val$peer_;
  jlong val$date_;
}

- (void)onResult:(ARResponseVoid *)response;

- (void)onError:(ACRpcException *)e;

- (instancetype)initWithACCursorReaderActor:(ACCursorReaderActor *)outer$
                                 withACPeer:(ACPeer *)capture$0
                                   withLong:(jlong)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ACCursorReaderActor_$1)

J2OBJC_FIELD_SETTER(ACCursorReaderActor_$1, this$0_, ACCursorReaderActor *)
J2OBJC_FIELD_SETTER(ACCursorReaderActor_$1, val$peer_, ACPeer *)

__attribute__((unused)) static void ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(ACCursorReaderActor_$1 *self, ACCursorReaderActor *outer$, ACPeer *capture$0, jlong capture$1);

__attribute__((unused)) static ACCursorReaderActor_$1 *new_ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(ACCursorReaderActor *outer$, ACPeer *capture$0, jlong capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACCursorReaderActor_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/CursorReaderActor.java"


#line 15
@implementation ACCursorReaderActor

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context {
  ACCursorReaderActor_initWithACModuleContext_(self, context);
  return self;
}

- (void)performWithACPeer:(ACPeer *)peer
                 withLong:(jlong)date {
  ARApiOutPeer *outPeer = [self buidOutPeerWithACPeer:peer];
  if (outPeer == nil) {
    return;
  }
  
#line 28
  [self requestWithACRequest:new_ARRequestMessageRead_initWithARApiOutPeer_withLong_(outPeer, date) withACRpcCallback:new_ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(self, peer, date)];
}


#line 44
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACCursorReaderActor_MarkRead class]]) {
    ACCursorReaderActor_MarkRead *markRead = (ACCursorReaderActor_MarkRead *) check_class_cast(message, [ACCursorReaderActor_MarkRead class]);
    [self moveCursorWithACPeer:[((ACCursorReaderActor_MarkRead *) nil_chk(markRead)) getPeer] withLong:[markRead getDate]];
  }
  else {
    
#line 49
    [super onReceiveWithId:message];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "CursorReaderActor", NULL, 0x1, NULL, NULL },
    { "performWithACPeer:withLong:", "perform", "V", 0x4, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lim.actor.core.modules.internal.messages.CursorReaderActor$MarkRead;"};
  static const J2ObjcClassInfo _ACCursorReaderActor = { 2, "CursorReaderActor", "im.actor.core.modules.internal.messages", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ACCursorReaderActor;
}

@end


#line 17
void ACCursorReaderActor_initWithACModuleContext_(ACCursorReaderActor *self, id<ACModuleContext> context) {
  (void) ACCursorActor_initWithLong_withACModuleContext_(self, ACModuleActor_CURSOR_READ, context);
}


#line 17
ACCursorReaderActor *new_ACCursorReaderActor_initWithACModuleContext_(id<ACModuleContext> context) {
  ACCursorReaderActor *self = [ACCursorReaderActor alloc];
  ACCursorReaderActor_initWithACModuleContext_(self, context);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCursorReaderActor)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/CursorReaderActor.java"


#line 53
@implementation ACCursorReaderActor_MarkRead


#line 57
- (instancetype)initWithACPeer:(ACPeer *)peer
                      withLong:(jlong)date {
  ACCursorReaderActor_MarkRead_initWithACPeer_withLong_(self, peer, date);
  return self;
}


#line 62
- (ACPeer *)getPeer {
  return peer_;
}

- (jlong)getDate {
  return date_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withLong:", "MarkRead", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACCursorReaderActor_MarkRead = { 2, "MarkRead", "im.actor.core.modules.internal.messages", "CursorReaderActor", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACCursorReaderActor_MarkRead;
}

@end


#line 57
void ACCursorReaderActor_MarkRead_initWithACPeer_withLong_(ACCursorReaderActor_MarkRead *self, ACPeer *peer, jlong date) {
  (void) NSObject_init(self);
  
#line 58
  self->peer_ = peer;
  self->date_ = date;
}


#line 57
ACCursorReaderActor_MarkRead *new_ACCursorReaderActor_MarkRead_initWithACPeer_withLong_(ACPeer *peer, jlong date) {
  ACCursorReaderActor_MarkRead *self = [ACCursorReaderActor_MarkRead alloc];
  ACCursorReaderActor_MarkRead_initWithACPeer_withLong_(self, peer, date);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCursorReaderActor_MarkRead)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/CursorReaderActor.java"

@implementation ACCursorReaderActor_$1


#line 30
- (void)onResult:(ARResponseVoid *)response {
  [this$0_ onCompletedWithACPeer:val$peer_ withLong:val$date_];
}


#line 35
- (void)onError:(ACRpcException *)e {
  [this$0_ onErrorWithACPeer:val$peer_ withLong:val$date_];
}

- (instancetype)initWithACCursorReaderActor:(ACCursorReaderActor *)outer$
                                 withACPeer:(ACPeer *)capture$0
                                   withLong:(jlong)capture$1 {
  ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onResult:", "onResult", "V", 0x1, NULL, NULL },
    { "onError:", "onError", "V", 0x1, NULL, NULL },
    { "initWithACCursorReaderActor:withACPeer:withLong:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.modules.internal.messages.CursorReaderActor;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$peer_", NULL, 0x1012, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$date_", NULL, 0x1012, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACCursorReaderActor", "performWithACPeer:withLong:" };
  static const J2ObjcClassInfo _ACCursorReaderActor_$1 = { 2, "", "im.actor.core.modules.internal.messages", "CursorReaderActor", 0x8008, 3, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lim/actor/core/network/RpcCallback<Lim/actor/core/api/rpc/ResponseVoid;>;" };
  return &_ACCursorReaderActor_$1;
}

@end

void ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(ACCursorReaderActor_$1 *self, ACCursorReaderActor *outer$, ACPeer *capture$0, jlong capture$1) {
  self->this$0_ = outer$;
  self->val$peer_ = capture$0;
  self->val$date_ = capture$1;
  (void) NSObject_init(self);
}

ACCursorReaderActor_$1 *new_ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(ACCursorReaderActor *outer$, ACPeer *capture$0, jlong capture$1) {
  ACCursorReaderActor_$1 *self = [ACCursorReaderActor_$1 alloc];
  ACCursorReaderActor_$1_initWithACCursorReaderActor_withACPeer_withLong_(self, outer$, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCursorReaderActor_$1)

#pragma clang diagnostic pop
