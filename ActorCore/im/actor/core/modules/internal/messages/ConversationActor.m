//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/entity/Group.h"
#include "im/actor/core/entity/Message.h"
#include "im/actor/core/entity/MessageState.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/entity/PeerType.h"
#include "im/actor/core/entity/content/AbsContent.h"
#include "im/actor/core/entity/content/DocumentContent.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/MessagesModule.h"
#include "im/actor/core/modules/internal/messages/ConversationActor.h"
#include "im/actor/core/modules/internal/messages/DialogsActor.h"
#include "im/actor/core/modules/internal/messages/GroupedDialogsActor.h"
#include "im/actor/core/modules/utils/ModuleActor.h"
#include "im/actor/runtime/Storage.h"
#include "im/actor/runtime/actors/Actor.h"
#include "im/actor/runtime/actors/ActorRef.h"
#include "im/actor/runtime/storage/IndexStorage.h"
#include "im/actor/runtime/storage/ListEngine.h"
#include "im/actor/runtime/storage/PreferencesStorage.h"
#include <j2objc/java/lang/Long.h>
#include <j2objc/java/util/ArrayList.h>
#include <j2objc/java/util/List.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACConversationActor () {
 @public
  NSString *IN_READ_STATE_PREF_;
  NSString *OUT_READ_STATE_PREF_;
  NSString *OUT_RECEIVE_STATE_PREF_;
  ACPeer *peer_;
  jboolean isHiddenPeer_;
  id<ARListEngine> messages_;
  id<ARListEngine> docs_;
  id<ARIndexStorage> outPendingIndex_;
  id<ARIndexStorage> inPendingIndex_;
  ARActorRef *dialogsActor_;
  ARActorRef *dialogsGroupedActor_;
  jlong inReadState_;
  jlong outReadState_;
  jlong outReceiveState_;
}

- (void)onInMessagesWithJavaUtilArrayList:(JavaUtilArrayList *)inMessages;

- (void)onInMessageWithACMessage:(ACMessage *)message;

- (void)onMessageContentUpdatedWithLong:(jlong)rid
                       withACAbsContent:(ACAbsContent *)content;

- (void)onMessageSentWithLong:(jlong)rid
                     withLong:(jlong)date;

- (void)onMessageErrorWithLong:(jlong)rid;

- (void)onMessageReadWithLong:(jlong)date;

- (void)onMessageReceivedWithLong:(jlong)date;

- (void)onMessageReadByMeWithLong:(jlong)date;

- (void)onMessagesDeletedWithJavaUtilList:(id<JavaUtilList>)rids;

- (void)onClearConversation;

- (void)onDeleteConversation;

- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history;

@end

J2OBJC_FIELD_SETTER(ACConversationActor, IN_READ_STATE_PREF_, NSString *)
J2OBJC_FIELD_SETTER(ACConversationActor, OUT_READ_STATE_PREF_, NSString *)
J2OBJC_FIELD_SETTER(ACConversationActor, OUT_RECEIVE_STATE_PREF_, NSString *)
J2OBJC_FIELD_SETTER(ACConversationActor, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACConversationActor, messages_, id<ARListEngine>)
J2OBJC_FIELD_SETTER(ACConversationActor, docs_, id<ARListEngine>)
J2OBJC_FIELD_SETTER(ACConversationActor, outPendingIndex_, id<ARIndexStorage>)
J2OBJC_FIELD_SETTER(ACConversationActor, inPendingIndex_, id<ARIndexStorage>)
J2OBJC_FIELD_SETTER(ACConversationActor, dialogsActor_, ARActorRef *)
J2OBJC_FIELD_SETTER(ACConversationActor, dialogsGroupedActor_, ARActorRef *)

__attribute__((unused)) static void ACConversationActor_onInMessagesWithJavaUtilArrayList_(ACConversationActor *self, JavaUtilArrayList *inMessages);

__attribute__((unused)) static void ACConversationActor_onInMessageWithACMessage_(ACConversationActor *self, ACMessage *message);

__attribute__((unused)) static void ACConversationActor_onMessageContentUpdatedWithLong_withACAbsContent_(ACConversationActor *self, jlong rid, ACAbsContent *content);

__attribute__((unused)) static void ACConversationActor_onMessageSentWithLong_withLong_(ACConversationActor *self, jlong rid, jlong date);

__attribute__((unused)) static void ACConversationActor_onMessageErrorWithLong_(ACConversationActor *self, jlong rid);

__attribute__((unused)) static void ACConversationActor_onMessageReadWithLong_(ACConversationActor *self, jlong date);

__attribute__((unused)) static void ACConversationActor_onMessageReceivedWithLong_(ACConversationActor *self, jlong date);

__attribute__((unused)) static void ACConversationActor_onMessageReadByMeWithLong_(ACConversationActor *self, jlong date);

__attribute__((unused)) static void ACConversationActor_onMessagesDeletedWithJavaUtilList_(ACConversationActor *self, id<JavaUtilList> rids);

__attribute__((unused)) static void ACConversationActor_onClearConversation(ACConversationActor *self);

__attribute__((unused)) static void ACConversationActor_onDeleteConversation(ACConversationActor *self);

__attribute__((unused)) static void ACConversationActor_onHistoryLoadedWithJavaUtilList_(ACConversationActor *self, id<JavaUtilList> history);

@interface ACConversationActor_MessageContentUpdated () {
 @public
  jlong rid_;
  ACAbsContent *content_;
}

@end

J2OBJC_FIELD_SETTER(ACConversationActor_MessageContentUpdated, content_, ACAbsContent *)

@interface ACConversationActor_HistoryLoaded () {
 @public
  id<JavaUtilList> messages_;
}

@end

J2OBJC_FIELD_SETTER(ACConversationActor_HistoryLoaded, messages_, id<JavaUtilList>)

@interface ACConversationActor_MessageReceived () {
 @public
  jlong date_;
}

@end

@interface ACConversationActor_MessageRead () {
 @public
  jlong date_;
}

@end

@interface ACConversationActor_MessageSent () {
 @public
  jlong rid_;
  jlong date_;
}

@end

@interface ACConversationActor_MessageReadByMe () {
 @public
  jlong date_;
}

@end

@interface ACConversationActor_MessageError () {
 @public
  jlong rid_;
}

@end

@interface ACConversationActor_MessagesDeleted () {
 @public
  id<JavaUtilList> rids_;
}

@end

J2OBJC_FIELD_SETTER(ACConversationActor_MessagesDeleted, rids_, id<JavaUtilList>)

@interface ACConversationActor_Messages () {
 @public
  JavaUtilArrayList *messages_;
}

@end

J2OBJC_FIELD_SETTER(ACConversationActor_Messages, messages_, JavaUtilArrayList *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 33
@implementation ACConversationActor


#line 52
- (instancetype)initWithACPeer:(ACPeer *)peer
           withACModuleContext:(id<ACModuleContext>)context {
  ACConversationActor_initWithACPeer_withACModuleContext_(self, peer, context);
  return self;
}


#line 61
- (void)preStart {
  messages_ = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getConversationEngineWithACPeer:peer_];
  docs_ = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getConversationDocsEngineWithACPeer:peer_];
  
#line 65
  dialogsActor_ = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getDialogsActor];
  dialogsGroupedActor_ = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getDialogsGroupedActor];
  outPendingIndex_ = ARStorage_createIndexWithNSString_(JreStrcat("$@CI", @"out_pending_", [((ACPeer *) nil_chk(peer_)) getPeerType], '_', [peer_ getPeerId]));
  inPendingIndex_ = ARStorage_createIndexWithNSString_(JreStrcat("$@CI", @"in_pending_", [peer_ getPeerType], '_', [peer_ getPeerId]));
  
#line 70
  inReadState_ = [((id<ARPreferencesStorage>) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getPreferences])) getLongWithKey:IN_READ_STATE_PREF_ withDefault:0];
  outReadState_ = [((id<ARPreferencesStorage>) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getPreferences])) getLongWithKey:OUT_READ_STATE_PREF_ withDefault:0];
  outReceiveState_ = [((id<ARPreferencesStorage>) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getPreferences])) getLongWithKey:OUT_RECEIVE_STATE_PREF_ withDefault:0];
  
#line 74
  if ([peer_ getPeerType] == JreLoadStatic(ACPeerTypeEnum, GROUP)) {
    isHiddenPeer_ = [((ACGroup *) nil_chk([self getGroupWithInt:[peer_ getPeerId]])) isHidden];
  }
}

- (void)onInMessagesWithJavaUtilArrayList:(JavaUtilArrayList *)inMessages {
  ACConversationActor_onInMessagesWithJavaUtilArrayList_(self, inMessages);
}


#line 147
- (void)onInMessageWithACMessage:(ACMessage *)message {
  ACConversationActor_onInMessageWithACMessage_(self, message);
}


#line 197
- (void)onMessageContentUpdatedWithLong:(jlong)rid
                       withACAbsContent:(ACAbsContent *)content {
  ACConversationActor_onMessageContentUpdatedWithLong_withACAbsContent_(self, rid, content);
}


#line 220
- (void)onMessageSentWithLong:(jlong)rid
                     withLong:(jlong)date {
  ACConversationActor_onMessageSentWithLong_withLong_(self, rid, date);
}


#line 257
- (void)onMessageErrorWithLong:(jlong)rid {
  ACConversationActor_onMessageErrorWithLong_(self, rid);
}


#line 283
- (void)onMessageReadWithLong:(jlong)date {
  ACConversationActor_onMessageReadWithLong_(self, date);
}


#line 320
- (void)onMessageReceivedWithLong:(jlong)date {
  ACConversationActor_onMessageReceivedWithLong_(self, date);
}


#line 359
- (void)onMessageReadByMeWithLong:(jlong)date {
  ACConversationActor_onMessageReadByMeWithLong_(self, date);
}


#line 377
- (void)onMessagesDeletedWithJavaUtilList:(id<JavaUtilList>)rids {
  ACConversationActor_onMessagesDeletedWithJavaUtilList_(self, rids);
}


#line 397
- (void)onClearConversation {
  ACConversationActor_onClearConversation(self);
}


#line 407
- (void)onDeleteConversation {
  ACConversationActor_onDeleteConversation(self);
}


#line 419
- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history {
  ACConversationActor_onHistoryLoadedWithJavaUtilList_(self, history);
}


#line 452
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACMessage class]]) {
    ACConversationActor_onInMessageWithACMessage_(self, (ACMessage *) check_class_cast(message, [ACMessage class]));
  }
  else
#line 455
  if ([message isKindOfClass:[ACConversationActor_Messages class]]) {
    ACConversationActor_onInMessagesWithJavaUtilArrayList_(self, [((ACConversationActor_Messages *) nil_chk(((ACConversationActor_Messages *) check_class_cast(message, [ACConversationActor_Messages class])))) getMessages]);
  }
  else
#line 457
  if ([message isKindOfClass:[ACConversationActor_MessageContentUpdated class]]) {
    ACConversationActor_MessageContentUpdated *contentUpdated = (ACConversationActor_MessageContentUpdated *) check_class_cast(message, [ACConversationActor_MessageContentUpdated class]);
    ACConversationActor_onMessageContentUpdatedWithLong_withACAbsContent_(self, [((ACConversationActor_MessageContentUpdated *) nil_chk(contentUpdated)) getRid], [contentUpdated getContent]);
  }
  else
#line 460
  if ([message isKindOfClass:[ACConversationActor_MessageSent class]]) {
    ACConversationActor_MessageSent *sent = (ACConversationActor_MessageSent *) check_class_cast(message, [ACConversationActor_MessageSent class]);
    ACConversationActor_onMessageSentWithLong_withLong_(self, [((ACConversationActor_MessageSent *) nil_chk(sent)) getRid], [sent getDate]);
  }
  else
#line 463
  if ([message isKindOfClass:[ACConversationActor_MessageError class]]) {
    ACConversationActor_MessageError *messageError = (ACConversationActor_MessageError *) check_class_cast(message, [ACConversationActor_MessageError class]);
    ACConversationActor_onMessageErrorWithLong_(self, [((ACConversationActor_MessageError *) nil_chk(messageError)) getRid]);
  }
  else
#line 466
  if ([message isKindOfClass:[ACConversationActor_MessageRead class]]) {
    ACConversationActor_onMessageReadWithLong_(self, [((ACConversationActor_MessageRead *) nil_chk(((ACConversationActor_MessageRead *) check_class_cast(message, [ACConversationActor_MessageRead class])))) getDate]);
  }
  else
#line 468
  if ([message isKindOfClass:[ACConversationActor_MessageReceived class]]) {
    ACConversationActor_onMessageReceivedWithLong_(self, [((ACConversationActor_MessageReceived *) nil_chk(((ACConversationActor_MessageReceived *) check_class_cast(message, [ACConversationActor_MessageReceived class])))) getDate]);
  }
  else
#line 470
  if ([message isKindOfClass:[ACConversationActor_HistoryLoaded class]]) {
    ACConversationActor_onHistoryLoadedWithJavaUtilList_(self, [((ACConversationActor_HistoryLoaded *) nil_chk(((ACConversationActor_HistoryLoaded *) check_class_cast(message, [ACConversationActor_HistoryLoaded class])))) getMessages]);
  }
  else
#line 472
  if ([message isKindOfClass:[ACConversationActor_ClearConversation class]]) {
    ACConversationActor_onClearConversation(self);
  }
  else
#line 474
  if ([message isKindOfClass:[ACConversationActor_DeleteConversation class]]) {
    ACConversationActor_onDeleteConversation(self);
  }
  else
#line 476
  if ([message isKindOfClass:[ACConversationActor_MessagesDeleted class]]) {
    ACConversationActor_onMessagesDeletedWithJavaUtilList_(self, [((ACConversationActor_MessagesDeleted *) nil_chk(((ACConversationActor_MessagesDeleted *) check_class_cast(message, [ACConversationActor_MessagesDeleted class])))) getRids]);
  }
  else
#line 478
  if ([message isKindOfClass:[ACConversationActor_MessageReadByMe class]]) {
    ACConversationActor_onMessageReadByMeWithLong_(self, [((ACConversationActor_MessageReadByMe *) nil_chk(((ACConversationActor_MessageReadByMe *) check_class_cast(message, [ACConversationActor_MessageReadByMe class])))) getDate]);
  }
  else {
    
#line 481
    [self dropWithId:message];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withACModuleContext:", "ConversationActor", NULL, 0x1, NULL, NULL },
    { "preStart", NULL, "V", 0x1, NULL, NULL },
    { "onInMessagesWithJavaUtilArrayList:", "onInMessages", "V", 0x2, NULL, NULL },
    { "onInMessageWithACMessage:", "onInMessage", "V", 0x2, NULL, NULL },
    { "onMessageContentUpdatedWithLong:withACAbsContent:", "onMessageContentUpdated", "V", 0x2, NULL, NULL },
    { "onMessageSentWithLong:withLong:", "onMessageSent", "V", 0x2, NULL, NULL },
    { "onMessageErrorWithLong:", "onMessageError", "V", 0x2, NULL, NULL },
    { "onMessageReadWithLong:", "onMessageRead", "V", 0x2, NULL, NULL },
    { "onMessageReceivedWithLong:", "onMessageReceived", "V", 0x2, NULL, NULL },
    { "onMessageReadByMeWithLong:", "onMessageReadByMe", "V", 0x2, NULL, NULL },
    { "onMessagesDeletedWithJavaUtilList:", "onMessagesDeleted", "V", 0x2, NULL, NULL },
    { "onClearConversation", NULL, "V", 0x2, NULL, NULL },
    { "onDeleteConversation", NULL, "V", 0x2, NULL, NULL },
    { "onHistoryLoadedWithJavaUtilList:", "onHistoryLoaded", "V", 0x2, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "IN_READ_STATE_PREF_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "OUT_READ_STATE_PREF_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "OUT_RECEIVE_STATE_PREF_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "isHiddenPeer_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "messages_", NULL, 0x2, "Lim.actor.runtime.storage.ListEngine;", NULL, "Lim/actor/runtime/storage/ListEngine<Lim/actor/core/entity/Message;>;", .constantValue.asLong = 0 },
    { "docs_", NULL, 0x2, "Lim.actor.runtime.storage.ListEngine;", NULL, "Lim/actor/runtime/storage/ListEngine<Lim/actor/core/entity/Message;>;", .constantValue.asLong = 0 },
    { "outPendingIndex_", NULL, 0x2, "Lim.actor.runtime.storage.IndexStorage;", NULL, NULL, .constantValue.asLong = 0 },
    { "inPendingIndex_", NULL, 0x2, "Lim.actor.runtime.storage.IndexStorage;", NULL, NULL, .constantValue.asLong = 0 },
    { "dialogsActor_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "dialogsGroupedActor_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "inReadState_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "outReadState_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "outReceiveState_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.core.modules.internal.messages.ConversationActor$MessageContentUpdated;", "Lim.actor.core.modules.internal.messages.ConversationActor$HistoryLoaded;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessageReceived;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessageRead;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessageSent;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessageReadByMe;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessageError;", "Lim.actor.core.modules.internal.messages.ConversationActor$MessagesDeleted;", "Lim.actor.core.modules.internal.messages.ConversationActor$ClearConversation;", "Lim.actor.core.modules.internal.messages.ConversationActor$DeleteConversation;", "Lim.actor.core.modules.internal.messages.ConversationActor$Messages;"};
  static const J2ObjcClassInfo _ACConversationActor = { 2, "ConversationActor", "im.actor.core.modules.internal.messages", NULL, 0x1, 15, methods, 14, fields, 0, NULL, 11, inner_classes, NULL, NULL };
  return &_ACConversationActor;
}

@end


#line 52
void ACConversationActor_initWithACPeer_withACModuleContext_(ACConversationActor *self, ACPeer *peer, id<ACModuleContext> context) {
  (void) ACModuleActor_initWithACModuleContext_(self, context);
  self->isHiddenPeer_ =
#line 40
  false;
  
#line 54
  self->peer_ = peer;
  self->IN_READ_STATE_PREF_ = JreStrcat("$@$", @"chat_state.", peer, @".in_read");
  self->OUT_READ_STATE_PREF_ = JreStrcat("$@$", @"chat_state.", peer, @".out_read");
  self->OUT_RECEIVE_STATE_PREF_ = JreStrcat("$@$", @"chat_state.", peer, @".out_receive");
}


#line 52
ACConversationActor *new_ACConversationActor_initWithACPeer_withACModuleContext_(ACPeer *peer, id<ACModuleContext> context) {
  ACConversationActor *self = [ACConversationActor alloc];
  ACConversationActor_initWithACPeer_withACModuleContext_(self, peer, context);
  return self;
}


#line 82
void ACConversationActor_onInMessagesWithJavaUtilArrayList_(ACConversationActor *self, JavaUtilArrayList *inMessages) {
  
#line 85
  ACMessage *topMessage = nil;
  JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
  JavaUtilArrayList *updatedDocs = new_JavaUtilArrayList_init();
  for (ACMessage * __strong m in nil_chk(inMessages)) {
    if ([((ACMessage *) nil_chk(m)) getSenderId] == [self myUid]) {
      
#line 91
      if ([m isOnServer]) {
        if ([m getSortDate] <= self->outReadState_) {
          m = [m changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, READ)];
        }
        else
#line 94
        if ([m getSortDate] <= self->outReceiveState_) {
          m = [m changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, RECEIVED)];
        }
        else {
          
#line 97
          m = [m changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, SENT)];
        }
      }
    }
    
#line 102
    if ([((ACMessage *) nil_chk(m)) isOnServer]) {
      if (topMessage == nil) {
        topMessage = m;
      }
      else {
        
#line 106
        if ([topMessage getSortDate] < [m getSortDate]) {
          topMessage = m;
        }
      }
    }
    
#line 112
    [updated addWithId:m];
    if ([[m getContent] isKindOfClass:[ACDocumentContent class]]) {
      [updatedDocs addWithId:m];
    }
  }
  
#line 119
  [((id<ARListEngine>) nil_chk(self->messages_)) addOrUpdateItems:updated];
  [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItems:updatedDocs];
  
#line 122
  for (ACMessage * __strong m in updated) {
    if ([((ACMessage *) nil_chk(m)) getSenderId] == [self myUid]) {
      
#line 125
      if ([m isOnServer] && [m getMessageState] != JreLoadStatic(ACMessageStateEnum, READ)) {
        [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) putWithKey:[m getRid] withValue:[m getDate]];
      }
    }
    else {
      if ([m getSortDate] > self->inReadState_) {
        
#line 132
        [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) putWithKey:[m getRid] withValue:[m getDate]];
      }
    }
  }
  
#line 138
  if (topMessage != nil) {
    if (!self->isHiddenPeer_) {
      [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(self->peer_, topMessage, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
    }
    [((ARActorRef *) nil_chk(self->dialogsGroupedActor_)) sendWithId:new_ACGroupedDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
  }
}


#line 147
void ACConversationActor_onInMessageWithACMessage_(ACConversationActor *self, ACMessage *message) {
  
#line 155
  if ([((ACMessage *) nil_chk(message)) getSenderId] == [self myUid]) {
    
#line 157
    if ([message isOnServer]) {
      if ([message getSortDate] <= self->outReadState_) {
        message = [message changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, READ)];
      }
      else
#line 160
      if ([message getSortDate] <= self->outReceiveState_) {
        message = [message changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, RECEIVED)];
      }
      else {
        
#line 163
        message = [message changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, SENT)];
      }
    }
  }
  
#line 169
  [((id<ARListEngine>) nil_chk(self->messages_)) addOrUpdateItem:message];
  if ([[((ACMessage *) nil_chk(message)) getContent] isKindOfClass:[ACDocumentContent class]]) {
    [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItem:message];
  }
  
#line 175
  if ([message isOnServer]) {
    if ([message getSenderId] == [self myUid]) {
      
#line 178
      if ([message isOnServer] && [message getMessageState] != JreLoadStatic(ACMessageStateEnum, READ)) {
        [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) putWithKey:[message getRid] withValue:[message getDate]];
      }
    }
    else {
      if ([message getSortDate] > self->inReadState_) {
        
#line 185
        [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) putWithKey:[message getRid] withValue:[message getDate]];
      }
    }
    
#line 189
    if (!self->isHiddenPeer_) {
      [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(self->peer_, message, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
    }
    [((ARActorRef *) nil_chk(self->dialogsGroupedActor_)) sendWithId:new_ACGroupedDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
  }
}


#line 197
void ACConversationActor_onMessageContentUpdatedWithLong_withACAbsContent_(ACConversationActor *self, jlong rid, ACAbsContent *content) {
  ACMessage *message = [((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:rid];
  
#line 200
  if (message == nil) {
    return;
  }
  
#line 205
  ACMessage *updatedMsg = [((ACMessage *) nil_chk(message)) changeContentWithACAbsContent:content];
  [self->messages_ addOrUpdateItem:updatedMsg];
  if ([[((ACMessage *) nil_chk(updatedMsg)) getContent] isKindOfClass:[ACDocumentContent class]]) {
    [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItem:updatedMsg];
  }
  else {
    
#line 210
    [((id<ARListEngine>) nil_chk(self->docs_)) removeItemWithKey:rid];
  }
  
#line 213
  if (!self->isHiddenPeer_) {
    
#line 215
    [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_MessageContentChanged_initWithACPeer_withLong_withACAbsContent_(self->peer_, rid, content)];
  }
}


#line 220
void ACConversationActor_onMessageSentWithLong_withLong_(ACConversationActor *self, jlong rid, jlong date) {
  ACMessage *msg = [((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:rid];
  
#line 223
  if (msg != nil && ([msg getMessageState] == JreLoadStatic(ACMessageStateEnum, PENDING))) {
    
#line 225
    ACMessageStateEnum *state;
    if (date <= self->outReadState_) {
      state = JreLoadStatic(ACMessageStateEnum, READ);
    }
    else
#line 228
    if (date <= self->outReceiveState_) {
      state = JreLoadStatic(ACMessageStateEnum, RECEIVED);
    }
    else {
      
#line 231
      state = JreLoadStatic(ACMessageStateEnum, SENT);
    }
    
#line 235
    ACMessage *updatedMsg = [((ACMessage *) nil_chk([msg changeAllDateWithLong:
#line 236
    date])) changeStateWithACMessageStateEnum:
#line 237
    state];
    [self->messages_ addOrUpdateItem:updatedMsg];
    if ([[((ACMessage *) nil_chk(updatedMsg)) getContent] isKindOfClass:[ACDocumentContent class]]) {
      [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItem:updatedMsg];
    }
    
#line 243
    if (!self->isHiddenPeer_) {
      
#line 245
      [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(self->peer_, updatedMsg, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
      [((ARActorRef *) nil_chk(self->dialogsGroupedActor_)) sendWithId:new_ACGroupedDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [self->inPendingIndex_ getCount])];
    }
    
#line 250
    if (state != JreLoadStatic(ACMessageStateEnum, READ)) {
      [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) putWithKey:rid withValue:date];
    }
  }
}


#line 257
void ACConversationActor_onMessageErrorWithLong_(ACConversationActor *self, jlong rid) {
  ACMessage *msg = [((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:rid];
  
#line 260
  if (msg != nil && [msg isPendingOrSent]) {
    
#line 263
    ACMessage *updatedMsg = [msg changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, ERROR)];
    
#line 265
    [self->messages_ addOrUpdateItem:updatedMsg];
    
#line 267
    if ([[((ACMessage *) nil_chk(updatedMsg)) getContent] isKindOfClass:[ACDocumentContent class]]) {
      [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItem:updatedMsg];
    }
    
#line 271
    if (!self->isHiddenPeer_) {
      
#line 273
      [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(self->peer_, rid, JreLoadStatic(ACMessageStateEnum, ERROR))];
    }
    
#line 276
    [((ARActorRef *) nil_chk(self->dialogsGroupedActor_)) sendWithId:new_ACGroupedDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) getCount])];
  }
}


#line 283
void ACConversationActor_onMessageReadWithLong_(ACConversationActor *self, jlong date) {
  if (date <= self->outReadState_) {
    return;
  }
  self->outReadState_ = date;
  [((id<ARPreferencesStorage>) nil_chk([self preferences])) putLongWithKey:self->OUT_READ_STATE_PREF_ withValue:date];
  
#line 290
  id<JavaUtilList> res = [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) removeBeforeValue:date];
  if ([((id<JavaUtilList>) nil_chk(res)) size] > 0) {
    jlong minRid = -1;
    jlong minDate = JavaLangLong_MAX_VALUE;
    JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
    for (JavaLangLong * __strong ref in res) {
      ACMessage *msg = [((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:[((JavaLangLong *) nil_chk(ref)) longLongValue]];
      if (msg != nil && [msg isReceivedOrSent]) {
        if ([msg getDate] < minDate) {
          minDate = [msg getDate];
          minRid = [ref longLongValue];
        }
        
#line 303
        [updated addWithId:[msg changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, READ)]];
      }
    }
    
#line 307
    if ([updated size] > 0) {
      [((id<ARListEngine>) nil_chk(self->messages_)) addOrUpdateItems:updated];
    }
    
#line 311
    if (minRid != -1) {
      if (!self->isHiddenPeer_) {
        [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(self->peer_, minRid, JreLoadStatic(ACMessageStateEnum, READ))];
      }
    }
  }
}


#line 320
void ACConversationActor_onMessageReceivedWithLong_(ACConversationActor *self, jlong date) {
  if (date <= self->outReceiveState_) {
    return;
  }
  self->outReceiveState_ = date;
  [((id<ARPreferencesStorage>) nil_chk([self preferences])) putLongWithKey:self->OUT_RECEIVE_STATE_PREF_ withValue:date];
  
#line 327
  id<JavaUtilList> res = [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) findBeforeValue:date];
  
#line 329
  if ([((id<JavaUtilList>) nil_chk(res)) size] > 0) {
    jlong maxRid = -1;
    jlong maxDate = JavaLangLong_MIN_VALUE;
    JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
    
#line 334
    for (JavaLangLong * __strong ref in res) {
      ACMessage *msg = [((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:[((JavaLangLong *) nil_chk(ref)) longLongValue]];
      if (msg != nil && [msg isSent]) {
        if ([msg getDate] > maxDate) {
          maxDate = [msg getDate];
          maxRid = [ref longLongValue];
        }
        
#line 342
        [updated addWithId:[msg changeStateWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, RECEIVED)]];
      }
    }
    
#line 346
    if ([updated size] > 0) {
      [((id<ARListEngine>) nil_chk(self->messages_)) addOrUpdateItems:updated];
    }
    
#line 350
    if (maxRid != -1) {
      if (!self->isHiddenPeer_) {
        [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(self->peer_, maxRid, JreLoadStatic(ACMessageStateEnum, RECEIVED))];
      }
    }
  }
}


#line 359
void ACConversationActor_onMessageReadByMeWithLong_(ACConversationActor *self, jlong date) {
  if (date < self->inReadState_) {
    return;
  }
  self->inReadState_ = date;
  [((id<ARPreferencesStorage>) nil_chk([self preferences])) putLongWithKey:self->IN_READ_STATE_PREF_ withValue:date];
  
#line 366
  (void) [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) removeBeforeValue:date];
  
#line 368
  if (!self->isHiddenPeer_) {
    [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [self->inPendingIndex_ getCount])];
  }
  [((ARActorRef *) nil_chk(self->dialogsGroupedActor_)) sendWithId:new_ACGroupedDialogsActor_CounterChanged_initWithACPeer_withInt_(self->peer_, [self->inPendingIndex_ getCount])];
}


#line 377
void ACConversationActor_onMessagesDeletedWithJavaUtilList_(ACConversationActor *self, id<JavaUtilList> rids) {
  
#line 380
  IOSLongArray *rids2 = [IOSLongArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(rids)) size]];
  for (jint i = 0; i < rids2->size_; i++) {
    *IOSLongArray_GetRef(rids2, i) = [((JavaLangLong *) nil_chk([rids getWithInt:i])) longLongValue];
  }
  [((id<ARListEngine>) nil_chk(self->messages_)) removeItemsWithKeys:rids2];
  [((id<ARListEngine>) nil_chk(self->docs_)) removeItemsWithKeys:rids2];
  
#line 387
  [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) removeWithKeys:rids];
  [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) removeWithKeys:rids];
  
#line 391
  if (!self->isHiddenPeer_) {
    [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_MessageDeleted_initWithACPeer_withACMessage_(self->peer_, [self->messages_ getHeadValue])];
  }
}

void ACConversationActor_onClearConversation(ACConversationActor *self) {
  [((id<ARListEngine>) nil_chk(self->messages_)) clear];
  [((id<ARListEngine>) nil_chk(self->docs_)) clear];
  [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) clear];
  [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) clear];
  [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_ChatClear_initWithACPeer_(self->peer_)];
}


#line 407
void ACConversationActor_onDeleteConversation(ACConversationActor *self) {
  [((id<ARListEngine>) nil_chk(self->messages_)) clear];
  [((id<ARListEngine>) nil_chk(self->docs_)) clear];
  [((id<ARIndexStorage>) nil_chk(self->inPendingIndex_)) clear];
  [((id<ARIndexStorage>) nil_chk(self->outPendingIndex_)) clear];
  [((ARActorRef *) nil_chk(self->dialogsActor_)) sendWithId:new_ACDialogsActor_ChatDelete_initWithACPeer_(self->peer_)];
}


#line 419
void ACConversationActor_onHistoryLoadedWithJavaUtilList_(ACConversationActor *self, id<JavaUtilList> history) {
  
#line 421
  JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
  JavaUtilArrayList *updatedDocs = new_JavaUtilArrayList_init();
  
#line 425
  for (ACMessage * __strong historyMessage in nil_chk(history)) {
    
#line 427
    if ([((id<ARListEngine>) nil_chk(self->messages_)) getValueWithKey:[((ACMessage *) nil_chk(historyMessage)) getEngineId]] != nil) {
      continue;
    }
    
#line 431
    [updated addWithId:historyMessage];
    if ([[historyMessage getContent] isKindOfClass:[ACDocumentContent class]]) {
      [updatedDocs addWithId:historyMessage];
    }
  }
  
#line 438
  if ([updated size] > 0) {
    [((id<ARListEngine>) nil_chk(self->messages_)) addOrUpdateItems:updated];
  }
  
#line 442
  if ([updatedDocs size] > 0) {
    [((id<ARListEngine>) nil_chk(self->docs_)) addOrUpdateItems:updatedDocs];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 485
@implementation ACConversationActor_MessageContentUpdated


#line 489
- (instancetype)initWithLong:(jlong)rid
            withACAbsContent:(ACAbsContent *)content {
  ACConversationActor_MessageContentUpdated_initWithLong_withACAbsContent_(self, rid, content);
  return self;
}


#line 494
- (jlong)getRid {
  return rid_;
}

- (ACAbsContent *)getContent {
  return content_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withACAbsContent:", "MessageContentUpdated", NULL, 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
    { "getContent", NULL, "Lim.actor.core.entity.content.AbsContent;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "content_", NULL, 0x2, "Lim.actor.core.entity.content.AbsContent;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageContentUpdated = { 2, "MessageContentUpdated", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageContentUpdated;
}

@end


#line 489
void ACConversationActor_MessageContentUpdated_initWithLong_withACAbsContent_(ACConversationActor_MessageContentUpdated *self, jlong rid, ACAbsContent *content) {
  (void) NSObject_init(self);
  
#line 490
  self->rid_ = rid;
  self->content_ = content;
}


#line 489
ACConversationActor_MessageContentUpdated *new_ACConversationActor_MessageContentUpdated_initWithLong_withACAbsContent_(jlong rid, ACAbsContent *content) {
  ACConversationActor_MessageContentUpdated *self = [ACConversationActor_MessageContentUpdated alloc];
  ACConversationActor_MessageContentUpdated_initWithLong_withACAbsContent_(self, rid, content);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageContentUpdated)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 503
@implementation ACConversationActor_HistoryLoaded


#line 506
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)messages {
  ACConversationActor_HistoryLoaded_initWithJavaUtilList_(self, messages);
  return self;
}


#line 510
- (id<JavaUtilList>)getMessages {
  return messages_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "HistoryLoaded", NULL, 0x1, NULL, NULL },
    { "getMessages", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messages_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/entity/Message;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_HistoryLoaded = { 2, "HistoryLoaded", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_HistoryLoaded;
}

@end


#line 506
void ACConversationActor_HistoryLoaded_initWithJavaUtilList_(ACConversationActor_HistoryLoaded *self, id<JavaUtilList> messages) {
  (void) NSObject_init(self);
  
#line 507
  self->messages_ = messages;
}


#line 506
ACConversationActor_HistoryLoaded *new_ACConversationActor_HistoryLoaded_initWithJavaUtilList_(id<JavaUtilList> messages) {
  ACConversationActor_HistoryLoaded *self = [ACConversationActor_HistoryLoaded alloc];
  ACConversationActor_HistoryLoaded_initWithJavaUtilList_(self, messages);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_HistoryLoaded)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 515
@implementation ACConversationActor_MessageReceived


#line 518
- (instancetype)initWithLong:(jlong)date {
  ACConversationActor_MessageReceived_initWithLong_(self, date);
  return self;
}


#line 522
- (jlong)getDate {
  return date_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "MessageReceived", NULL, 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageReceived = { 2, "MessageReceived", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageReceived;
}

@end


#line 518
void ACConversationActor_MessageReceived_initWithLong_(ACConversationActor_MessageReceived *self, jlong date) {
  (void) NSObject_init(self);
  
#line 519
  self->date_ = date;
}


#line 518
ACConversationActor_MessageReceived *new_ACConversationActor_MessageReceived_initWithLong_(jlong date) {
  ACConversationActor_MessageReceived *self = [ACConversationActor_MessageReceived alloc];
  ACConversationActor_MessageReceived_initWithLong_(self, date);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageReceived)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 527
@implementation ACConversationActor_MessageRead


#line 530
- (instancetype)initWithLong:(jlong)date {
  ACConversationActor_MessageRead_initWithLong_(self, date);
  return self;
}


#line 534
- (jlong)getDate {
  return date_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "MessageRead", NULL, 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageRead = { 2, "MessageRead", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageRead;
}

@end


#line 530
void ACConversationActor_MessageRead_initWithLong_(ACConversationActor_MessageRead *self, jlong date) {
  (void) NSObject_init(self);
  
#line 531
  self->date_ = date;
}


#line 530
ACConversationActor_MessageRead *new_ACConversationActor_MessageRead_initWithLong_(jlong date) {
  ACConversationActor_MessageRead *self = [ACConversationActor_MessageRead alloc];
  ACConversationActor_MessageRead_initWithLong_(self, date);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageRead)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 539
@implementation ACConversationActor_MessageSent


#line 543
- (instancetype)initWithLong:(jlong)rid
                    withLong:(jlong)date {
  ACConversationActor_MessageSent_initWithLong_withLong_(self, rid, date);
  return self;
}


#line 548
- (jlong)getDate {
  return date_;
}

- (jlong)getRid {
  return rid_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:", "MessageSent", NULL, 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageSent = { 2, "MessageSent", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageSent;
}

@end


#line 543
void ACConversationActor_MessageSent_initWithLong_withLong_(ACConversationActor_MessageSent *self, jlong rid, jlong date) {
  (void) NSObject_init(self);
  
#line 544
  self->rid_ = rid;
  self->date_ = date;
}


#line 543
ACConversationActor_MessageSent *new_ACConversationActor_MessageSent_initWithLong_withLong_(jlong rid, jlong date) {
  ACConversationActor_MessageSent *self = [ACConversationActor_MessageSent alloc];
  ACConversationActor_MessageSent_initWithLong_withLong_(self, rid, date);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageSent)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 557
@implementation ACConversationActor_MessageReadByMe


#line 560
- (instancetype)initWithLong:(jlong)date {
  ACConversationActor_MessageReadByMe_initWithLong_(self, date);
  return self;
}


#line 564
- (jlong)getDate {
  return date_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "MessageReadByMe", NULL, 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageReadByMe = { 2, "MessageReadByMe", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageReadByMe;
}

@end


#line 560
void ACConversationActor_MessageReadByMe_initWithLong_(ACConversationActor_MessageReadByMe *self, jlong date) {
  (void) NSObject_init(self);
  
#line 561
  self->date_ = date;
}


#line 560
ACConversationActor_MessageReadByMe *new_ACConversationActor_MessageReadByMe_initWithLong_(jlong date) {
  ACConversationActor_MessageReadByMe *self = [ACConversationActor_MessageReadByMe alloc];
  ACConversationActor_MessageReadByMe_initWithLong_(self, date);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageReadByMe)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 569
@implementation ACConversationActor_MessageError


#line 572
- (instancetype)initWithLong:(jlong)rid {
  ACConversationActor_MessageError_initWithLong_(self, rid);
  return self;
}


#line 576
- (jlong)getRid {
  return rid_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "MessageError", NULL, 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessageError = { 2, "MessageError", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessageError;
}

@end


#line 572
void ACConversationActor_MessageError_initWithLong_(ACConversationActor_MessageError *self, jlong rid) {
  (void) NSObject_init(self);
  
#line 573
  self->rid_ = rid;
}


#line 572
ACConversationActor_MessageError *new_ACConversationActor_MessageError_initWithLong_(jlong rid) {
  ACConversationActor_MessageError *self = [ACConversationActor_MessageError alloc];
  ACConversationActor_MessageError_initWithLong_(self, rid);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessageError)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 581
@implementation ACConversationActor_MessagesDeleted


#line 584
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)rids {
  ACConversationActor_MessagesDeleted_initWithJavaUtilList_(self, rids);
  return self;
}


#line 588
- (id<JavaUtilList>)getRids {
  return rids_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "MessagesDeleted", NULL, 0x1, NULL, NULL },
    { "getRids", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rids_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_MessagesDeleted = { 2, "MessagesDeleted", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_MessagesDeleted;
}

@end


#line 584
void ACConversationActor_MessagesDeleted_initWithJavaUtilList_(ACConversationActor_MessagesDeleted *self, id<JavaUtilList> rids) {
  (void) NSObject_init(self);
  
#line 585
  self->rids_ = rids;
}


#line 584
ACConversationActor_MessagesDeleted *new_ACConversationActor_MessagesDeleted_initWithJavaUtilList_(id<JavaUtilList> rids) {
  ACConversationActor_MessagesDeleted *self = [ACConversationActor_MessagesDeleted alloc];
  ACConversationActor_MessagesDeleted_initWithJavaUtilList_(self, rids);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_MessagesDeleted)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 593
@implementation ACConversationActor_ClearConversation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACConversationActor_ClearConversation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACConversationActor_ClearConversation = { 2, "ClearConversation", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_ClearConversation;
}

@end

void ACConversationActor_ClearConversation_init(ACConversationActor_ClearConversation *self) {
  (void) NSObject_init(self);
}

ACConversationActor_ClearConversation *new_ACConversationActor_ClearConversation_init() {
  ACConversationActor_ClearConversation *self = [ACConversationActor_ClearConversation alloc];
  ACConversationActor_ClearConversation_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_ClearConversation)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 597
@implementation ACConversationActor_DeleteConversation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACConversationActor_DeleteConversation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACConversationActor_DeleteConversation = { 2, "DeleteConversation", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_DeleteConversation;
}

@end

void ACConversationActor_DeleteConversation_init(ACConversationActor_DeleteConversation *self) {
  (void) NSObject_init(self);
}

ACConversationActor_DeleteConversation *new_ACConversationActor_DeleteConversation_init() {
  ACConversationActor_DeleteConversation *self = [ACConversationActor_DeleteConversation alloc];
  ACConversationActor_DeleteConversation_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_DeleteConversation)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/ConversationActor.java"


#line 601
@implementation ACConversationActor_Messages


#line 604
- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)messages {
  ACConversationActor_Messages_initWithJavaUtilArrayList_(self, messages);
  return self;
}


#line 608
- (JavaUtilArrayList *)getMessages {
  return messages_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilArrayList:", "Messages", NULL, 0x1, NULL, NULL },
    { "getMessages", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messages_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lim/actor/core/entity/Message;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConversationActor_Messages = { 2, "Messages", "im.actor.core.modules.internal.messages", "ConversationActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConversationActor_Messages;
}

@end


#line 604
void ACConversationActor_Messages_initWithJavaUtilArrayList_(ACConversationActor_Messages *self, JavaUtilArrayList *messages) {
  (void) NSObject_init(self);
  
#line 605
  self->messages_ = messages;
}


#line 604
ACConversationActor_Messages *new_ACConversationActor_Messages_initWithJavaUtilArrayList_(JavaUtilArrayList *messages) {
  ACConversationActor_Messages *self = [ACConversationActor_Messages alloc];
  ACConversationActor_Messages_initWithJavaUtilArrayList_(self, messages);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConversationActor_Messages)

#pragma clang diagnostic pop
