//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/entity/MessagesStorage.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/modules/internal/messages/entity/MessageRef.h"
#include "im/actor/core/modules/internal/messages/entity/MessagesStorage.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACMessagesStorage () {
 @public
  JavaUtilArrayList *messages_;
}

@end

J2OBJC_FIELD_SETTER(ACMessagesStorage, messages_, JavaUtilArrayList *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/entity/MessagesStorage.java"


#line 16
@implementation ACMessagesStorage

+ (ACMessagesStorage *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ACMessagesStorage_fromBytesWithByteArray_(data);
}


#line 24
- (JavaUtilArrayList *)getMessages {
  return messages_;
}

- (void)addOrUpdateWithLong:(jlong)rid
                   withLong:(jlong)date {
  for (ACMessageRef * __strong ref in nil_chk(messages_)) {
    if ([((ACMessageRef *) nil_chk(ref)) getRid] == rid) {
      [messages_ removeWithId:ref];
      break;
    }
  }
  [messages_ addWithId:new_ACMessageRef_initWithLong_withLong_(rid, date)];
}


#line 38
- (jboolean)updateWithLong:(jlong)rid
                  withLong:(jlong)date {
  for (ACMessageRef * __strong ref in nil_chk(messages_)) {
    if ([((ACMessageRef *) nil_chk(ref)) getRid] == rid) {
      [messages_ removeWithId:ref];
      [messages_ addWithId:new_ACMessageRef_initWithLong_withLong_(rid, date)];
      return true;
    }
  }
  return false;
}


#line 49
- (jboolean)removeWithLong:(jlong)rid {
  for (ACMessageRef * __strong ref in nil_chk(messages_)) {
    if ([((ACMessageRef *) nil_chk(ref)) getRid] == rid) {
      [messages_ removeWithId:ref];
      return true;
    }
  }
  return false;
}

- (jboolean)removeWithJavaUtilList:(id<JavaUtilList>)rids {
  JavaUtilArrayList *toRemove = [self findWithJavaUtilList:rids];
  if ([((JavaUtilArrayList *) nil_chk(toRemove)) size] > 0) {
    [((JavaUtilArrayList *) nil_chk(messages_)) removeAllWithJavaUtilCollection:toRemove];
    return false;
  }
  return false;
}

- (JavaUtilArrayList *)findWithJavaUtilList:(id<JavaUtilList>)rids {
  JavaUtilArrayList *res = new_JavaUtilArrayList_init();
  
#line 71
  for (ACMessageRef * __strong ref in nil_chk(messages_)) {
    {
      
#line 72
      for (JavaLangLong * __strong l in nil_chk(rids)) {
        if ([((ACMessageRef *) nil_chk(ref)) getRid] == [((JavaLangLong *) nil_chk(l)) longLongValue]) {
          [res addWithId:ref];
          goto continue_outer;
        }
      }
    }
    continue_outer: ;
  }
  
#line 79
  return res;
}


#line 82
- (JavaUtilArrayList *)removeBeforeDateWithLong:(jlong)date {
  JavaUtilArrayList *res = [self findBeforeDateWithLong:date];
  [((JavaUtilArrayList *) nil_chk(messages_)) removeAllWithJavaUtilCollection:res];
  return res;
}

- (JavaUtilArrayList *)findBeforeDateWithLong:(jlong)date {
  JavaUtilArrayList *res = new_JavaUtilArrayList_init();
  for (ACMessageRef * __strong ref in nil_chk(messages_)) {
    if ([((ACMessageRef *) nil_chk(ref)) getDate] <= date) {
      [res addWithId:ref];
    }
  }
  return res;
}

- (void)clear {
  [((JavaUtilArrayList *) nil_chk(messages_)) clear];
}

- (jint)getCount {
  return [((JavaUtilArrayList *) nil_chk(messages_)) size];
}


#line 108
- (void)parseWithARBserValues:(ARBserValues *)values {
  [((JavaUtilArrayList *) nil_chk(messages_)) clear];
  jint count = [((ARBserValues *) nil_chk(values)) getRepeatedCountWithInt:1];
  id<JavaUtilList> tmp = new_JavaUtilArrayList_init();
  for (jint i = 0; i < count; i++) {
    [tmp addWithId:new_ACMessageRef_init()];
  }
  [messages_ addAllWithJavaUtilCollection:[values getRepeatedObjWithInt:1 withJavaUtilList:tmp]];
}


#line 119
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeRepeatedObjWithInt:1 withJavaUtilList:messages_];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACMessagesStorage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.modules.internal.messages.entity.MessagesStorage;", 0x9, "Ljava.io.IOException;", NULL },
    { "getMessages", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "addOrUpdateWithLong:withLong:", "addOrUpdate", "V", 0x1, NULL, NULL },
    { "updateWithLong:withLong:", "update", "Z", 0x1, NULL, NULL },
    { "removeWithLong:", "remove", "Z", 0x1, NULL, NULL },
    { "removeWithJavaUtilList:", "remove", "Z", 0x1, NULL, NULL },
    { "findWithJavaUtilList:", "find", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "removeBeforeDateWithLong:", "removeBeforeDate", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "findBeforeDateWithLong:", "findBeforeDate", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messages_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lim/actor/core/modules/internal/messages/entity/MessageRef;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACMessagesStorage = { 2, "MessagesStorage", "im.actor.core.modules.internal.messages.entity", NULL, 0x1, 14, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACMessagesStorage;
}

@end


#line 18
ACMessagesStorage *ACMessagesStorage_fromBytesWithByteArray_(IOSByteArray *data) {
  ACMessagesStorage_initialize();
  
#line 19
  return ARBser_parseWithARBserObject_withByteArray_(new_ACMessagesStorage_init(), data);
}

void ACMessagesStorage_init(ACMessagesStorage *self) {
  (void) ARBserObject_init(self);
  self->messages_ = new_JavaUtilArrayList_init();
}

ACMessagesStorage *new_ACMessagesStorage_init() {
  ACMessagesStorage *self = [ACMessagesStorage alloc];
  ACMessagesStorage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMessagesStorage)

#pragma clang diagnostic pop
