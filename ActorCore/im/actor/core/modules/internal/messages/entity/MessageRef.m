//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/entity/MessageRef.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/modules/internal/messages/entity/MessageRef.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACMessageRef () {
 @public
  jlong rid_;
  jlong date_;
}

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/entity/MessageRef.java"


#line 13
@implementation ACMessageRef


#line 17
- (instancetype)initWithLong:(jlong)rid
                    withLong:(jlong)date {
  ACMessageRef_initWithLong_withLong_(self, rid, date);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 22
- (instancetype)init {
  ACMessageRef_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 26
- (jlong)getDate {
  return date_;
}

- (jlong)getRid {
  return rid_;
}


#line 35
- (void)parseWithARBserValues:(ARBserValues *)values {
  rid_ = [((ARBserValues *) nil_chk(values)) getLongWithInt:1];
  date_ = [values getLongWithInt:2];
}


#line 41
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:rid_];
  [writer writeLongWithInt:2 withLong:date_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:", "MessageRef", NULL, 0x1, NULL, NULL },
    { "init", "MessageRef", NULL, 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACMessageRef = { 2, "MessageRef", "im.actor.core.modules.internal.messages.entity", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACMessageRef;
}

@end


#line 17
void ACMessageRef_initWithLong_withLong_(ACMessageRef *self, jlong rid, jlong date) {
  (void) ARBserObject_init(self);
  
#line 18
  self->rid_ = rid;
  self->date_ = date;
}


#line 17
ACMessageRef *new_ACMessageRef_initWithLong_withLong_(jlong rid, jlong date) {
  ACMessageRef *self = [ACMessageRef alloc];
  ACMessageRef_initWithLong_withLong_(self, rid, date);
  return self;
}


#line 22
void ACMessageRef_init(ACMessageRef *self) {
  (void) ARBserObject_init(self);
}


#line 22
ACMessageRef *new_ACMessageRef_init() {
  ACMessageRef *self = [ACMessageRef alloc];
  ACMessageRef_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMessageRef)

#pragma clang diagnostic pop
