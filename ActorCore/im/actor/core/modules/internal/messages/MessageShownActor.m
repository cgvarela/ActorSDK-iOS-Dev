//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/MessageShownActor.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/MessagesModule.h"
#include "im/actor/core/modules/internal/messages/ConversationActor.h"
#include "im/actor/core/modules/internal/messages/MessageShownActor.h"
#include "im/actor/core/modules/internal/messages/OwnReadActor.h"
#include "im/actor/core/modules/internal/messages/entity/MessageShownEvent.h"
#include "im/actor/core/modules/utils/ModuleActor.h"
#include "im/actor/runtime/actors/Actor.h"
#include "im/actor/runtime/actors/ActorRef.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/MessageShownActor.java"


#line 7
@implementation ACMessageShownActor

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context {
  ACMessageShownActor_initWithACModuleContext_(self, context);
  return self;
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACMessageShownEvent class]]) {
    ACMessageShownEvent *shownEvent = (ACMessageShownEvent *) check_class_cast(message, [ACMessageShownEvent class]);
    [((ARActorRef *) nil_chk([((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getOwnReadActor])) sendWithId:new_ACOwnReadActor_MessageRead_initWithACPeer_withLong_([((ACMessageShownEvent *) nil_chk(shownEvent)) getPeer],
#line 18
    [shownEvent getSortDate])];
    [((ARActorRef *) nil_chk([((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getConversationActorWithACPeer:[shownEvent getPeer]])) sendWithId:new_ACConversationActor_MessageReadByMe_initWithLong_(
#line 20
    [shownEvent getSortDate])];
  }
  else {
    
#line 22
    [self dropWithId:message];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "MessageShownActor", NULL, 0x1, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACMessageShownActor = { 2, "MessageShownActor", "im.actor.core.modules.internal.messages", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACMessageShownActor;
}

@end


#line 9
void ACMessageShownActor_initWithACModuleContext_(ACMessageShownActor *self, id<ACModuleContext> context) {
  (void) ACModuleActor_initWithACModuleContext_(self, context);
}


#line 9
ACMessageShownActor *new_ACMessageShownActor_initWithACModuleContext_(id<ACModuleContext> context) {
  ACMessageShownActor *self = [ACMessageShownActor alloc];
  ACMessageShownActor_initWithACModuleContext_(self, context);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMessageShownActor)

#pragma clang diagnostic pop
