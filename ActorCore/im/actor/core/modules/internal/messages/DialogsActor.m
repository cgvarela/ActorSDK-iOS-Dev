//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/entity/Avatar.h"
#include "im/actor/core/entity/ContentDescription.h"
#include "im/actor/core/entity/ContentType.h"
#include "im/actor/core/entity/Dialog.h"
#include "im/actor/core/entity/DialogBuilder.h"
#include "im/actor/core/entity/Group.h"
#include "im/actor/core/entity/Message.h"
#include "im/actor/core/entity/MessageState.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/entity/PeerType.h"
#include "im/actor/core/entity/User.h"
#include "im/actor/core/entity/content/AbsContent.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/AppStateModule.h"
#include "im/actor/core/modules/internal/MessagesModule.h"
#include "im/actor/core/modules/internal/SearchModule.h"
#include "im/actor/core/modules/internal/messages/DialogsActor.h"
#include "im/actor/core/modules/internal/messages/entity/DialogHistory.h"
#include "im/actor/core/modules/utils/ModuleActor.h"
#include "im/actor/core/util/JavaUtil.h"
#include "im/actor/runtime/Log.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/actors/Actor.h"
#include "im/actor/runtime/storage/ListEngine.h"
#include <j2objc/java/lang/Boolean.h>
#include <j2objc/java/util/ArrayList.h>
#include <j2objc/java/util/List.h>

@class ACDialogsActor_PeerDesc;

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACDialogsActor () {
 @public
  id<ARListEngine> dialogs_;
  JavaLangBoolean *isEmpty_;
  JavaLangBoolean *emptyNotified_;
}

- (void)onMessageWithACPeer:(ACPeer *)peer
              withACMessage:(ACMessage *)message
                withBoolean:(jboolean)forceWrite
                    withInt:(jint)counter;

- (void)onUserChangedWithACUser:(ACUser *)user;

- (void)onGroupChangedWithACGroup:(ACGroup *)group;

- (void)onChatDeletedWithACPeer:(ACPeer *)peer;

- (void)onChatClearWithACPeer:(ACPeer *)peer;

- (void)onMessageStatusChangedWithACPeer:(ACPeer *)peer
                                withLong:(jlong)rid
                  withACMessageStateEnum:(ACMessageStateEnum *)state;

- (void)onMessageContentChangedWithACPeer:(ACPeer *)peer
                                 withLong:(jlong)rid
                         withACAbsContent:(ACAbsContent *)content;

- (void)onCounterChangedWithACPeer:(ACPeer *)peer
                           withInt:(jint)count;

- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history;

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)updated;

- (void)addOrUpdateItemWithACDialog:(ACDialog *)dialog;

- (void)updateSearchWithACDialog:(ACDialog *)dialog;

- (void)updateSearchWithJavaUtilList:(id<JavaUtilList>)updated;

- (void)notifyStateWithBoolean:(jboolean)force;

- (ACDialogsActor_PeerDesc *)buildPeerDescWithACPeer:(ACPeer *)peer;

@end

J2OBJC_FIELD_SETTER(ACDialogsActor, dialogs_, id<ARListEngine>)
J2OBJC_FIELD_SETTER(ACDialogsActor, isEmpty_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(ACDialogsActor, emptyNotified_, JavaLangBoolean *)

__attribute__((unused)) static void ACDialogsActor_onMessageWithACPeer_withACMessage_withBoolean_withInt_(ACDialogsActor *self, ACPeer *peer, ACMessage *message, jboolean forceWrite, jint counter);

__attribute__((unused)) static void ACDialogsActor_onUserChangedWithACUser_(ACDialogsActor *self, ACUser *user);

__attribute__((unused)) static void ACDialogsActor_onGroupChangedWithACGroup_(ACDialogsActor *self, ACGroup *group);

__attribute__((unused)) static void ACDialogsActor_onChatDeletedWithACPeer_(ACDialogsActor *self, ACPeer *peer);

__attribute__((unused)) static void ACDialogsActor_onChatClearWithACPeer_(ACDialogsActor *self, ACPeer *peer);

__attribute__((unused)) static void ACDialogsActor_onMessageStatusChangedWithACPeer_withLong_withACMessageStateEnum_(ACDialogsActor *self, ACPeer *peer, jlong rid, ACMessageStateEnum *state);

__attribute__((unused)) static void ACDialogsActor_onMessageContentChangedWithACPeer_withLong_withACAbsContent_(ACDialogsActor *self, ACPeer *peer, jlong rid, ACAbsContent *content);

__attribute__((unused)) static void ACDialogsActor_onCounterChangedWithACPeer_withInt_(ACDialogsActor *self, ACPeer *peer, jint count);

__attribute__((unused)) static void ACDialogsActor_onHistoryLoadedWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> history);

__attribute__((unused)) static void ACDialogsActor_addOrUpdateItemsWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> updated);

__attribute__((unused)) static void ACDialogsActor_addOrUpdateItemWithACDialog_(ACDialogsActor *self, ACDialog *dialog);

__attribute__((unused)) static void ACDialogsActor_updateSearchWithACDialog_(ACDialogsActor *self, ACDialog *dialog);

__attribute__((unused)) static void ACDialogsActor_updateSearchWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> updated);

__attribute__((unused)) static void ACDialogsActor_notifyStateWithBoolean_(ACDialogsActor *self, jboolean force);

__attribute__((unused)) static ACDialogsActor_PeerDesc *ACDialogsActor_buildPeerDescWithACPeer_(ACDialogsActor *self, ACPeer *peer);

@interface ACDialogsActor_PeerDesc : NSObject {
 @public
  NSString *title_;
  ACAvatar *avatar_;
}

- (instancetype)initWithACDialogsActor:(ACDialogsActor *)outer$
                          withNSString:(NSString *)title
                          withACAvatar:(ACAvatar *)avatar;

- (NSString *)getTitle;

- (ACAvatar *)getAvatar;

@end

J2OBJC_EMPTY_STATIC_INIT(ACDialogsActor_PeerDesc)

J2OBJC_FIELD_SETTER(ACDialogsActor_PeerDesc, title_, NSString *)
J2OBJC_FIELD_SETTER(ACDialogsActor_PeerDesc, avatar_, ACAvatar *)

__attribute__((unused)) static void ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(ACDialogsActor_PeerDesc *self, ACDialogsActor *outer$, NSString *title, ACAvatar *avatar);

__attribute__((unused)) static ACDialogsActor_PeerDesc *new_ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(ACDialogsActor *outer$, NSString *title, ACAvatar *avatar) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACDialogsActor_PeerDesc)

@interface ACDialogsActor_InMessage () {
 @public
  ACPeer *peer_;
  ACMessage *message_;
  jint counter_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_InMessage, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACDialogsActor_InMessage, message_, ACMessage *)

@interface ACDialogsActor_CounterChanged () {
 @public
  ACPeer *peer_;
  jint counter_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_CounterChanged, peer_, ACPeer *)

@interface ACDialogsActor_UserChanged () {
 @public
  ACUser *user_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_UserChanged, user_, ACUser *)

@interface ACDialogsActor_GroupChanged () {
 @public
  ACGroup *group_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_GroupChanged, group_, ACGroup *)

@interface ACDialogsActor_ChatClear () {
 @public
  ACPeer *peer_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_ChatClear, peer_, ACPeer *)

@interface ACDialogsActor_ChatDelete () {
 @public
  ACPeer *peer_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_ChatDelete, peer_, ACPeer *)

@interface ACDialogsActor_MessageStateChanged () {
 @public
  ACPeer *peer_;
  jlong rid_;
  ACMessageStateEnum *state_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_MessageStateChanged, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACDialogsActor_MessageStateChanged, state_, ACMessageStateEnum *)

@interface ACDialogsActor_MessageContentChanged () {
 @public
  ACPeer *peer_;
  jlong rid_;
  ACAbsContent *content_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_MessageContentChanged, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACDialogsActor_MessageContentChanged, content_, ACAbsContent *)

@interface ACDialogsActor_MessageDeleted () {
 @public
  ACPeer *peer_;
  ACMessage *topMessage_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_MessageDeleted, peer_, ACPeer *)
J2OBJC_FIELD_SETTER(ACDialogsActor_MessageDeleted, topMessage_, ACMessage *)

@interface ACDialogsActor_HistoryLoaded () {
 @public
  id<JavaUtilList> history_;
}

@end

J2OBJC_FIELD_SETTER(ACDialogsActor_HistoryLoaded, history_, id<JavaUtilList>)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 31
@implementation ACDialogsActor


#line 37
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context {
  ACDialogsActor_initWithACModuleContext_(self, context);
  return self;
}

- (void)preStart {
  [super preStart];
  self->dialogs_ = [((ACMessagesModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getMessagesModule])) getDialogsEngine];
  ACDialogsActor_notifyStateWithBoolean_(self, true);
}


#line 49
- (void)onMessageWithACPeer:(ACPeer *)peer
              withACMessage:(ACMessage *)message
                withBoolean:(jboolean)forceWrite
                    withInt:(jint)counter {
  ACDialogsActor_onMessageWithACPeer_withACMessage_withBoolean_withInt_(self, peer, message, forceWrite, counter);
}


#line 126
- (void)onUserChangedWithACUser:(ACUser *)user {
  ACDialogsActor_onUserChangedWithACUser_(self, user);
}


#line 143
- (void)onGroupChangedWithACGroup:(ACGroup *)group {
  ACDialogsActor_onGroupChangedWithACGroup_(self, group);
}


#line 160
- (void)onChatDeletedWithACPeer:(ACPeer *)peer {
  ACDialogsActor_onChatDeletedWithACPeer_(self, peer);
}


#line 168
- (void)onChatClearWithACPeer:(ACPeer *)peer {
  ACDialogsActor_onChatClearWithACPeer_(self, peer);
}


#line 188
- (void)onMessageStatusChangedWithACPeer:(ACPeer *)peer
                                withLong:(jlong)rid
                  withACMessageStateEnum:(ACMessageStateEnum *)state {
  ACDialogsActor_onMessageStatusChangedWithACPeer_withLong_withACMessageStateEnum_(self, peer, rid, state);
}


#line 202
- (void)onMessageContentChangedWithACPeer:(ACPeer *)peer
                                 withLong:(jlong)rid
                         withACAbsContent:(ACAbsContent *)content {
  ACDialogsActor_onMessageContentChangedWithACPeer_withLong_withACAbsContent_(self, peer, rid, content);
}


#line 219
- (void)onCounterChangedWithACPeer:(ACPeer *)peer
                           withInt:(jint)count {
  ACDialogsActor_onCounterChangedWithACPeer_withInt_(self, peer, count);
}


#line 238
- (void)onHistoryLoadedWithJavaUtilList:(id<JavaUtilList>)history {
  ACDialogsActor_onHistoryLoadedWithJavaUtilList_(self, history);
}


#line 267
- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)updated {
  ACDialogsActor_addOrUpdateItemsWithJavaUtilList_(self, updated);
}

- (void)addOrUpdateItemWithACDialog:(ACDialog *)dialog {
  ACDialogsActor_addOrUpdateItemWithACDialog_(self, dialog);
}

- (void)updateSearchWithACDialog:(ACDialog *)dialog {
  ACDialogsActor_updateSearchWithACDialog_(self, dialog);
}


#line 281
- (void)updateSearchWithJavaUtilList:(id<JavaUtilList>)updated {
  ACDialogsActor_updateSearchWithJavaUtilList_(self, updated);
}

- (void)notifyStateWithBoolean:(jboolean)force {
  ACDialogsActor_notifyStateWithBoolean_(self, force);
}


#line 297
- (ACDialogsActor_PeerDesc *)buildPeerDescWithACPeer:(ACPeer *)peer {
  return ACDialogsActor_buildPeerDescWithACPeer_(self, peer);
}


#line 332
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACDialogsActor_InMessage class]]) {
    ACDialogsActor_InMessage *inMessage = (ACDialogsActor_InMessage *) check_class_cast(message, [ACDialogsActor_InMessage class]);
    ACDialogsActor_onMessageWithACPeer_withACMessage_withBoolean_withInt_(self, [((ACDialogsActor_InMessage *) nil_chk(inMessage)) getPeer], [inMessage getMessage], false, [inMessage getCounter]);
  }
  else
#line 336
  if ([message isKindOfClass:[ACDialogsActor_UserChanged class]]) {
    ACDialogsActor_UserChanged *userChanged = (ACDialogsActor_UserChanged *) check_class_cast(message, [ACDialogsActor_UserChanged class]);
    ACDialogsActor_onUserChangedWithACUser_(self, [((ACDialogsActor_UserChanged *) nil_chk(userChanged)) getUser]);
  }
  else
#line 339
  if ([message isKindOfClass:[ACDialogsActor_ChatClear class]]) {
    ACDialogsActor_onChatClearWithACPeer_(self, [((ACDialogsActor_ChatClear *) nil_chk(((ACDialogsActor_ChatClear *) check_class_cast(message, [ACDialogsActor_ChatClear class])))) getPeer]);
  }
  else
#line 341
  if ([message isKindOfClass:[ACDialogsActor_ChatDelete class]]) {
    ACDialogsActor_onChatDeletedWithACPeer_(self, [((ACDialogsActor_ChatDelete *) nil_chk(((ACDialogsActor_ChatDelete *) check_class_cast(message, [ACDialogsActor_ChatDelete class])))) getPeer]);
  }
  else
#line 343
  if ([message isKindOfClass:[ACDialogsActor_MessageStateChanged class]]) {
    ACDialogsActor_MessageStateChanged *messageStateChanged = (ACDialogsActor_MessageStateChanged *) check_class_cast(message, [ACDialogsActor_MessageStateChanged class]);
    ACDialogsActor_onMessageStatusChangedWithACPeer_withLong_withACMessageStateEnum_(self, [((ACDialogsActor_MessageStateChanged *) nil_chk(messageStateChanged)) getPeer], [messageStateChanged getRid],
#line 346
    [messageStateChanged getState]);
  }
  else
#line 347
  if ([message isKindOfClass:[ACDialogsActor_MessageDeleted class]]) {
    ACDialogsActor_MessageDeleted *deleted = (ACDialogsActor_MessageDeleted *) check_class_cast(message, [ACDialogsActor_MessageDeleted class]);
    ACDialogsActor_onMessageWithACPeer_withACMessage_withBoolean_withInt_(self, [((ACDialogsActor_MessageDeleted *) nil_chk(deleted)) getPeer], [deleted getTopMessage], true, -1);
  }
  else
#line 350
  if ([message isKindOfClass:[ACDialogsActor_HistoryLoaded class]]) {
    ACDialogsActor_HistoryLoaded *historyLoaded = (ACDialogsActor_HistoryLoaded *) check_class_cast(message, [ACDialogsActor_HistoryLoaded class]);
    ACDialogsActor_onHistoryLoadedWithJavaUtilList_(self, [((ACDialogsActor_HistoryLoaded *) nil_chk(historyLoaded)) getHistory]);
  }
  else
#line 353
  if ([message isKindOfClass:[ACDialogsActor_GroupChanged class]]) {
    ACDialogsActor_GroupChanged *groupChanged = (ACDialogsActor_GroupChanged *) check_class_cast(message, [ACDialogsActor_GroupChanged class]);
    ACDialogsActor_onGroupChangedWithACGroup_(self, [((ACDialogsActor_GroupChanged *) nil_chk(groupChanged)) getGroup]);
  }
  else
#line 356
  if ([message isKindOfClass:[ACDialogsActor_MessageContentChanged class]]) {
    ACDialogsActor_MessageContentChanged *contentChanged = (ACDialogsActor_MessageContentChanged *) check_class_cast(message, [ACDialogsActor_MessageContentChanged class]);
    ACDialogsActor_onMessageContentChangedWithACPeer_withLong_withACAbsContent_(self, [((ACDialogsActor_MessageContentChanged *) nil_chk(contentChanged)) getPeer], [contentChanged getRid],
#line 359
    [contentChanged getContent]);
  }
  else
#line 360
  if ([message isKindOfClass:[ACDialogsActor_CounterChanged class]]) {
    ACDialogsActor_CounterChanged *counterChanged = (ACDialogsActor_CounterChanged *) check_class_cast(message, [ACDialogsActor_CounterChanged class]);
    ACDialogsActor_onCounterChangedWithACPeer_withInt_(self, [((ACDialogsActor_CounterChanged *) nil_chk(counterChanged)) getPeer], [counterChanged getCounter]);
  }
  else {
    
#line 364
    [self dropWithId:message];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "DialogsActor", NULL, 0x1, NULL, NULL },
    { "preStart", NULL, "V", 0x1, NULL, NULL },
    { "onMessageWithACPeer:withACMessage:withBoolean:withInt:", "onMessage", "V", 0x2, NULL, NULL },
    { "onUserChangedWithACUser:", "onUserChanged", "V", 0x2, NULL, NULL },
    { "onGroupChangedWithACGroup:", "onGroupChanged", "V", 0x2, NULL, NULL },
    { "onChatDeletedWithACPeer:", "onChatDeleted", "V", 0x2, NULL, NULL },
    { "onChatClearWithACPeer:", "onChatClear", "V", 0x2, NULL, NULL },
    { "onMessageStatusChangedWithACPeer:withLong:withACMessageStateEnum:", "onMessageStatusChanged", "V", 0x2, NULL, NULL },
    { "onMessageContentChangedWithACPeer:withLong:withACAbsContent:", "onMessageContentChanged", "V", 0x2, NULL, NULL },
    { "onCounterChangedWithACPeer:withInt:", "onCounterChanged", "V", 0x2, NULL, NULL },
    { "onHistoryLoadedWithJavaUtilList:", "onHistoryLoaded", "V", 0x2, NULL, NULL },
    { "addOrUpdateItemsWithJavaUtilList:", "addOrUpdateItems", "V", 0x2, NULL, NULL },
    { "addOrUpdateItemWithACDialog:", "addOrUpdateItem", "V", 0x2, NULL, NULL },
    { "updateSearchWithACDialog:", "updateSearch", "V", 0x2, NULL, NULL },
    { "updateSearchWithJavaUtilList:", "updateSearch", "V", 0x2, NULL, NULL },
    { "notifyStateWithBoolean:", "notifyState", "V", 0x2, NULL, NULL },
    { "buildPeerDescWithACPeer:", "buildPeerDesc", "Lim.actor.core.modules.internal.messages.DialogsActor$PeerDesc;", 0x2, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dialogs_", NULL, 0x2, "Lim.actor.runtime.storage.ListEngine;", NULL, "Lim/actor/runtime/storage/ListEngine<Lim/actor/core/entity/Dialog;>;", .constantValue.asLong = 0 },
    { "isEmpty_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "emptyNotified_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.core.modules.internal.messages.DialogsActor$PeerDesc;", "Lim.actor.core.modules.internal.messages.DialogsActor$InMessage;", "Lim.actor.core.modules.internal.messages.DialogsActor$CounterChanged;", "Lim.actor.core.modules.internal.messages.DialogsActor$UserChanged;", "Lim.actor.core.modules.internal.messages.DialogsActor$GroupChanged;", "Lim.actor.core.modules.internal.messages.DialogsActor$ChatClear;", "Lim.actor.core.modules.internal.messages.DialogsActor$ChatDelete;", "Lim.actor.core.modules.internal.messages.DialogsActor$MessageStateChanged;", "Lim.actor.core.modules.internal.messages.DialogsActor$MessageContentChanged;", "Lim.actor.core.modules.internal.messages.DialogsActor$MessageDeleted;", "Lim.actor.core.modules.internal.messages.DialogsActor$HistoryLoaded;"};
  static const J2ObjcClassInfo _ACDialogsActor = { 2, "DialogsActor", "im.actor.core.modules.internal.messages", NULL, 0x1, 18, methods, 3, fields, 0, NULL, 11, inner_classes, NULL, NULL };
  return &_ACDialogsActor;
}

@end


#line 37
void ACDialogsActor_initWithACModuleContext_(ACDialogsActor *self, id<ACModuleContext> context) {
  (void) ACModuleActor_initWithACModuleContext_(self, context);
}


#line 37
ACDialogsActor *new_ACDialogsActor_initWithACModuleContext_(id<ACModuleContext> context) {
  ACDialogsActor *self = [ACDialogsActor alloc];
  ACDialogsActor_initWithACModuleContext_(self, context);
  return self;
}


#line 49
void ACDialogsActor_onMessageWithACPeer_withACMessage_withBoolean_withInt_(ACDialogsActor *self, ACPeer *peer, ACMessage *message, jboolean forceWrite, jint counter) {
  jlong start = ARRuntime_getCurrentTime();
  ACDialogsActor_PeerDesc *peerDesc = ACDialogsActor_buildPeerDescWithACPeer_(self, peer);
  if (peerDesc == nil) {
    ARLog_dWithNSString_withNSString_(@"DialogsActor", @"unknown peer desc");
    return;
  }
  
#line 57
  if (message == nil) {
    
#line 59
    if (!forceWrite) {
      ARLog_dWithNSString_withNSString_(@"DialogsActor", @"not force");
      return;
    }
    
#line 65
    ACDialogsActor_onChatClearWithACPeer_(self, peer);
  }
  else {
    
#line 67
    ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
    
#line 69
    ACContentDescription *contentDescription = ACContentDescription_fromContentWithACAbsContent_([message getContent]);
    
#line 71
    ACDialogBuilder *builder = [((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([new_ACDialogBuilder_init() setRidWithLong:
#line 72
    [message getRid]])) setTimeWithLong:
#line 73
    [message getDate]])) setMessageTypeWithACContentTypeEnum:
#line 74
    [((ACContentDescription *) nil_chk(contentDescription)) getContentType]])) setTextWithNSString:
#line 75
    [contentDescription getText]])) setRelatedUidWithInt:
#line 76
    [contentDescription getRelatedUser]])) setStatusWithACMessageStateEnum:
#line 77
    [message getMessageState]])) setSenderIdWithInt:
#line 78
    [message getSenderId]];
    
#line 80
    if (counter >= 0) {
      (void) [((ACDialogBuilder *) nil_chk(builder)) setUnreadCountWithInt:counter];
    }
    
#line 84
    jboolean forceUpdate = false;
    
#line 86
    if (dialog != nil) {
      
#line 88
      if (!forceWrite && [dialog getSortDate] > [message getSortDate]) {
        ARLog_dWithNSString_withNSString_(@"DialogsActor", @"too old");
        return;
      }
      
#line 93
      (void) [((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk(builder)) setPeerWithACPeer:[dialog getPeer]])) setDialogTitleWithNSString:
#line 94
      [dialog getDialogTitle]])) setDialogAvatarWithACAvatar:
#line 95
      [dialog getDialogAvatar]])) setSortKeyWithLong:
#line 96
      [dialog getSortDate]];
      
#line 99
      if (![contentDescription isSilent]) {
        (void) [builder setSortKeyWithLong:[message getSortDate]];
      }
    }
    else {
      
#line 105
      if ([contentDescription isSilent]) {
        ARLog_dWithNSString_withNSString_(@"DialogsActor", @"is silent in");
        return;
      }
      
#line 110
      (void) [((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk(builder)) setPeerWithACPeer:peer])) setDialogTitleWithNSString:
#line 111
      [((ACDialogsActor_PeerDesc *) nil_chk(peerDesc)) getTitle]])) setDialogAvatarWithACAvatar:
#line 112
      [peerDesc getAvatar]])) setSortKeyWithLong:
#line 113
      [message getSortDate]];
      
#line 115
      forceUpdate = true;
    }
    
#line 118
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, [((ACDialogBuilder *) nil_chk(builder)) createDialog]);
    ACDialogsActor_notifyStateWithBoolean_(self, forceUpdate);
  }
  
#line 122
  ARLog_dWithNSString_withNSString_(@"DialogsActor", JreStrcat("$J$", @"onMessage in ", (ARRuntime_getCurrentTime() - start), @" ms"));
}


#line 126
void ACDialogsActor_onUserChangedWithACUser_(ACDialogsActor *self, ACUser *user) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk([((ACUser *) nil_chk(user)) peer])) getUnuqueId]];
  if (dialog != nil) {
    
#line 130
    if ([((NSString *) nil_chk([dialog getDialogTitle])) isEqual:[user getName]] && ACJavaUtil_equalsEWithId_withId_(
#line 131
    [dialog getDialogAvatar], [user getAvatar])) {
      return;
    }
    
#line 136
    ACDialog *updated = [dialog editPeerInfoWithNSString:[user getName] withACAvatar:[user getAvatar]];
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, updated);
    ACDialogsActor_updateSearchWithACDialog_(self, updated);
  }
}


#line 143
void ACDialogsActor_onGroupChangedWithACGroup_(ACDialogsActor *self, ACGroup *group) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk([((ACGroup *) nil_chk(group)) peer])) getUnuqueId]];
  if (dialog != nil) {
    
#line 147
    if ([((NSString *) nil_chk([dialog getDialogTitle])) isEqual:[group getTitle]] && ACJavaUtil_equalsEWithId_withId_(
#line 148
    [dialog getDialogAvatar], [group getAvatar])) {
      return;
    }
    
#line 153
    ACDialog *updated = [dialog editPeerInfoWithNSString:[group getTitle] withACAvatar:[group getAvatar]];
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, updated);
    ACDialogsActor_updateSearchWithACDialog_(self, updated);
  }
}


#line 160
void ACDialogsActor_onChatDeletedWithACPeer_(ACDialogsActor *self, ACPeer *peer) {
  
#line 162
  [((id<ARListEngine>) nil_chk(self->dialogs_)) removeItemWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
  
#line 164
  ACDialogsActor_notifyStateWithBoolean_(self, true);
}


#line 168
void ACDialogsActor_onChatClearWithACPeer_(ACDialogsActor *self, ACPeer *peer) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
  
#line 172
  if (dialog != nil) {
    
#line 175
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, [((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([new_ACDialogBuilder_initWithACDialog_(dialog) setMessageTypeWithACContentTypeEnum:JreLoadStatic(ACContentTypeEnum, NONE)])) setTextWithNSString:
#line 177
    @""])) setTimeWithLong:
#line 178
    0])) setUnreadCountWithInt:
#line 179
    0])) setRidWithLong:
#line 180
    0])) setSenderIdWithInt:
#line 181
    0])) setStatusWithACMessageStateEnum:JreLoadStatic(ACMessageStateEnum, UNKNOWN)])) createDialog]);
  }
}


#line 188
void ACDialogsActor_onMessageStatusChangedWithACPeer_withLong_withACMessageStateEnum_(ACDialogsActor *self, ACPeer *peer, jlong rid, ACMessageStateEnum *state) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
  
#line 192
  if (dialog != nil && [dialog getRid] == rid) {
    
#line 195
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, [((ACDialogBuilder *) nil_chk([new_ACDialogBuilder_initWithACDialog_(dialog) setStatusWithACMessageStateEnum:
#line 196
    state])) createDialog]);
  }
}


#line 202
void ACDialogsActor_onMessageContentChangedWithACPeer_withLong_withACAbsContent_(ACDialogsActor *self, ACPeer *peer, jlong rid, ACAbsContent *content) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
  
#line 206
  if (dialog != nil && [dialog getRid] == rid) {
    
#line 209
    ACContentDescription *description_ = ACContentDescription_fromContentWithACAbsContent_(content);
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, [((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([((ACDialogBuilder *) nil_chk([new_ACDialogBuilder_initWithACDialog_(dialog) setTextWithNSString:
#line 211
    [((ACContentDescription *) nil_chk(description_)) getText]])) setRelatedUidWithInt:
#line 212
    [description_ getRelatedUser]])) setMessageTypeWithACContentTypeEnum:
#line 213
    [description_ getContentType]])) createDialog]);
  }
}


#line 219
void ACDialogsActor_onCounterChangedWithACPeer_withInt_(ACDialogsActor *self, ACPeer *peer, jint count) {
  ACDialog *dialog = [((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk(peer)) getUnuqueId]];
  
#line 223
  if (dialog != nil) {
    
#line 226
    if ([dialog getUnreadCount] == count) {
      return;
    }
    
#line 231
    ACDialogsActor_addOrUpdateItemWithACDialog_(self, [((ACDialogBuilder *) nil_chk([new_ACDialogBuilder_initWithACDialog_(dialog) setUnreadCountWithInt:
#line 232
    count])) createDialog]);
  }
}


#line 238
void ACDialogsActor_onHistoryLoadedWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> history) {
  JavaUtilArrayList *updated = new_JavaUtilArrayList_init();
  for (ACDialogHistory * __strong dialogHistory in nil_chk(history)) {
    
#line 242
    if ([((id<ARListEngine>) nil_chk(self->dialogs_)) getValueWithKey:[((ACPeer *) nil_chk([((ACDialogHistory *) nil_chk(dialogHistory)) getPeer])) getUnuqueId]] != nil) {
      continue;
    }
    
#line 246
    ACDialogsActor_PeerDesc *peerDesc = ACDialogsActor_buildPeerDescWithACPeer_(self, [dialogHistory getPeer]);
    if (peerDesc == nil) {
      continue;
    }
    
#line 251
    ACContentDescription *description_ = ACContentDescription_fromContentWithACAbsContent_([dialogHistory getContent]);
    
#line 253
    [updated addWithId:new_ACDialog_initWithACPeer_withLong_withNSString_withACAvatar_withInt_withLong_withACContentTypeEnum_withNSString_withACMessageStateEnum_withInt_withLong_withInt_([dialogHistory getPeer],
#line 254
    [dialogHistory getSortDate], [((ACDialogsActor_PeerDesc *) nil_chk(peerDesc)) getTitle], [peerDesc getAvatar],
#line 255
    [dialogHistory getUnreadCount],
#line 256
    [dialogHistory getRid], [((ACContentDescription *) nil_chk(description_)) getContentType], [description_ getText], [dialogHistory getStatus],
#line 257
    [dialogHistory getSenderId], [dialogHistory getDate], [description_ getRelatedUser])];
  }
  ACDialogsActor_addOrUpdateItemsWithJavaUtilList_(self, updated);
  ACDialogsActor_updateSearchWithJavaUtilList_(self, updated);
  [((ACAppStateModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getAppStateModule])) onDialogsLoaded];
  ACDialogsActor_notifyStateWithBoolean_(self, true);
}


#line 267
void ACDialogsActor_addOrUpdateItemsWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> updated) {
  [((id<ARListEngine>) nil_chk(self->dialogs_)) addOrUpdateItems:updated];
}

void ACDialogsActor_addOrUpdateItemWithACDialog_(ACDialogsActor *self, ACDialog *dialog) {
  [((id<ARListEngine>) nil_chk(self->dialogs_)) addOrUpdateItem:dialog];
}

void ACDialogsActor_updateSearchWithACDialog_(ACDialogsActor *self, ACDialog *dialog) {
  JavaUtilArrayList *d = new_JavaUtilArrayList_init();
  [d addWithId:dialog];
  [((ACSearchModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getSearchModule])) onDialogsChangedWithJavaUtilList:d];
}

void ACDialogsActor_updateSearchWithJavaUtilList_(ACDialogsActor *self, id<JavaUtilList> updated) {
  [((ACSearchModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getSearchModule])) onDialogsChangedWithJavaUtilList:updated];
}

void ACDialogsActor_notifyStateWithBoolean_(ACDialogsActor *self, jboolean force) {
  if (self->isEmpty_ == nil || force) {
    self->isEmpty_ = JavaLangBoolean_valueOfWithBoolean_([((id<ARListEngine>) nil_chk(self->dialogs_)) isEmpty]);
  }
  
#line 290
  if (![((JavaLangBoolean *) nil_chk(self->isEmpty_)) isEqual:self->emptyNotified_]) {
    self->emptyNotified_ = self->isEmpty_;
    [((ACAppStateModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getAppStateModule])) onDialogsUpdateWithBoolean:[self->isEmpty_ booleanValue]];
  }
}

ACDialogsActor_PeerDesc *ACDialogsActor_buildPeerDescWithACPeer_(ACDialogsActor *self, ACPeer *peer) {
  {
    
#line 300
    ACUser *u;
    
#line 303
    ACGroup *g;
    
#line 298
    switch ([[((ACPeer *) nil_chk(peer)) getPeerType] ordinal]) {
      case ACPeerType_PRIVATE:
      u = [self getUserWithInt:[peer getPeerId]];
      return new_ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(self, [((ACUser *) nil_chk(u)) getName], [u getAvatar]);
      case ACPeerType_GROUP:
      g = [self getGroupWithInt:[peer getPeerId]];
      return new_ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(self, [((ACGroup *) nil_chk(g)) getTitle], [g getAvatar]);
      default:
      return nil;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 310
@implementation ACDialogsActor_PeerDesc


#line 315
- (instancetype)initWithACDialogsActor:(ACDialogsActor *)outer$
                          withNSString:(NSString *)title
                          withACAvatar:(ACAvatar *)avatar {
  ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(self, outer$, title, avatar);
  return self;
}


#line 320
- (NSString *)getTitle {
  return title_;
}

- (ACAvatar *)getAvatar {
  return avatar_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACDialogsActor:withNSString:withACAvatar:", "PeerDesc", NULL, 0x2, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAvatar", NULL, "Lim.actor.core.entity.Avatar;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "title_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "avatar_", NULL, 0x2, "Lim.actor.core.entity.Avatar;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_PeerDesc = { 2, "PeerDesc", "im.actor.core.modules.internal.messages", "DialogsActor", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_PeerDesc;
}

@end


#line 315
void ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(ACDialogsActor_PeerDesc *self, ACDialogsActor *outer$, NSString *title, ACAvatar *avatar) {
  (void) NSObject_init(self);
  
#line 316
  self->title_ = title;
  self->avatar_ = avatar;
}


#line 315
ACDialogsActor_PeerDesc *new_ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(ACDialogsActor *outer$, NSString *title, ACAvatar *avatar) {
  ACDialogsActor_PeerDesc *self = [ACDialogsActor_PeerDesc alloc];
  ACDialogsActor_PeerDesc_initWithACDialogsActor_withNSString_withACAvatar_(self, outer$, title, avatar);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_PeerDesc)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 368
@implementation ACDialogsActor_InMessage


#line 373
- (instancetype)initWithACPeer:(ACPeer *)peer
                 withACMessage:(ACMessage *)message
                       withInt:(jint)counter {
  ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(self, peer, message, counter);
  return self;
}


#line 379
- (ACPeer *)getPeer {
  return peer_;
}

- (ACMessage *)getMessage {
  return message_;
}

- (jint)getCounter {
  return counter_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withACMessage:withInt:", "InMessage", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getMessage", NULL, "Lim.actor.core.entity.Message;", 0x1, NULL, NULL },
    { "getCounter", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x2, "Lim.actor.core.entity.Message;", NULL, NULL, .constantValue.asLong = 0 },
    { "counter_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_InMessage = { 2, "InMessage", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_InMessage;
}

@end


#line 373
void ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(ACDialogsActor_InMessage *self, ACPeer *peer, ACMessage *message, jint counter) {
  (void) NSObject_init(self);
  
#line 374
  self->peer_ = peer;
  self->message_ = message;
  self->counter_ = counter;
}


#line 373
ACDialogsActor_InMessage *new_ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(ACPeer *peer, ACMessage *message, jint counter) {
  ACDialogsActor_InMessage *self = [ACDialogsActor_InMessage alloc];
  ACDialogsActor_InMessage_initWithACPeer_withACMessage_withInt_(self, peer, message, counter);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_InMessage)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 392
@implementation ACDialogsActor_CounterChanged


#line 396
- (instancetype)initWithACPeer:(ACPeer *)peer
                       withInt:(jint)counter {
  ACDialogsActor_CounterChanged_initWithACPeer_withInt_(self, peer, counter);
  return self;
}


#line 401
- (ACPeer *)getPeer {
  return peer_;
}

- (jint)getCounter {
  return counter_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withInt:", "CounterChanged", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getCounter", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "counter_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_CounterChanged = { 2, "CounterChanged", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_CounterChanged;
}

@end


#line 396
void ACDialogsActor_CounterChanged_initWithACPeer_withInt_(ACDialogsActor_CounterChanged *self, ACPeer *peer, jint counter) {
  (void) NSObject_init(self);
  
#line 397
  self->peer_ = peer;
  self->counter_ = counter;
}


#line 396
ACDialogsActor_CounterChanged *new_ACDialogsActor_CounterChanged_initWithACPeer_withInt_(ACPeer *peer, jint counter) {
  ACDialogsActor_CounterChanged *self = [ACDialogsActor_CounterChanged alloc];
  ACDialogsActor_CounterChanged_initWithACPeer_withInt_(self, peer, counter);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_CounterChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 410
@implementation ACDialogsActor_UserChanged


#line 413
- (instancetype)initWithACUser:(ACUser *)user {
  ACDialogsActor_UserChanged_initWithACUser_(self, user);
  return self;
}


#line 417
- (ACUser *)getUser {
  return user_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACUser:", "UserChanged", NULL, 0x1, NULL, NULL },
    { "getUser", NULL, "Lim.actor.core.entity.User;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "user_", NULL, 0x2, "Lim.actor.core.entity.User;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_UserChanged = { 2, "UserChanged", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_UserChanged;
}

@end


#line 413
void ACDialogsActor_UserChanged_initWithACUser_(ACDialogsActor_UserChanged *self, ACUser *user) {
  (void) NSObject_init(self);
  
#line 414
  self->user_ = user;
}


#line 413
ACDialogsActor_UserChanged *new_ACDialogsActor_UserChanged_initWithACUser_(ACUser *user) {
  ACDialogsActor_UserChanged *self = [ACDialogsActor_UserChanged alloc];
  ACDialogsActor_UserChanged_initWithACUser_(self, user);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_UserChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 422
@implementation ACDialogsActor_GroupChanged


#line 425
- (instancetype)initWithACGroup:(ACGroup *)group {
  ACDialogsActor_GroupChanged_initWithACGroup_(self, group);
  return self;
}


#line 429
- (ACGroup *)getGroup {
  return group_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACGroup:", "GroupChanged", NULL, 0x1, NULL, NULL },
    { "getGroup", NULL, "Lim.actor.core.entity.Group;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "group_", NULL, 0x2, "Lim.actor.core.entity.Group;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_GroupChanged = { 2, "GroupChanged", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_GroupChanged;
}

@end


#line 425
void ACDialogsActor_GroupChanged_initWithACGroup_(ACDialogsActor_GroupChanged *self, ACGroup *group) {
  (void) NSObject_init(self);
  
#line 426
  self->group_ = group;
}


#line 425
ACDialogsActor_GroupChanged *new_ACDialogsActor_GroupChanged_initWithACGroup_(ACGroup *group) {
  ACDialogsActor_GroupChanged *self = [ACDialogsActor_GroupChanged alloc];
  ACDialogsActor_GroupChanged_initWithACGroup_(self, group);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_GroupChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 434
@implementation ACDialogsActor_ChatClear


#line 437
- (instancetype)initWithACPeer:(ACPeer *)peer {
  ACDialogsActor_ChatClear_initWithACPeer_(self, peer);
  return self;
}


#line 441
- (ACPeer *)getPeer {
  return peer_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:", "ChatClear", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_ChatClear = { 2, "ChatClear", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_ChatClear;
}

@end


#line 437
void ACDialogsActor_ChatClear_initWithACPeer_(ACDialogsActor_ChatClear *self, ACPeer *peer) {
  (void) NSObject_init(self);
  
#line 438
  self->peer_ = peer;
}


#line 437
ACDialogsActor_ChatClear *new_ACDialogsActor_ChatClear_initWithACPeer_(ACPeer *peer) {
  ACDialogsActor_ChatClear *self = [ACDialogsActor_ChatClear alloc];
  ACDialogsActor_ChatClear_initWithACPeer_(self, peer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_ChatClear)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 446
@implementation ACDialogsActor_ChatDelete


#line 449
- (instancetype)initWithACPeer:(ACPeer *)peer {
  ACDialogsActor_ChatDelete_initWithACPeer_(self, peer);
  return self;
}


#line 453
- (ACPeer *)getPeer {
  return peer_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:", "ChatDelete", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_ChatDelete = { 2, "ChatDelete", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_ChatDelete;
}

@end


#line 449
void ACDialogsActor_ChatDelete_initWithACPeer_(ACDialogsActor_ChatDelete *self, ACPeer *peer) {
  (void) NSObject_init(self);
  
#line 450
  self->peer_ = peer;
}


#line 449
ACDialogsActor_ChatDelete *new_ACDialogsActor_ChatDelete_initWithACPeer_(ACPeer *peer) {
  ACDialogsActor_ChatDelete *self = [ACDialogsActor_ChatDelete alloc];
  ACDialogsActor_ChatDelete_initWithACPeer_(self, peer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_ChatDelete)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 458
@implementation ACDialogsActor_MessageStateChanged


#line 463
- (instancetype)initWithACPeer:(ACPeer *)peer
                      withLong:(jlong)rid
        withACMessageStateEnum:(ACMessageStateEnum *)state {
  ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(self, peer, rid, state);
  return self;
}


#line 469
- (ACPeer *)getPeer {
  return peer_;
}

- (jlong)getRid {
  return rid_;
}

- (ACMessageStateEnum *)getState {
  return state_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withLong:withACMessageStateEnum:", "MessageStateChanged", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
    { "getState", NULL, "Lim.actor.core.entity.MessageState;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "Lim.actor.core.entity.MessageState;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_MessageStateChanged = { 2, "MessageStateChanged", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_MessageStateChanged;
}

@end


#line 463
void ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(ACDialogsActor_MessageStateChanged *self, ACPeer *peer, jlong rid, ACMessageStateEnum *state) {
  (void) NSObject_init(self);
  
#line 464
  self->peer_ = peer;
  self->rid_ = rid;
  self->state_ = state;
}


#line 463
ACDialogsActor_MessageStateChanged *new_ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(ACPeer *peer, jlong rid, ACMessageStateEnum *state) {
  ACDialogsActor_MessageStateChanged *self = [ACDialogsActor_MessageStateChanged alloc];
  ACDialogsActor_MessageStateChanged_initWithACPeer_withLong_withACMessageStateEnum_(self, peer, rid, state);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_MessageStateChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 482
@implementation ACDialogsActor_MessageContentChanged


#line 487
- (instancetype)initWithACPeer:(ACPeer *)peer
                      withLong:(jlong)rid
              withACAbsContent:(ACAbsContent *)content {
  ACDialogsActor_MessageContentChanged_initWithACPeer_withLong_withACAbsContent_(self, peer, rid, content);
  return self;
}


#line 493
- (ACPeer *)getPeer {
  return peer_;
}

- (jlong)getRid {
  return rid_;
}

- (ACAbsContent *)getContent {
  return content_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withLong:withACAbsContent:", "MessageContentChanged", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
    { "getContent", NULL, "Lim.actor.core.entity.content.AbsContent;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "content_", NULL, 0x2, "Lim.actor.core.entity.content.AbsContent;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_MessageContentChanged = { 2, "MessageContentChanged", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_MessageContentChanged;
}

@end


#line 487
void ACDialogsActor_MessageContentChanged_initWithACPeer_withLong_withACAbsContent_(ACDialogsActor_MessageContentChanged *self, ACPeer *peer, jlong rid, ACAbsContent *content) {
  (void) NSObject_init(self);
  
#line 488
  self->peer_ = peer;
  self->rid_ = rid;
  self->content_ = content;
}


#line 487
ACDialogsActor_MessageContentChanged *new_ACDialogsActor_MessageContentChanged_initWithACPeer_withLong_withACAbsContent_(ACPeer *peer, jlong rid, ACAbsContent *content) {
  ACDialogsActor_MessageContentChanged *self = [ACDialogsActor_MessageContentChanged alloc];
  ACDialogsActor_MessageContentChanged_initWithACPeer_withLong_withACAbsContent_(self, peer, rid, content);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_MessageContentChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 506
@implementation ACDialogsActor_MessageDeleted


#line 510
- (instancetype)initWithACPeer:(ACPeer *)peer
                 withACMessage:(ACMessage *)topMessage {
  ACDialogsActor_MessageDeleted_initWithACPeer_withACMessage_(self, peer, topMessage);
  return self;
}


#line 515
- (ACPeer *)getPeer {
  return peer_;
}

- (ACMessage *)getTopMessage {
  return topMessage_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACPeer:withACMessage:", "MessageDeleted", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.entity.Peer;", 0x1, NULL, NULL },
    { "getTopMessage", NULL, "Lim.actor.core.entity.Message;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.core.entity.Peer;", NULL, NULL, .constantValue.asLong = 0 },
    { "topMessage_", NULL, 0x2, "Lim.actor.core.entity.Message;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_MessageDeleted = { 2, "MessageDeleted", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_MessageDeleted;
}

@end


#line 510
void ACDialogsActor_MessageDeleted_initWithACPeer_withACMessage_(ACDialogsActor_MessageDeleted *self, ACPeer *peer, ACMessage *topMessage) {
  (void) NSObject_init(self);
  
#line 511
  self->peer_ = peer;
  self->topMessage_ = topMessage;
}


#line 510
ACDialogsActor_MessageDeleted *new_ACDialogsActor_MessageDeleted_initWithACPeer_withACMessage_(ACPeer *peer, ACMessage *topMessage) {
  ACDialogsActor_MessageDeleted *self = [ACDialogsActor_MessageDeleted alloc];
  ACDialogsActor_MessageDeleted_initWithACPeer_withACMessage_(self, peer, topMessage);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_MessageDeleted)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/internal/messages/DialogsActor.java"


#line 524
@implementation ACDialogsActor_HistoryLoaded


#line 527
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)history {
  ACDialogsActor_HistoryLoaded_initWithJavaUtilList_(self, history);
  return self;
}


#line 531
- (id<JavaUtilList>)getHistory {
  return history_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "HistoryLoaded", NULL, 0x1, NULL, NULL },
    { "getHistory", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "history_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/modules/internal/messages/entity/DialogHistory;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACDialogsActor_HistoryLoaded = { 2, "HistoryLoaded", "im.actor.core.modules.internal.messages", "DialogsActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACDialogsActor_HistoryLoaded;
}

@end


#line 527
void ACDialogsActor_HistoryLoaded_initWithJavaUtilList_(ACDialogsActor_HistoryLoaded *self, id<JavaUtilList> history) {
  (void) NSObject_init(self);
  
#line 528
  self->history_ = history;
}


#line 527
ACDialogsActor_HistoryLoaded *new_ACDialogsActor_HistoryLoaded_initWithJavaUtilList_(id<JavaUtilList> history) {
  ACDialogsActor_HistoryLoaded *self = [ACDialogsActor_HistoryLoaded alloc];
  ACDialogsActor_HistoryLoaded_initWithJavaUtilList_(self, history);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACDialogsActor_HistoryLoaded)

#pragma clang diagnostic pop
