//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/SettingsProcessor.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/modules/AbsModule.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/SettingsModule.h"
#include "im/actor/core/modules/updates/SettingsProcessor.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/SettingsProcessor.java"


#line 10
@implementation ACSettingsProcessor

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)modules {
  ACSettingsProcessor_initWithACModuleContext_(self, modules);
  return self;
}


#line 16
- (void)onSettingsChangedWithNSString:(NSString *)key
                         withNSString:(NSString *)value {
  [((ACSettingsModule *) nil_chk([((id<ACModuleContext>) nil_chk([self context])) getSettingsModule])) onUpdatedSettingWithNSString:key withNSString:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "SettingsProcessor", NULL, 0x1, NULL, NULL },
    { "onSettingsChangedWithNSString:withNSString:", "onSettingsChanged", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACSettingsProcessor = { 2, "SettingsProcessor", "im.actor.core.modules.updates", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACSettingsProcessor;
}

@end


#line 12
void ACSettingsProcessor_initWithACModuleContext_(ACSettingsProcessor *self, id<ACModuleContext> modules) {
  (void) ACAbsModule_initWithACModuleContext_(self, modules);
}


#line 12
ACSettingsProcessor *new_ACSettingsProcessor_initWithACModuleContext_(id<ACModuleContext> modules) {
  ACSettingsProcessor *self = [ACSettingsProcessor alloc];
  ACSettingsProcessor_initWithACModuleContext_(self, modules);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACSettingsProcessor)

#pragma clang diagnostic pop
