//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/internal/GetDiffCombiner.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiAppCounters.h"
#include "im/actor/core/api/ApiPeer.h"
#include "im/actor/core/api/updates/UpdateCountersChanged.h"
#include "im/actor/core/api/updates/UpdateMessage.h"
#include "im/actor/core/api/updates/UpdateMessageRead.h"
#include "im/actor/core/api/updates/UpdateMessageReadByMe.h"
#include "im/actor/core/api/updates/UpdateMessageReceived.h"
#include "im/actor/core/api/updates/UpdateUserAboutChanged.h"
#include "im/actor/core/api/updates/UpdateUserLocalNameChanged.h"
#include "im/actor/core/api/updates/UpdateUserNameChanged.h"
#include "im/actor/core/api/updates/UpdateUserNickChanged.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/internal/messages/entity/EntityConverter.h"
#include "im/actor/core/modules/updates/internal/CombinedDifference.h"
#include "im/actor/core/modules/updates/internal/GetDiffCombiner.h"
#include "im/actor/core/network/parser/Update.h"
#include <j2objc/java/util/List.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/internal/GetDiffCombiner.java"


#line 18
@implementation ACGetDiffCombiner

+ (ACCombinedDifference *)buildDiffWithJavaUtilList:(id<JavaUtilList>)updates {
  return ACGetDiffCombiner_buildDiffWithJavaUtilList_(updates);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACGetDiffCombiner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "buildDiffWithJavaUtilList:", "buildDiff", "Lim.actor.core.modules.updates.internal.CombinedDifference;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACGetDiffCombiner = { 2, "GetDiffCombiner", "im.actor.core.modules.updates.internal", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACGetDiffCombiner;
}

@end


#line 20
ACCombinedDifference *ACGetDiffCombiner_buildDiffWithJavaUtilList_(id<JavaUtilList> updates) {
  ACGetDiffCombiner_initialize();
  
#line 21
  ACCombinedDifference *res = new_ACCombinedDifference_init();
  for (ACUpdate * __strong u in nil_chk(updates)) {
    if ([u isKindOfClass:[ARUpdateMessage class]]) {
      [res putMessageWithARUpdateMessage:(ARUpdateMessage *) check_class_cast(u, [ARUpdateMessage class])];
    }
    else
#line 25
    if ([u isKindOfClass:[ARUpdateMessageRead class]]) {
      ARUpdateMessageRead *read = (ARUpdateMessageRead *) check_class_cast(u, [ARUpdateMessageRead class]);
      [res putReadWithACPeer:ACEntityConverter_convertWithARApiPeer_([((ARUpdateMessageRead *) nil_chk(read)) getPeer]) withLong:[read getStartDate]];
    }
    else
#line 28
    if ([u isKindOfClass:[ARUpdateMessageReceived class]]) {
      ARUpdateMessageReceived *received = (ARUpdateMessageReceived *) check_class_cast(u, [ARUpdateMessageReceived class]);
      [res putReceivedWithACPeer:ACEntityConverter_convertWithARApiPeer_([((ARUpdateMessageReceived *) nil_chk(received)) getPeer]) withLong:[received getStartDate]];
    }
    else
#line 31
    if ([u isKindOfClass:[ARUpdateMessageReadByMe class]]) {
      ARUpdateMessageReadByMe *readByMe = (ARUpdateMessageReadByMe *) check_class_cast(u, [ARUpdateMessageReadByMe class]);
      [res putReadByMeWithACPeer:ACEntityConverter_convertWithARApiPeer_([((ARUpdateMessageReadByMe *) nil_chk(readByMe)) getPeer]) withLong:[readByMe getStartDate]];
    }
    else
#line 34
    if ([u isKindOfClass:[ARUpdateCountersChanged class]]) {
      [res setCountersWithARApiAppCounters:[((ARUpdateCountersChanged *) nil_chk(((ARUpdateCountersChanged *) check_class_cast(u, [ARUpdateCountersChanged class])))) getCounters]];
    }
    else
#line 36
    if ([u isKindOfClass:[ARUpdateUserNameChanged class]]) {
    }
    else if ([u isKindOfClass:[ARUpdateUserLocalNameChanged class]]) {
    }
    else if ([u isKindOfClass:[ARUpdateUserNickChanged class]]) {
    }
    else if ([u isKindOfClass:[ARUpdateUserAboutChanged class]]) {
    }
    else {
      [((id<JavaUtilList>) nil_chk([res getOtherUpdates])) addWithId:u];
    }
  }
  return res;
}

void ACGetDiffCombiner_init(ACGetDiffCombiner *self) {
  (void) NSObject_init(self);
}

ACGetDiffCombiner *new_ACGetDiffCombiner_init() {
  ACGetDiffCombiner *self = [ACGetDiffCombiner alloc];
  ACGetDiffCombiner_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACGetDiffCombiner)

#pragma clang diagnostic pop
