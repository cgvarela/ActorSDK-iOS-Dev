//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/internal/CombinedDifference.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiAppCounters.h"
#include "im/actor/core/api/ApiPeer.h"
#include "im/actor/core/api/updates/UpdateMessage.h"
#include "im/actor/core/entity/Peer.h"
#include "im/actor/core/modules/internal/messages/entity/EntityConverter.h"
#include "im/actor/core/modules/updates/internal/CombinedDifference.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACCombinedDifference () {
 @public
  JavaUtilHashMap *readByMe_;
  JavaUtilHashMap *read_;
  JavaUtilHashMap *received_;
  JavaUtilHashMap *messages_;
  id<JavaUtilList> otherUpdates_;
  ARApiAppCounters *counters_;
}

- (void)putWithJavaUtilHashMap:(JavaUtilHashMap *)map
                    withACPeer:(ACPeer *)peer
                      withLong:(jlong)date;

@end

J2OBJC_FIELD_SETTER(ACCombinedDifference, readByMe_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACCombinedDifference, read_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACCombinedDifference, received_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACCombinedDifference, messages_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACCombinedDifference, otherUpdates_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ACCombinedDifference, counters_, ARApiAppCounters *)

__attribute__((unused)) static void ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(ACCombinedDifference *self, JavaUtilHashMap *map, ACPeer *peer, jlong date);

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/internal/CombinedDifference.java"


#line 13
@implementation ACCombinedDifference


#line 22
- (ARApiAppCounters *)getCounters {
  return counters_;
}

- (void)setCountersWithARApiAppCounters:(ARApiAppCounters *)counters {
  self->counters_ = counters;
}

- (JavaUtilHashMap *)getReadByMe {
  return readByMe_;
}

- (JavaUtilHashMap *)getRead {
  return read_;
}

- (JavaUtilHashMap *)getReceived {
  return received_;
}

- (JavaUtilHashMap *)getMessages {
  return messages_;
}

- (id<JavaUtilList>)getOtherUpdates {
  return otherUpdates_;
}

- (void)putMessageWithARUpdateMessage:(ARUpdateMessage *)message {
  ACPeer *peer = ACEntityConverter_convertWithARApiPeer_([((ARUpdateMessage *) nil_chk(message)) getPeer]);
  if ([((JavaUtilHashMap *) nil_chk(messages_)) containsKeyWithId:peer]) {
    [((id<JavaUtilList>) nil_chk([messages_ getWithId:peer])) addWithId:message];
  }
  else {
    
#line 55
    JavaUtilArrayList *msgs = new_JavaUtilArrayList_init();
    [msgs addWithId:message];
    (void) [messages_ putWithId:peer withId:msgs];
  }
}


#line 61
- (void)putReadByMeWithACPeer:(ACPeer *)peer
                     withLong:(jlong)date {
  ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(self, readByMe_, peer, date);
}


#line 65
- (void)putReadWithACPeer:(ACPeer *)peer
                 withLong:(jlong)date {
  if ([((JavaUtilHashMap *) nil_chk(received_)) containsKeyWithId:peer]) {
    if ([((JavaLangLong *) nil_chk([received_ getWithId:peer])) longLongValue] <= date) {
      (void) [received_ removeWithId:peer];
    }
  }
  
#line 72
  ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(self, read_, peer, date);
}


#line 75
- (void)putReceivedWithACPeer:(ACPeer *)peer
                     withLong:(jlong)date {
  if ([((JavaUtilHashMap *) nil_chk(read_)) containsKeyWithId:peer]) {
    if ([((JavaLangLong *) nil_chk([read_ getWithId:peer])) longLongValue] >= date) {
      return;
    }
  }
  
#line 82
  ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(self, received_, peer, date);
}


#line 85
- (void)putWithJavaUtilHashMap:(JavaUtilHashMap *)map
                    withACPeer:(ACPeer *)peer
                      withLong:(jlong)date {
  ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(self, map, peer, date);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACCombinedDifference_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getCounters", NULL, "Lim.actor.core.api.ApiAppCounters;", 0x1, NULL, NULL },
    { "setCountersWithARApiAppCounters:", "setCounters", "V", 0x1, NULL, NULL },
    { "getReadByMe", NULL, "Ljava.util.HashMap;", 0x1, NULL, NULL },
    { "getRead", NULL, "Ljava.util.HashMap;", 0x1, NULL, NULL },
    { "getReceived", NULL, "Ljava.util.HashMap;", 0x1, NULL, NULL },
    { "getMessages", NULL, "Ljava.util.HashMap;", 0x1, NULL, NULL },
    { "getOtherUpdates", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "putMessageWithARUpdateMessage:", "putMessage", "V", 0x1, NULL, NULL },
    { "putReadByMeWithACPeer:withLong:", "putReadByMe", "V", 0x1, NULL, NULL },
    { "putReadWithACPeer:withLong:", "putRead", "V", 0x1, NULL, NULL },
    { "putReceivedWithACPeer:withLong:", "putReceived", "V", 0x1, NULL, NULL },
    { "putWithJavaUtilHashMap:withACPeer:withLong:", "put", "V", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "readByMe_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "read_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "received_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "messages_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lim/actor/core/entity/Peer;Ljava/util/List<Lim/actor/core/api/updates/UpdateMessage;>;>;", .constantValue.asLong = 0 },
    { "otherUpdates_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/network/parser/Update;>;", .constantValue.asLong = 0 },
    { "counters_", NULL, 0x2, "Lim.actor.core.api.ApiAppCounters;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACCombinedDifference = { 2, "CombinedDifference", "im.actor.core.modules.updates.internal", NULL, 0x1, 13, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACCombinedDifference;
}

@end


#line 85
void ACCombinedDifference_putWithJavaUtilHashMap_withACPeer_withLong_(ACCombinedDifference *self, JavaUtilHashMap *map, ACPeer *peer, jlong date) {
  if ([((JavaUtilHashMap *) nil_chk(map)) containsKeyWithId:peer]) {
    if ([((JavaLangLong *) nil_chk([map getWithId:peer])) longLongValue] <= date) {
      (void) [map putWithId:peer withId:JavaLangLong_valueOfWithLong_(date)];
    }
  }
  else {
    
#line 91
    (void) [map putWithId:peer withId:JavaLangLong_valueOfWithLong_(date)];
  }
}

void ACCombinedDifference_init(ACCombinedDifference *self) {
  (void) NSObject_init(self);
  self->readByMe_ = new_JavaUtilHashMap_init();
  self->read_ = new_JavaUtilHashMap_init();
  self->received_ = new_JavaUtilHashMap_init();
  self->messages_ = new_JavaUtilHashMap_init();
  self->otherUpdates_ = new_JavaUtilArrayList_init();
}

ACCombinedDifference *new_ACCombinedDifference_init() {
  ACCombinedDifference *self = [ACCombinedDifference alloc];
  ACCombinedDifference_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACCombinedDifference)

#pragma clang diagnostic pop
