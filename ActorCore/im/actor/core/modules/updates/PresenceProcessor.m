//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/PresenceProcessor.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/modules/AbsModule.h"
#include "im/actor/core/modules/ModuleContext.h"
#include "im/actor/core/modules/internal/presence/PresenceActor.h"
#include "im/actor/core/modules/updates/PresenceProcessor.h"
#include "im/actor/runtime/actors/ActorRef.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACPresenceProcessor () {
 @public
  ARActorRef *presenceActor_;
}

@end

J2OBJC_FIELD_SETTER(ACPresenceProcessor, presenceActor_, ARActorRef *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/modules/updates/PresenceProcessor.java"


#line 14
@implementation ACPresenceProcessor


#line 18
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)modules {
  ACPresenceProcessor_initWithACModuleContext_(self, modules);
  return self;
}


#line 24
- (void)onUserOnlineWithInt:(jint)uid
                   withLong:(jlong)updateDate {
  [((ARActorRef *) nil_chk(presenceActor_)) sendWithId:new_ACPresenceActor_UserOnline_initWithInt_withLong_(uid, updateDate)];
}

- (void)onUserOfflineWithInt:(jint)uid
                    withLong:(jlong)updateDate {
  [((ARActorRef *) nil_chk(presenceActor_)) sendWithId:new_ACPresenceActor_UserOffline_initWithInt_withLong_(uid, updateDate)];
}

- (void)onUserLastSeenWithInt:(jint)uid
                      withInt:(jint)date
                     withLong:(jlong)updateDate {
  [((ARActorRef *) nil_chk(presenceActor_)) sendWithId:new_ACPresenceActor_UserLastSeen_initWithInt_withInt_withLong_(uid, date, updateDate)];
}


#line 39
- (void)onGroupOnlineWithInt:(jint)gid
                     withInt:(jint)count
                    withLong:(jlong)updateDate {
  [((ARActorRef *) nil_chk(presenceActor_)) sendWithId:new_ACPresenceActor_GroupOnline_initWithInt_withInt_withLong_(gid, count, updateDate)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACModuleContext:", "PresenceProcessor", NULL, 0x1, NULL, NULL },
    { "onUserOnlineWithInt:withLong:", "onUserOnline", "V", 0x1, NULL, NULL },
    { "onUserOfflineWithInt:withLong:", "onUserOffline", "V", 0x1, NULL, NULL },
    { "onUserLastSeenWithInt:withInt:withLong:", "onUserLastSeen", "V", 0x1, NULL, NULL },
    { "onGroupOnlineWithInt:withInt:withLong:", "onGroupOnline", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "presenceActor_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPresenceProcessor = { 2, "PresenceProcessor", "im.actor.core.modules.updates", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPresenceProcessor;
}

@end


#line 18
void ACPresenceProcessor_initWithACModuleContext_(ACPresenceProcessor *self, id<ACModuleContext> modules) {
  (void) ACAbsModule_initWithACModuleContext_(self, modules);
  self->presenceActor_ = ACPresenceActor_createWithACModuleContext_(modules);
}


#line 18
ACPresenceProcessor *new_ACPresenceProcessor_initWithACModuleContext_(id<ACModuleContext> modules) {
  ACPresenceProcessor *self = [ACPresenceProcessor alloc];
  ACPresenceProcessor_initWithACModuleContext_(self, modules);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPresenceProcessor)

#pragma clang diagnostic pop
