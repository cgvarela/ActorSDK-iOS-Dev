//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/Message.java
//

#ifndef _ImActorCoreEntityMessage_H_
#define _ImActorCoreEntityMessage_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/storage/ListEngineItem.h"

@class ACAbsContent;
@class ACMessageStateEnum;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@protocol ARBserCreator;

@interface ACMessage : ARBserObject < ARListEngineItem >
@property (readonly, nonatomic, getter=getRid) jlong rid;
@property (readonly, nonatomic, getter=getSortDate) jlong sortDate;
@property (readonly, nonatomic, getter=getDate) jlong date;
@property (readonly, nonatomic, getter=getSenderId) jint senderId;
@property (readonly, nonatomic, getter=getMessageState) ACMessageStateEnum *messageState;
@property (readonly, nonatomic, getter=getContent) ACAbsContent *content;

+ (id<ARBserCreator>)CREATOR;

+ (NSString *)ENTITY_NAME;

#pragma mark Public

- (instancetype)initWithLong:(jlong)rid
                    withLong:(jlong)sortDate
                    withLong:(jlong)date
                     withInt:(jint)senderId
      withACMessageStateEnum:(ACMessageStateEnum *)messageState
            withACAbsContent:(ACAbsContent *)content;

- (ACMessage *)changeAllDateWithLong:(jlong)date;

- (ACMessage *)changeContentWithACAbsContent:(ACAbsContent *)content;

- (ACMessage *)changeDateWithLong:(jlong)date;

- (ACMessage *)changeStateWithACMessageStateEnum:(ACMessageStateEnum *)messageState;

+ (ACMessage *)fromBytesWithByteArray:(IOSByteArray *)data;

- (ACAbsContent *)getContent;

- (jlong)getDate;

- (jlong)getEngineId;

- (NSString *)getEngineSearch;

- (jlong)getEngineSort;

- (ACMessageStateEnum *)getMessageState;

- (jlong)getRid;

- (jint)getSenderId;

- (jlong)getSortDate;

- (jboolean)isOnServer;

- (jboolean)isPendingOrSent;

- (jboolean)isReceivedOrSent;

- (jboolean)isSent;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

@end

J2OBJC_STATIC_INIT(ACMessage)

FOUNDATION_EXPORT id<ARBserCreator> ACMessage_CREATOR_;
J2OBJC_STATIC_FIELD_GETTER(ACMessage, CREATOR_, id<ARBserCreator>)

FOUNDATION_EXPORT NSString *ACMessage_ENTITY_NAME_;
J2OBJC_STATIC_FIELD_GETTER(ACMessage, ENTITY_NAME_, NSString *)

FOUNDATION_EXPORT ACMessage *ACMessage_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ACMessage_initWithLong_withLong_withLong_withInt_withACMessageStateEnum_withACAbsContent_(ACMessage *self, jlong rid, jlong sortDate, jlong date, jint senderId, ACMessageStateEnum *messageState, ACAbsContent *content);

FOUNDATION_EXPORT ACMessage *new_ACMessage_initWithLong_withLong_withLong_withInt_withACMessageStateEnum_withACAbsContent_(jlong rid, jlong sortDate, jlong date, jint senderId, ACMessageStateEnum *messageState, ACAbsContent *content) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACMessage)

@compatibility_alias ImActorCoreEntityMessage ACMessage;


#pragma clang diagnostic pop
#endif // _ImActorCoreEntityMessage_H_
