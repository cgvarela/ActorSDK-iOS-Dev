//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/Avatar.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiAvatar.h"
#include "im/actor/core/api/ApiAvatarImage.h"
#include "im/actor/core/entity/Avatar.h"
#include "im/actor/core/entity/AvatarImage.h"
#include "im/actor/core/entity/WrapperEntity.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#define ACAvatar_RECORD_ID 10

@interface ACAvatar () {
 @public
  ACAvatarImage *smallImage_;
  ACAvatarImage *largeImage_;
  ACAvatarImage *fullImage_;
}

@end

J2OBJC_FIELD_SETTER(ACAvatar, smallImage_, ACAvatarImage *)
J2OBJC_FIELD_SETTER(ACAvatar, largeImage_, ACAvatarImage *)
J2OBJC_FIELD_SETTER(ACAvatar, fullImage_, ACAvatarImage *)

J2OBJC_STATIC_FIELD_GETTER(ACAvatar, RECORD_ID, jint)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/Avatar.java"


#line 18
@implementation ACAvatar

@synthesize smallImage = smallImage_;
@synthesize largeImage = largeImage_;
@synthesize fullImage = fullImage_;


#line 32
- (instancetype)initWithARApiAvatar:(ARApiAvatar *)wrapped {
  ACAvatar_initWithARApiAvatar_(self, wrapped);
  return self;
}


#line 36
- (instancetype)initWithByteArray:(IOSByteArray *)data {
  ACAvatar_initWithByteArray_(self, data);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 40
- (instancetype)init {
  ACAvatar_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 45
- (ACAvatarImage *)getSmallImage {
  return smallImage_;
}


#line 50
- (ACAvatarImage *)getLargeImage {
  return largeImage_;
}


#line 55
- (ACAvatarImage *)getFullImage {
  return fullImage_;
}


#line 60
- (void)parseWithARBserValues:(ARBserValues *)values {
  
#line 62
  if ([((ARBserValues *) nil_chk(values)) getBoolWithInt:5 withBoolean:false]) {
    
#line 64
    [super parseWithARBserValues:values];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(@"Unsupported obsolete format");
  }
}


#line 72
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  
#line 74
  [((ARBserWriter *) nil_chk(writer)) writeBoolWithInt:5 withBoolean:true];
  
#line 76
  [super serializeWithARBserWriter:writer];
}


#line 80
- (void)applyWrappedWithARBserObject:(ARApiAvatar *)wrapped {
  if ([((ARApiAvatar *) nil_chk(wrapped)) getSmallImage] != nil) {
    smallImage_ = new_ACAvatarImage_initWithARApiAvatarImage_([wrapped getSmallImage]);
  }
  else {
    
#line 84
    smallImage_ = nil;
  }
  if ([wrapped getLargeImage] != nil) {
    largeImage_ = new_ACAvatarImage_initWithARApiAvatarImage_([wrapped getLargeImage]);
  }
  else {
    
#line 89
    largeImage_ = nil;
  }
  if ([wrapped getFullImage] != nil) {
    fullImage_ = new_ACAvatarImage_initWithARApiAvatarImage_([wrapped getFullImage]);
  }
  else {
    
#line 94
    fullImage_ = nil;
  }
}


#line 99
- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self getClass] != [o getClass]) return false;
  
#line 103
  ACAvatar *avatar = (ACAvatar *) check_class_cast(o, [ACAvatar class]);
  
#line 105
  if (fullImage_ != nil ? ![fullImage_ isEqual:((ACAvatar *) nil_chk(avatar))->fullImage_] : ((ACAvatar *) nil_chk(avatar))->fullImage_ != nil)
#line 106
  return false;
  if (largeImage_ != nil ? ![largeImage_ isEqual:((ACAvatar *) nil_chk(avatar))->largeImage_] : ((ACAvatar *) nil_chk(avatar))->largeImage_ != nil)
#line 108
  return false;
  if (smallImage_ != nil ? ![smallImage_ isEqual:((ACAvatar *) nil_chk(avatar))->smallImage_] : ((ACAvatar *) nil_chk(avatar))->smallImage_ != nil)
#line 110
  return false;
  
#line 112
  return true;
}


#line 116
- (NSUInteger)hash {
  jint result = smallImage_ != nil ? ((jint) [smallImage_ hash]) : 0;
  result = 31 * result + (largeImage_ != nil ? ((jint) [largeImage_ hash]) : 0);
  result = 31 * result + (fullImage_ != nil ? ((jint) [fullImage_ hash]) : 0);
  return result;
}


#line 125
- (ARApiAvatar *)createInstance {
  return new_ARApiAvatar_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARApiAvatar:", "Avatar", NULL, 0x1, NULL, NULL },
    { "initWithByteArray:", "Avatar", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "init", "Avatar", NULL, 0x1, NULL, NULL },
    { "getSmallImage", NULL, "Lim.actor.core.entity.AvatarImage;", 0x1, NULL, NULL },
    { "getLargeImage", NULL, "Lim.actor.core.entity.AvatarImage;", 0x1, NULL, NULL },
    { "getFullImage", NULL, "Lim.actor.core.entity.AvatarImage;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "applyWrappedWithARBserObject:", "applyWrapped", "V", 0x4, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "createInstance", NULL, "Lim.actor.core.api.ApiAvatar;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "RECORD_ID", "RECORD_ID", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACAvatar_RECORD_ID },
    { "smallImage_", NULL, 0x2, "Lim.actor.core.entity.AvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
    { "largeImage_", NULL, 0x2, "Lim.actor.core.entity.AvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
    { "fullImage_", NULL, 0x2, "Lim.actor.core.entity.AvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.ApiAvatar;"};
  static const J2ObjcClassInfo _ACAvatar = { 2, "Avatar", "im.actor.core.entity", NULL, 0x1, 12, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/entity/WrapperEntity<Lim/actor/core/api/ApiAvatar;>;" };
  return &_ACAvatar;
}

@end


#line 32
void ACAvatar_initWithARApiAvatar_(ACAvatar *self, ARApiAvatar *wrapped) {
  (void) ACWrapperEntity_initWithInt_withARBserObject_(self, ACAvatar_RECORD_ID, wrapped);
}


#line 32
ACAvatar *new_ACAvatar_initWithARApiAvatar_(ARApiAvatar *wrapped) {
  ACAvatar *self = [ACAvatar alloc];
  ACAvatar_initWithARApiAvatar_(self, wrapped);
  return self;
}


#line 36
void ACAvatar_initWithByteArray_(ACAvatar *self, IOSByteArray *data) {
  (void) ACWrapperEntity_initWithInt_withByteArray_(self, ACAvatar_RECORD_ID, data);
}


#line 36
ACAvatar *new_ACAvatar_initWithByteArray_(IOSByteArray *data) {
  ACAvatar *self = [ACAvatar alloc];
  ACAvatar_initWithByteArray_(self, data);
  return self;
}


#line 40
void ACAvatar_init(ACAvatar *self) {
  (void) ACWrapperEntity_initWithInt_withARBserObject_(self, ACAvatar_RECORD_ID, new_ARApiAvatar_init());
}


#line 40
ACAvatar *new_ACAvatar_init() {
  ACAvatar *self = [ACAvatar alloc];
  ACAvatar_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACAvatar)

#pragma clang diagnostic pop
