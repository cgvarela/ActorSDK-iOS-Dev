//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/Sex.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/core/entity/Sex.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACSexEnum () {
 @public
  jint value_;
}

@end

__attribute__((unused)) static void ACSexEnum_initWithInt_withNSString_withInt_(ACSexEnum *self, jint value, NSString *__name, jint __ordinal);

__attribute__((unused)) static ACSexEnum *new_ACSexEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/Sex.java"

J2OBJC_INITIALIZED_DEFN(ACSexEnum)

ACSexEnum *ACSexEnum_values_[3];


#line 9
@implementation ACSexEnum

+ (ACSexEnum *)UNKNOWN {
  return ACSexEnum_UNKNOWN;
}

+ (ACSexEnum *)MALE {
  return ACSexEnum_MALE;
}

+ (ACSexEnum *)FEMALE {
  return ACSexEnum_FEMALE;
}


#line 14
- (instancetype)initWithInt:(jint)value
               withNSString:(NSString *)__name
                    withInt:(jint)__ordinal {
  ACSexEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}


#line 18
- (jint)getValue {
  return value_;
}


#line 23
+ (ACSexEnum *)fromValueWithInt:(jint)value {
  return ACSexEnum_fromValueWithInt_(value);
}

IOSObjectArray *ACSexEnum_values() {
  ACSexEnum_initialize();
  return [IOSObjectArray arrayWithObjects:ACSexEnum_values_ count:3 type:ACSexEnum_class_()];
}

+ (IOSObjectArray *)values {
  return ACSexEnum_values();
}

+ (ACSexEnum *)valueOfWithNSString:(NSString *)name {
  return ACSexEnum_valueOfWithNSString_(name);
}

ACSexEnum *ACSexEnum_valueOfWithNSString_(NSString *name) {
  ACSexEnum_initialize();
  for (int i = 0; i < 3; i++) {
    ACSexEnum *e = ACSexEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ACSexEnum class]) {
    ACSexEnum_UNKNOWN = new_ACSexEnum_initWithInt_withNSString_withInt_(
#line 10
    1, @"UNKNOWN", 0);
    ACSexEnum_MALE = new_ACSexEnum_initWithInt_withNSString_withInt_(
#line 10
    2, @"MALE", 1);
    ACSexEnum_FEMALE = new_ACSexEnum_initWithInt_withNSString_withInt_(
#line 10
    3, @"FEMALE", 2);
    J2OBJC_SET_INITIALIZED(ACSexEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getValue", NULL, "I", 0x1, NULL, NULL },
    { "fromValueWithInt:", "fromValue", "Lim.actor.core.entity.Sex;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "UNKNOWN", "UNKNOWN", 0x4019, "Lim.actor.core.entity.Sex;", &ACSexEnum_UNKNOWN, NULL, .constantValue.asLong = 0 },
    { "MALE", "MALE", 0x4019, "Lim.actor.core.entity.Sex;", &ACSexEnum_MALE, NULL, .constantValue.asLong = 0 },
    { "FEMALE", "FEMALE", 0x4019, "Lim.actor.core.entity.Sex;", &ACSexEnum_FEMALE, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.entity.Sex;"};
  static const J2ObjcClassInfo _ACSexEnum = { 2, "Sex", "im.actor.core.entity", NULL, 0x4011, 2, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lim/actor/core/entity/Sex;>;" };
  return &_ACSexEnum;
}

@end


#line 14
void ACSexEnum_initWithInt_withNSString_withInt_(ACSexEnum *self, jint value, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 15
  self->value_ = value;
}


#line 14
ACSexEnum *new_ACSexEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) {
  ACSexEnum *self = [ACSexEnum alloc];
  ACSexEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}


#line 23
ACSexEnum *ACSexEnum_fromValueWithInt_(jint value) {
  ACSexEnum_initialize();
  
#line 24
  switch (value) {
    default:
    case 1:
    return ACSexEnum_UNKNOWN;
    case 2:
    return ACSexEnum_MALE;
    case 3:
    return ACSexEnum_FEMALE;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACSexEnum)

#pragma clang diagnostic pop
