//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/content/internal/AbsLocalContent.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/entity/content/internal/AbsLocalContent.h"
#include "im/actor/core/entity/content/internal/LocalDocument.h"
#include "im/actor/core/entity/content/internal/LocalPhoto.h"
#include "im/actor/core/entity/content/internal/LocalVideo.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserParser.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include "im/actor/runtime/collections/SparseArray.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#define ACAbsLocalContent_CONTENT_DOC 0
#define ACAbsLocalContent_CONTENT_PHOTO 1
#define ACAbsLocalContent_CONTENT_VIDEO 2

J2OBJC_STATIC_FIELD_GETTER(ACAbsLocalContent, CONTENT_DOC, jint)

J2OBJC_STATIC_FIELD_GETTER(ACAbsLocalContent, CONTENT_PHOTO, jint)

J2OBJC_STATIC_FIELD_GETTER(ACAbsLocalContent, CONTENT_VIDEO, jint)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/content/internal/AbsLocalContent.java"


#line 16
@implementation ACAbsLocalContent


#line 21
+ (ACAbsLocalContent *)loadContainerWithByteArray:(IOSByteArray *)data {
  return ACAbsLocalContent_loadContainerWithByteArray_(data);
}


#line 36
- (IOSByteArray *)buildContainer {
  ARDataOutput *res = new_ARDataOutput_init();
  ARBserWriter *writer = new_ARBserWriter_initWithARDataOutput_(res);
  if ([self isKindOfClass:[ACLocalPhoto class]]) {
    [writer writeIntWithInt:1 withInt:ACAbsLocalContent_CONTENT_PHOTO];
  }
  else
#line 41
  if ([self isKindOfClass:[ACLocalVideo class]]) {
    [writer writeIntWithInt:1 withInt:ACAbsLocalContent_CONTENT_VIDEO];
  }
  else
#line 43
  if ([self isKindOfClass:[ACLocalDocument class]]) {
    [writer writeIntWithInt:1 withInt:ACAbsLocalContent_CONTENT_DOC];
  }
  else {
    
#line 46
    @throw new_JavaIoIOException_initWithNSString_(@"Unknown type");
  }
  [writer writeBytesWithInt:2 withByteArray:[self toByteArray]];
  return [res toByteArray];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACAbsLocalContent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "loadContainerWithByteArray:", "loadContainer", "Lim.actor.core.entity.content.internal.AbsLocalContent;", 0x9, "Ljava.io.IOException;", NULL },
    { "buildContainer", NULL, "[B", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CONTENT_DOC", "CONTENT_DOC", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACAbsLocalContent_CONTENT_DOC },
    { "CONTENT_PHOTO", "CONTENT_PHOTO", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACAbsLocalContent_CONTENT_PHOTO },
    { "CONTENT_VIDEO", "CONTENT_VIDEO", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACAbsLocalContent_CONTENT_VIDEO },
  };
  static const J2ObjcClassInfo _ACAbsLocalContent = { 2, "AbsLocalContent", "im.actor.core.entity.content.internal", NULL, 0x401, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACAbsLocalContent;
}

@end


#line 21
ACAbsLocalContent *ACAbsLocalContent_loadContainerWithByteArray_(IOSByteArray *data) {
  ACAbsLocalContent_initialize();
  
#line 22
  ARBserValues *values = new_ARBserValues_initWithARSparseArray_(ARBserParser_deserializeWithARDataInput_(new_ARDataInput_initWithByteArray_(data)));
  jint type = [values getIntWithInt:1];
  IOSByteArray *content = [values getBytesWithInt:2];
  if (type == ACAbsLocalContent_CONTENT_DOC) {
    return new_ACLocalDocument_initWithByteArray_(content);
  }
  else
#line 27
  if (type == ACAbsLocalContent_CONTENT_PHOTO) {
    return new_ACLocalPhoto_initWithByteArray_(content);
  }
  else
#line 29
  if (type == ACAbsLocalContent_CONTENT_VIDEO) {
    return new_ACLocalVideo_initWithByteArray_(content);
  }
  else {
    
#line 32
    @throw new_JavaIoIOException_initWithNSString_(@"Unknown type");
  }
}

void ACAbsLocalContent_init(ACAbsLocalContent *self) {
  (void) ARBserObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACAbsLocalContent)

#pragma clang diagnostic pop
