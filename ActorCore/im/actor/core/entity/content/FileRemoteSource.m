//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/content/FileRemoteSource.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/entity/FileReference.h"
#include "im/actor/core/entity/content/FileRemoteSource.h"
#include "im/actor/core/entity/content/FileSource.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACFileRemoteSource () {
 @public
  ACFileReference *fileReference_;
}

@end

J2OBJC_FIELD_SETTER(ACFileRemoteSource, fileReference_, ACFileReference *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/content/FileRemoteSource.java"


#line 9
@implementation ACFileRemoteSource


#line 13
- (instancetype)initWithACFileReference:(ACFileReference *)fileReference {
  ACFileRemoteSource_initWithACFileReference_(self, fileReference);
  return self;
}


#line 17
- (ACFileReference *)getFileReference {
  return fileReference_;
}


#line 22
- (jint)getSize {
  return [((ACFileReference *) nil_chk(fileReference_)) getFileSize];
}


#line 27
- (NSString *)getFileName {
  return [((ACFileReference *) nil_chk(fileReference_)) getFileName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACFileReference:", "FileRemoteSource", NULL, 0x1, NULL, NULL },
    { "getFileReference", NULL, "Lim.actor.core.entity.FileReference;", 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "getFileName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fileReference_", NULL, 0x2, "Lim.actor.core.entity.FileReference;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACFileRemoteSource = { 2, "FileRemoteSource", "im.actor.core.entity.content", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACFileRemoteSource;
}

@end


#line 13
void ACFileRemoteSource_initWithACFileReference_(ACFileRemoteSource *self, ACFileReference *fileReference) {
  (void) ACFileSource_init(self);
  
#line 14
  self->fileReference_ = fileReference;
}


#line 13
ACFileRemoteSource *new_ACFileRemoteSource_initWithACFileReference_(ACFileReference *fileReference) {
  ACFileRemoteSource *self = [ACFileRemoteSource alloc];
  ACFileRemoteSource_initWithACFileReference_(self, fileReference);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileRemoteSource)

#pragma clang diagnostic pop
