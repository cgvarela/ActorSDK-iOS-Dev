//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/MessageState.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/core/entity/MessageState.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

__attribute__((unused)) static void ACMessageStateEnum_initWithInt_withNSString_withInt_(ACMessageStateEnum *self, jint value, NSString *__name, jint __ordinal);

__attribute__((unused)) static ACMessageStateEnum *new_ACMessageStateEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/entity/MessageState.java"

J2OBJC_INITIALIZED_DEFN(ACMessageStateEnum)

ACMessageStateEnum *ACMessageStateEnum_values_[6];


#line 7
@implementation ACMessageStateEnum

+ (ACMessageStateEnum *)PENDING {
  return ACMessageStateEnum_PENDING;
}

+ (ACMessageStateEnum *)SENT {
  return ACMessageStateEnum_SENT;
}

+ (ACMessageStateEnum *)RECEIVED {
  return ACMessageStateEnum_RECEIVED;
}

+ (ACMessageStateEnum *)READ {
  return ACMessageStateEnum_READ;
}

+ (ACMessageStateEnum *)ERROR {
  return ACMessageStateEnum_ERROR;
}

+ (ACMessageStateEnum *)UNKNOWN {
  return ACMessageStateEnum_UNKNOWN;
}


#line 17
- (instancetype)initWithInt:(jint)value
               withNSString:(NSString *)__name
                    withInt:(jint)__ordinal {
  ACMessageStateEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}


#line 21
- (jint)getValue {
  return value_;
}

+ (ACMessageStateEnum *)fromValueWithInt:(jint)value {
  return ACMessageStateEnum_fromValueWithInt_(value);
}

IOSObjectArray *ACMessageStateEnum_values() {
  ACMessageStateEnum_initialize();
  return [IOSObjectArray arrayWithObjects:ACMessageStateEnum_values_ count:6 type:ACMessageStateEnum_class_()];
}

+ (IOSObjectArray *)values {
  return ACMessageStateEnum_values();
}

+ (ACMessageStateEnum *)valueOfWithNSString:(NSString *)name {
  return ACMessageStateEnum_valueOfWithNSString_(name);
}

ACMessageStateEnum *ACMessageStateEnum_valueOfWithNSString_(NSString *name) {
  ACMessageStateEnum_initialize();
  for (int i = 0; i < 6; i++) {
    ACMessageStateEnum *e = ACMessageStateEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ACMessageStateEnum class]) {
    ACMessageStateEnum_PENDING = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 8
    1, @"PENDING", 0);
    ACMessageStateEnum_SENT = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 9
    2, @"SENT", 1);
    ACMessageStateEnum_RECEIVED = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 10
    3, @"RECEIVED", 2);
    ACMessageStateEnum_READ = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 11
    4, @"READ", 3);
    ACMessageStateEnum_ERROR = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 12
    5, @"ERROR", 4);
    ACMessageStateEnum_UNKNOWN = new_ACMessageStateEnum_initWithInt_withNSString_withInt_(
#line 13
    6, @"UNKNOWN", 5);
    J2OBJC_SET_INITIALIZED(ACMessageStateEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getValue", NULL, "I", 0x1, NULL, NULL },
    { "fromValueWithInt:", "fromValue", "Lim.actor.core.entity.MessageState;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PENDING", "PENDING", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_PENDING, NULL, .constantValue.asLong = 0 },
    { "SENT", "SENT", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_SENT, NULL, .constantValue.asLong = 0 },
    { "RECEIVED", "RECEIVED", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_RECEIVED, NULL, .constantValue.asLong = 0 },
    { "READ", "READ", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_READ, NULL, .constantValue.asLong = 0 },
    { "ERROR", "ERROR", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_ERROR, NULL, .constantValue.asLong = 0 },
    { "UNKNOWN", "UNKNOWN", 0x4019, "Lim.actor.core.entity.MessageState;", &ACMessageStateEnum_UNKNOWN, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.entity.MessageState;"};
  static const J2ObjcClassInfo _ACMessageStateEnum = { 2, "MessageState", "im.actor.core.entity", NULL, 0x4011, 2, methods, 7, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lim/actor/core/entity/MessageState;>;" };
  return &_ACMessageStateEnum;
}

@end


#line 17
void ACMessageStateEnum_initWithInt_withNSString_withInt_(ACMessageStateEnum *self, jint value, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 18
  self->value_ = value;
}


#line 17
ACMessageStateEnum *new_ACMessageStateEnum_initWithInt_withNSString_withInt_(jint value, NSString *__name, jint __ordinal) {
  ACMessageStateEnum *self = [ACMessageStateEnum alloc];
  ACMessageStateEnum_initWithInt_withNSString_withInt_(self, value, __name, __ordinal);
  return self;
}


#line 25
ACMessageStateEnum *ACMessageStateEnum_fromValueWithInt_(jint value) {
  ACMessageStateEnum_initialize();
  
#line 26
  switch (value) {
    case 1:
    return ACMessageStateEnum_PENDING;
    case 2:
    return ACMessageStateEnum_SENT;
    case 3:
    return ACMessageStateEnum_RECEIVED;
    case 4:
    return ACMessageStateEnum_READ;
    case 5:
    return ACMessageStateEnum_ERROR;
    default:
    case 6:
    return ACMessageStateEnum_UNKNOWN;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMessageStateEnum)

#pragma clang diagnostic pop
