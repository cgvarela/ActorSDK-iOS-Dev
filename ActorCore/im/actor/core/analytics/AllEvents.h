//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/analytics/AllEvents.java
//

#ifndef _ImActorCoreAnalyticsAllEvents_H_
#define _ImActorCoreAnalyticsAllEvents_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ACEvent;
@class ACPage;
@class ACPeer;

@interface ACAllEvents : NSObject

#pragma mark Public

- (instancetype)init;

+ (ACEvent *)APP_VISIBLEWithBoolean:(jboolean)isVisible;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAllEvents)

FOUNDATION_EXPORT ACEvent *ACAllEvents_APP_VISIBLEWithBoolean_(jboolean isVisible);

FOUNDATION_EXPORT void ACAllEvents_init(ACAllEvents *self);

FOUNDATION_EXPORT ACAllEvents *new_ACAllEvents_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents)

@compatibility_alias ImActorCoreAnalyticsAllEvents ACAllEvents;

/*!
 @brief Authentication pages and actions
 */
@interface ACAllEvents_Auth : NSObject

+ (ACPage *)AUTH_PHONE;

+ (ACPage *)AUTH_PICK_COUNTRY;

+ (ACPage *)AUTH_CODE;

+ (ACPage *)AUTH_SIGNUP;

#pragma mark Public

- (instancetype)init;

+ (ACEvent *)AUTH_CODE_TYPEDWithNSString:(NSString *)value;

+ (ACEvent *)AUTH_COUNTRY_PICKEDWithNSString:(NSString *)iso2;

+ (ACEvent *)AUTH_PHONE_TYPEDWithNSString:(NSString *)value;

+ (ACEvent *)AUTH_SIGNUP_NAME_TYPEDWithNSString:(NSString *)value;

@end

J2OBJC_STATIC_INIT(ACAllEvents_Auth)

FOUNDATION_EXPORT ACPage *ACAllEvents_Auth_AUTH_PHONE_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Auth, AUTH_PHONE_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Auth_AUTH_PICK_COUNTRY_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Auth, AUTH_PICK_COUNTRY_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Auth_AUTH_CODE_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Auth, AUTH_CODE_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Auth_AUTH_SIGNUP_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Auth, AUTH_SIGNUP_, ACPage *)

FOUNDATION_EXPORT ACEvent *ACAllEvents_Auth_AUTH_COUNTRY_PICKEDWithNSString_(NSString *iso2);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Auth_AUTH_PHONE_TYPEDWithNSString_(NSString *value);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Auth_AUTH_CODE_TYPEDWithNSString_(NSString *value);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Auth_AUTH_SIGNUP_NAME_TYPEDWithNSString_(NSString *value);

FOUNDATION_EXPORT void ACAllEvents_Auth_init(ACAllEvents_Auth *self);

FOUNDATION_EXPORT ACAllEvents_Auth *new_ACAllEvents_Auth_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Auth)

/*!
 @brief Main page tracking
 */
@interface ACAllEvents_Main : NSObject

+ (ACPage *)CONTACTS;

+ (ACPage *)RECENT;

+ (ACPage *)SETTINGS;

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ACAllEvents_Main)

FOUNDATION_EXPORT ACPage *ACAllEvents_Main_CONTACTS_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Main, CONTACTS_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Main_RECENT_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Main, RECENT_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Main_SETTINGS_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Main, SETTINGS_, ACPage *)

FOUNDATION_EXPORT void ACAllEvents_Main_init(ACAllEvents_Main *self);

FOUNDATION_EXPORT ACAllEvents_Main *new_ACAllEvents_Main_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Main)

/*!
 @brief Tracking settings page
 */
@interface ACAllEvents_Settings : NSObject

+ (ACPage *)PRIVACY;

+ (ACPage *)NOTIFICATIONS;

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ACAllEvents_Settings)

FOUNDATION_EXPORT ACPage *ACAllEvents_Settings_PRIVACY_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Settings, PRIVACY_, ACPage *)

FOUNDATION_EXPORT ACPage *ACAllEvents_Settings_NOTIFICATIONS_;
J2OBJC_STATIC_FIELD_GETTER(ACAllEvents_Settings, NOTIFICATIONS_, ACPage *)

FOUNDATION_EXPORT void ACAllEvents_Settings_init(ACAllEvents_Settings *self);

FOUNDATION_EXPORT ACAllEvents_Settings *new_ACAllEvents_Settings_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Settings)

/*!
 @brief Tracking chat pages
 */
@interface ACAllEvents_Chat : NSObject

#pragma mark Public

- (instancetype)init;

+ (ACEvent *)DOCUMENT_SENTWithACPeer:(ACPeer *)peer;

+ (ACEvent *)MESSAGE_SENTWithACPeer:(ACPeer *)peer;

+ (ACEvent *)PICTURE_SENTWithACPeer:(ACPeer *)peer;

+ (ACPage *)viewWithACPeer:(ACPeer *)peer;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAllEvents_Chat)

FOUNDATION_EXPORT ACPage *ACAllEvents_Chat_viewWithACPeer_(ACPeer *peer);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Chat_MESSAGE_SENTWithACPeer_(ACPeer *peer);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Chat_DOCUMENT_SENTWithACPeer_(ACPeer *peer);

FOUNDATION_EXPORT ACEvent *ACAllEvents_Chat_PICTURE_SENTWithACPeer_(ACPeer *peer);

FOUNDATION_EXPORT void ACAllEvents_Chat_init(ACAllEvents_Chat *self);

FOUNDATION_EXPORT ACAllEvents_Chat *new_ACAllEvents_Chat_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Chat)

/*!
 @brief Tracking user profile pages
 */
@interface ACAllEvents_Profile : NSObject

#pragma mark Public

- (instancetype)init;

+ (ACPage *)viewWithInt:(jint)uid;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAllEvents_Profile)

FOUNDATION_EXPORT ACPage *ACAllEvents_Profile_viewWithInt_(jint uid);

FOUNDATION_EXPORT void ACAllEvents_Profile_init(ACAllEvents_Profile *self);

FOUNDATION_EXPORT ACAllEvents_Profile *new_ACAllEvents_Profile_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Profile)

/*!
 @brief Tracking group pages
 */
@interface ACAllEvents_Group : NSObject

#pragma mark Public

- (instancetype)init;

+ (ACPage *)viewWithInt:(jint)gid;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAllEvents_Group)

FOUNDATION_EXPORT ACPage *ACAllEvents_Group_viewWithInt_(jint gid);

FOUNDATION_EXPORT void ACAllEvents_Group_init(ACAllEvents_Group *self);

FOUNDATION_EXPORT ACAllEvents_Group *new_ACAllEvents_Group_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACAllEvents_Group)


#pragma clang diagnostic pop
#endif // _ImActorCoreAnalyticsAllEvents_H_
