//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/analytics/Page.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/analytics/Page.h"
#include "im/actor/core/api/ApiRawValue.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACPage () {
 @public
  NSString *contentType_;
  NSString *contentTypeDisplay_;
  NSString *contentId_;
  ARApiRawValue *params_;
}

@end

J2OBJC_FIELD_SETTER(ACPage, contentType_, NSString *)
J2OBJC_FIELD_SETTER(ACPage, contentTypeDisplay_, NSString *)
J2OBJC_FIELD_SETTER(ACPage, contentId_, NSString *)
J2OBJC_FIELD_SETTER(ACPage, params_, ARApiRawValue *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/analytics/Page.java"


#line 5
@implementation ACPage


#line 13
- (instancetype)initWithNSString:(NSString *)contentType
                    withNSString:(NSString *)contentTypeDisplay
                    withNSString:(NSString *)contentId
               withARApiRawValue:(ARApiRawValue *)params {
  ACPage_initWithNSString_withNSString_withNSString_withARApiRawValue_(self, contentType, contentTypeDisplay, contentId, params);
  return self;
}


#line 20
- (instancetype)initWithNSString:(NSString *)contentType
                    withNSString:(NSString *)contentTypeDisplay
                    withNSString:(NSString *)contentId {
  ACPage_initWithNSString_withNSString_withNSString_(self, contentType, contentTypeDisplay, contentId);
  return self;
}


#line 26
- (NSString *)getContentType {
  return contentType_;
}

- (NSString *)getContentTypeDisplay {
  return contentTypeDisplay_;
}

- (NSString *)getContentId {
  return contentId_;
}

- (ARApiRawValue *)getParams {
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:withARApiRawValue:", "Page", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSString:withNSString:", "Page", NULL, 0x1, NULL, NULL },
    { "getContentType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getContentTypeDisplay", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getContentId", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getParams", NULL, "Lim.actor.core.api.ApiRawValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "contentType_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentTypeDisplay_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentId_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "params_", NULL, 0x2, "Lim.actor.core.api.ApiRawValue;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPage = { 2, "Page", "im.actor.core.analytics", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPage;
}

@end


#line 13
void ACPage_initWithNSString_withNSString_withNSString_withARApiRawValue_(ACPage *self, NSString *contentType, NSString *contentTypeDisplay, NSString *contentId, ARApiRawValue *params) {
  (void) NSObject_init(self);
  
#line 14
  self->contentType_ = contentType;
  self->contentTypeDisplay_ = contentTypeDisplay;
  self->contentId_ = contentId;
  self->params_ = params;
}


#line 13
ACPage *new_ACPage_initWithNSString_withNSString_withNSString_withARApiRawValue_(NSString *contentType, NSString *contentTypeDisplay, NSString *contentId, ARApiRawValue *params) {
  ACPage *self = [ACPage alloc];
  ACPage_initWithNSString_withNSString_withNSString_withARApiRawValue_(self, contentType, contentTypeDisplay, contentId, params);
  return self;
}


#line 20
void ACPage_initWithNSString_withNSString_withNSString_(ACPage *self, NSString *contentType, NSString *contentTypeDisplay, NSString *contentId) {
  (void) NSObject_init(self);
  
#line 21
  self->contentType_ = contentType;
  self->contentTypeDisplay_ = contentTypeDisplay;
  self->contentId_ = contentId;
}


#line 20
ACPage *new_ACPage_initWithNSString_withNSString_withNSString_(NSString *contentType, NSString *contentTypeDisplay, NSString *contentId) {
  ACPage *self = [ACPage alloc];
  ACPage_initWithNSString_withNSString_withNSString_(self, contentType, contentTypeDisplay, contentId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPage)

#pragma clang diagnostic pop
