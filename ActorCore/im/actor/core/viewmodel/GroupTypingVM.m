//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/GroupTypingVM.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/viewmodel/GroupTypingVM.h"
#include "im/actor/runtime/mvvm/ValueModel.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACGroupTypingVM () {
 @public
  jint gid_;
  ARValueModel *active_;
}

@end

J2OBJC_FIELD_SETTER(ACGroupTypingVM, active_, ARValueModel *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/GroupTypingVM.java"


#line 14
@implementation ACGroupTypingVM

@synthesize gid = gid_;
@synthesize active = active_;


#line 26
- (instancetype)initWithInt:(jint)gid {
  ACGroupTypingVM_initWithInt_(self, gid);
  return self;
}


#line 36
- (jint)getGid {
  return gid_;
}


#line 45
- (ARValueModel *)getActive {
  return active_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "GroupTypingVM", NULL, 0x1, NULL, NULL },
    { "getGid", NULL, "I", 0x1, NULL, NULL },
    { "getActive", NULL, "Lim.actor.runtime.mvvm.ValueModel;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "gid_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "active_", NULL, 0x2, "Lim.actor.runtime.mvvm.ValueModel;", NULL, "Lim/actor/runtime/mvvm/ValueModel<L[I;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACGroupTypingVM = { 2, "GroupTypingVM", "im.actor.core.viewmodel", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACGroupTypingVM;
}

@end


#line 26
void ACGroupTypingVM_initWithInt_(ACGroupTypingVM *self, jint gid) {
  (void) NSObject_init(self);
  
#line 27
  self->gid_ = gid;
  self->active_ = new_ARValueModel_initWithNSString_withId_(JreStrcat("$I$", @"groups.", gid, @".typing"), [IOSIntArray newArrayWithLength:0]);
}


#line 26
ACGroupTypingVM *new_ACGroupTypingVM_initWithInt_(jint gid) {
  ACGroupTypingVM *self = [ACGroupTypingVM alloc];
  ACGroupTypingVM_initWithInt_(self, gid);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACGroupTypingVM)

#pragma clang diagnostic pop
