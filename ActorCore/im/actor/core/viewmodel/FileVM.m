//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/entity/FileReference.h"
#include "im/actor/core/modules/Modules.h"
#include "im/actor/core/modules/internal/FilesModule.h"
#include "im/actor/core/viewmodel/FileCallback.h"
#include "im/actor/core/viewmodel/FileVM.h"
#include "im/actor/core/viewmodel/FileVMCallback.h"
#include "im/actor/runtime/files/FileSystemReference.h"
#include "im/actor/runtime/mvvm/AsyncVM.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACFileVM () {
 @public
  ACModules *modules_;
  ACFileReference *location_;
  id<ACFileCallback> callback_;
  id<ACFileVMCallback> vmCallback_;
}

@end

J2OBJC_FIELD_SETTER(ACFileVM, modules_, ACModules *)
J2OBJC_FIELD_SETTER(ACFileVM, location_, ACFileReference *)
J2OBJC_FIELD_SETTER(ACFileVM, callback_, id<ACFileCallback>)
J2OBJC_FIELD_SETTER(ACFileVM, vmCallback_, id<ACFileVMCallback>)

@interface ACFileVM_OnNotDownloaded : NSObject

- (instancetype)initWithACFileVM:(ACFileVM *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ACFileVM_OnNotDownloaded)

__attribute__((unused)) static void ACFileVM_OnNotDownloaded_initWithACFileVM_(ACFileVM_OnNotDownloaded *self, ACFileVM *outer$);

__attribute__((unused)) static ACFileVM_OnNotDownloaded *new_ACFileVM_OnNotDownloaded_initWithACFileVM_(ACFileVM *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACFileVM_OnNotDownloaded)

@interface ACFileVM_OnDownloading : NSObject {
 @public
  jfloat progress_;
}

- (instancetype)initWithACFileVM:(ACFileVM *)outer$
                       withFloat:(jfloat)progress;

- (jfloat)getProgress;

@end

J2OBJC_EMPTY_STATIC_INIT(ACFileVM_OnDownloading)

__attribute__((unused)) static void ACFileVM_OnDownloading_initWithACFileVM_withFloat_(ACFileVM_OnDownloading *self, ACFileVM *outer$, jfloat progress);

__attribute__((unused)) static ACFileVM_OnDownloading *new_ACFileVM_OnDownloading_initWithACFileVM_withFloat_(ACFileVM *outer$, jfloat progress) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACFileVM_OnDownloading)

@interface ACFileVM_OnDownloaded : NSObject {
 @public
  id<ARFileSystemReference> fileSystemReference_;
}

- (instancetype)initWithACFileVM:(ACFileVM *)outer$
       withARFileSystemReference:(id<ARFileSystemReference>)fileSystemReference;

- (id<ARFileSystemReference>)getFileSystemReference;

@end

J2OBJC_EMPTY_STATIC_INIT(ACFileVM_OnDownloaded)

J2OBJC_FIELD_SETTER(ACFileVM_OnDownloaded, fileSystemReference_, id<ARFileSystemReference>)

__attribute__((unused)) static void ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(ACFileVM_OnDownloaded *self, ACFileVM *outer$, id<ARFileSystemReference> fileSystemReference);

__attribute__((unused)) static ACFileVM_OnDownloaded *new_ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(ACFileVM *outer$, id<ARFileSystemReference> fileSystemReference) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACFileVM_OnDownloaded)

@interface ACFileVM_$1 : NSObject < ACFileCallback > {
 @public
  ACFileVM *this$0_;
}

- (void)onNotDownloaded;

- (void)onDownloading:(jfloat)progress;

- (void)onDownloaded:(id<ARFileSystemReference>)reference;

- (instancetype)initWithACFileVM:(ACFileVM *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ACFileVM_$1)

J2OBJC_FIELD_SETTER(ACFileVM_$1, this$0_, ACFileVM *)

__attribute__((unused)) static void ACFileVM_$1_initWithACFileVM_(ACFileVM_$1 *self, ACFileVM *outer$);

__attribute__((unused)) static ACFileVM_$1 *new_ACFileVM_$1_initWithACFileVM_(ACFileVM *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACFileVM_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java"


#line 17
@implementation ACFileVM


#line 32
- (instancetype)initWithACFileReference:(ACFileReference *)location
                            withBoolean:(jboolean)isAutostart
                          withACModules:(ACModules *)modules
                   withACFileVMCallback:(id<ACFileVMCallback>)vmCallback {
  ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(self, location, isAutostart, modules, vmCallback);
  return self;
}


#line 57
- (void)onObjectReceivedWithId:(id)obj {
  if ([obj isKindOfClass:[ACFileVM_OnNotDownloaded class]]) {
    [((id<ACFileVMCallback>) nil_chk(vmCallback_)) onNotDownloaded];
  }
  else
#line 60
  if ([obj isKindOfClass:[ACFileVM_OnDownloading class]]) {
    [((id<ACFileVMCallback>) nil_chk(vmCallback_)) onDownloading:[((ACFileVM_OnDownloading *) nil_chk(((ACFileVM_OnDownloading *) check_class_cast(obj, [ACFileVM_OnDownloading class])))) getProgress]];
  }
  else
#line 62
  if ([obj isKindOfClass:[ACFileVM_OnDownloaded class]]) {
    [((id<ACFileVMCallback>) nil_chk(vmCallback_)) onDownloaded:[((ACFileVM_OnDownloaded *) nil_chk(((ACFileVM_OnDownloaded *) check_class_cast(obj, [ACFileVM_OnDownloaded class])))) getFileSystemReference]];
  }
}


#line 72
- (void)detach {
  [super detach];
  [((ACFilesModule *) nil_chk([((ACModules *) nil_chk(modules_)) getFilesModule])) unbindFileWithLong:[((ACFileReference *) nil_chk(location_)) getFileId] withACFileCallback:callback_ withBoolean:false];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACFileReference:withBoolean:withACModules:withACFileVMCallback:", "FileVM", NULL, 0x1, NULL, NULL },
    { "onObjectReceivedWithId:", "onObjectReceived", "V", 0x4, NULL, NULL },
    { "detach", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "modules_", NULL, 0x2, "Lim.actor.core.modules.Modules;", NULL, NULL, .constantValue.asLong = 0 },
    { "location_", NULL, 0x2, "Lim.actor.core.entity.FileReference;", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x2, "Lim.actor.core.viewmodel.FileCallback;", NULL, NULL, .constantValue.asLong = 0 },
    { "vmCallback_", NULL, 0x2, "Lim.actor.core.viewmodel.FileVMCallback;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.core.viewmodel.FileVM$OnNotDownloaded;", "Lim.actor.core.viewmodel.FileVM$OnDownloading;", "Lim.actor.core.viewmodel.FileVM$OnDownloaded;"};
  static const J2ObjcClassInfo _ACFileVM = { 2, "FileVM", "im.actor.core.viewmodel", NULL, 0x1, 3, methods, 4, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_ACFileVM;
}

@end


#line 32
void ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(ACFileVM *self, ACFileReference *location, jboolean isAutostart, ACModules *modules, id<ACFileVMCallback> vmCallback) {
  (void) ARAsyncVM_init(self);
  self->modules_ = modules;
  self->location_ = location;
  self->vmCallback_ = vmCallback;
  self->callback_ = new_ACFileVM_$1_initWithACFileVM_(self);
  
#line 53
  [((ACFilesModule *) nil_chk([((ACModules *) nil_chk(modules)) getFilesModule])) bindFileWithACFileReference:location withBoolean:isAutostart withACFileCallback:self->callback_];
}


#line 32
ACFileVM *new_ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(ACFileReference *location, jboolean isAutostart, ACModules *modules, id<ACFileVMCallback> vmCallback) {
  ACFileVM *self = [ACFileVM alloc];
  ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(self, location, isAutostart, modules, vmCallback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileVM)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java"


#line 77
@implementation ACFileVM_OnNotDownloaded

- (instancetype)initWithACFileVM:(ACFileVM *)outer$ {
  ACFileVM_OnNotDownloaded_initWithACFileVM_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACFileVM:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACFileVM_OnNotDownloaded = { 2, "OnNotDownloaded", "im.actor.core.viewmodel", "FileVM", 0x2, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACFileVM_OnNotDownloaded;
}

@end

void ACFileVM_OnNotDownloaded_initWithACFileVM_(ACFileVM_OnNotDownloaded *self, ACFileVM *outer$) {
  (void) NSObject_init(self);
}

ACFileVM_OnNotDownloaded *new_ACFileVM_OnNotDownloaded_initWithACFileVM_(ACFileVM *outer$) {
  ACFileVM_OnNotDownloaded *self = [ACFileVM_OnNotDownloaded alloc];
  ACFileVM_OnNotDownloaded_initWithACFileVM_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileVM_OnNotDownloaded)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java"


#line 81
@implementation ACFileVM_OnDownloading


#line 84
- (instancetype)initWithACFileVM:(ACFileVM *)outer$
                       withFloat:(jfloat)progress {
  ACFileVM_OnDownloading_initWithACFileVM_withFloat_(self, outer$, progress);
  return self;
}


#line 88
- (jfloat)getProgress {
  return progress_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACFileVM:withFloat:", "OnDownloading", NULL, 0x2, NULL, NULL },
    { "getProgress", NULL, "F", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "progress_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACFileVM_OnDownloading = { 2, "OnDownloading", "im.actor.core.viewmodel", "FileVM", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACFileVM_OnDownloading;
}

@end


#line 84
void ACFileVM_OnDownloading_initWithACFileVM_withFloat_(ACFileVM_OnDownloading *self, ACFileVM *outer$, jfloat progress) {
  (void) NSObject_init(self);
  
#line 85
  self->progress_ = progress;
}


#line 84
ACFileVM_OnDownloading *new_ACFileVM_OnDownloading_initWithACFileVM_withFloat_(ACFileVM *outer$, jfloat progress) {
  ACFileVM_OnDownloading *self = [ACFileVM_OnDownloading alloc];
  ACFileVM_OnDownloading_initWithACFileVM_withFloat_(self, outer$, progress);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileVM_OnDownloading)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java"


#line 93
@implementation ACFileVM_OnDownloaded


#line 96
- (instancetype)initWithACFileVM:(ACFileVM *)outer$
       withARFileSystemReference:(id<ARFileSystemReference>)fileSystemReference {
  ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(self, outer$, fileSystemReference);
  return self;
}


#line 100
- (id<ARFileSystemReference>)getFileSystemReference {
  return fileSystemReference_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACFileVM:withARFileSystemReference:", "OnDownloaded", NULL, 0x2, NULL, NULL },
    { "getFileSystemReference", NULL, "Lim.actor.runtime.files.FileSystemReference;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fileSystemReference_", NULL, 0x2, "Lim.actor.runtime.files.FileSystemReference;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACFileVM_OnDownloaded = { 2, "OnDownloaded", "im.actor.core.viewmodel", "FileVM", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACFileVM_OnDownloaded;
}

@end


#line 96
void ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(ACFileVM_OnDownloaded *self, ACFileVM *outer$, id<ARFileSystemReference> fileSystemReference) {
  (void) NSObject_init(self);
  
#line 97
  self->fileSystemReference_ = fileSystemReference;
}


#line 96
ACFileVM_OnDownloaded *new_ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(ACFileVM *outer$, id<ARFileSystemReference> fileSystemReference) {
  ACFileVM_OnDownloaded *self = [ACFileVM_OnDownloaded alloc];
  ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(self, outer$, fileSystemReference);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileVM_OnDownloaded)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/viewmodel/FileVM.java"

@implementation ACFileVM_$1


#line 39
- (void)onNotDownloaded {
  [this$0_ postWithId:new_ACFileVM_OnNotDownloaded_initWithACFileVM_(this$0_)];
}


#line 44
- (void)onDownloading:(jfloat)progress {
  [this$0_ postWithId:new_ACFileVM_OnDownloading_initWithACFileVM_withFloat_(this$0_, progress)];
}


#line 49
- (void)onDownloaded:(id<ARFileSystemReference>)reference {
  [this$0_ postWithId:new_ACFileVM_OnDownloaded_initWithACFileVM_withARFileSystemReference_(this$0_, reference)];
}

- (instancetype)initWithACFileVM:(ACFileVM *)outer$ {
  ACFileVM_$1_initWithACFileVM_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNotDownloaded", NULL, "V", 0x1, NULL, NULL },
    { "onDownloading:", "onDownloading", "V", 0x1, NULL, NULL },
    { "onDownloaded:", "onDownloaded", "V", 0x1, NULL, NULL },
    { "initWithACFileVM:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.viewmodel.FileVM;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACFileVM", "initWithACFileReference:withBoolean:withACModules:withACFileVMCallback:" };
  static const J2ObjcClassInfo _ACFileVM_$1 = { 2, "", "im.actor.core.viewmodel", "FileVM", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ACFileVM_$1;
}

@end

void ACFileVM_$1_initWithACFileVM_(ACFileVM_$1 *self, ACFileVM *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ACFileVM_$1 *new_ACFileVM_$1_initWithACFileVM_(ACFileVM *outer$) {
  ACFileVM_$1 *self = [ACFileVM_$1 alloc];
  ACFileVM_$1_initWithACFileVM_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACFileVM_$1)

#pragma clang diagnostic pop
