//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/MTRpcResponse.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/network/mtp/entity/MTRpcResponse.h"
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACMTRpcResponse () {
 @public
  jlong messageId_;
  IOSByteArray *payload_;
}

@end

J2OBJC_FIELD_SETTER(ACMTRpcResponse, payload_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/MTRpcResponse.java"


#line 12
@implementation ACMTRpcResponse

+ (jbyte)HEADER {
  return ACMTRpcResponse_HEADER;
}


#line 19
- (instancetype)initWithARDataInput:(ARDataInput *)stream {
  ACMTRpcResponse_initWithARDataInput_(self, stream);
  return self;
}


#line 23
- (jlong)getMessageId {
  return messageId_;
}

- (IOSByteArray *)getPayload {
  return payload_;
}


#line 32
- (jbyte)getHeader {
  return ACMTRpcResponse_HEADER;
}


#line 37
- (void)writeBodyWithARDataOutput:(ARDataOutput *)bs {
  [((ARDataOutput *) nil_chk(bs)) writeLongWithLong:messageId_];
  [bs writeProtoBytesWithByteArray:payload_ withInt:0 withInt:((IOSByteArray *) nil_chk(payload_))->size_];
}


#line 43
- (void)readBodyWithARDataInput:(ARDataInput *)bs {
  messageId_ = [((ARDataInput *) nil_chk(bs)) readLong];
  payload_ = [bs readProtoBytes];
}


#line 49
- (NSString *)description {
  return JreStrcat("$JC", @"ResponseBox [", messageId_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARDataInput:", "MTRpcResponse", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "getMessageId", NULL, "J", 0x1, NULL, NULL },
    { "getPayload", NULL, "[B", 0x1, NULL, NULL },
    { "getHeader", NULL, "B", 0x4, NULL, NULL },
    { "writeBodyWithARDataOutput:", "writeBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "readBodyWithARDataInput:", "readBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "B", NULL, NULL, .constantValue.asChar = ACMTRpcResponse_HEADER },
    { "messageId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "payload_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACMTRpcResponse = { 2, "MTRpcResponse", "im.actor.core.network.mtp.entity", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACMTRpcResponse;
}

@end


#line 19
void ACMTRpcResponse_initWithARDataInput_(ACMTRpcResponse *self, ARDataInput *stream) {
  (void) ACProtoStruct_initWithARDataInput_(self, stream);
}


#line 19
ACMTRpcResponse *new_ACMTRpcResponse_initWithARDataInput_(ARDataInput *stream) {
  ACMTRpcResponse *self = [ACMTRpcResponse alloc];
  ACMTRpcResponse_initWithARDataInput_(self, stream);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMTRpcResponse)

#pragma clang diagnostic pop
