//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/rpc/RpcError.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcError.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/rpc/RpcError.java"


#line 13
@implementation ACRpcError

+ (jbyte)HEADER {
  return ACRpcError_HEADER;
}


#line 23
- (instancetype)initWithARDataInput:(ARDataInput *)stream {
  ACRpcError_initWithARDataInput_(self, stream);
  return self;
}


#line 27
- (instancetype)initWithInt:(jint)errorCode
               withNSString:(NSString *)errorTag
               withNSString:(NSString *)userMessage
                withBoolean:(jboolean)canTryAgain
              withByteArray:(IOSByteArray *)relatedData {
  ACRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(self, errorCode, errorTag, userMessage, canTryAgain, relatedData);
  return self;
}

- (jbyte)getHeader {
  return ACRpcError_HEADER;
}


#line 41
- (void)writeBodyWithARDataOutput:(ARDataOutput *)bs {
  [((ARDataOutput *) nil_chk(bs)) writeIntWithInt:errorCode_];
  [bs writeProtoStringWithNSString:errorTag_];
  [bs writeProtoStringWithNSString:userMessage_];
  [bs writeProtoBoolWithBoolean:canTryAgain_];
  [bs writeProtoBytesWithByteArray:relatedData_ withInt:0 withInt:((IOSByteArray *) nil_chk(relatedData_))->size_];
}


#line 50
- (void)readBodyWithARDataInput:(ARDataInput *)bs {
  errorCode_ = [((ARDataInput *) nil_chk(bs)) readInt];
  errorTag_ = [bs readProtoString];
  userMessage_ = [bs readProtoString];
  canTryAgain_ = [bs readProtoBool];
  relatedData_ = [bs readProtoBytes];
}


#line 59
- (NSString *)description {
  return JreStrcat("$IC$C", @"RpcError [#", errorCode_, ' ', errorTag_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARDataInput:", "RpcError", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithInt:withNSString:withNSString:withBoolean:withByteArray:", "RpcError", NULL, 0x1, NULL, NULL },
    { "getHeader", NULL, "B", 0x4, NULL, NULL },
    { "writeBodyWithARDataOutput:", "writeBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "readBodyWithARDataInput:", "readBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "B", NULL, NULL, .constantValue.asChar = ACRpcError_HEADER },
    { "errorCode_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "errorTag_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "userMessage_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "canTryAgain_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "relatedData_", NULL, 0x1, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACRpcError = { 2, "RpcError", "im.actor.core.network.mtp.entity.rpc", NULL, 0x1, 6, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACRpcError;
}

@end


#line 23
void ACRpcError_initWithARDataInput_(ACRpcError *self, ARDataInput *stream) {
  (void) ACProtoStruct_initWithARDataInput_(self, stream);
}


#line 23
ACRpcError *new_ACRpcError_initWithARDataInput_(ARDataInput *stream) {
  ACRpcError *self = [ACRpcError alloc];
  ACRpcError_initWithARDataInput_(self, stream);
  return self;
}


#line 27
void ACRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(ACRpcError *self, jint errorCode, NSString *errorTag, NSString *userMessage, jboolean canTryAgain, IOSByteArray *relatedData) {
  (void) ACProtoStruct_init(self);
  
#line 28
  self->errorCode_ = errorCode;
  self->errorTag_ = errorTag;
  self->userMessage_ = userMessage;
  self->canTryAgain_ = canTryAgain;
  self->relatedData_ = relatedData;
}


#line 27
ACRpcError *new_ACRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(jint errorCode, NSString *errorTag, NSString *userMessage, jboolean canTryAgain, IOSByteArray *relatedData) {
  ACRpcError *self = [ACRpcError alloc];
  ACRpcError_initWithInt_withNSString_withNSString_withBoolean_withByteArray_(self, errorCode, errorTag, userMessage, canTryAgain, relatedData);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACRpcError)

#pragma clang diagnostic pop
