//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/SessionHello.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/core/network/mtp/entity/SessionHello.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/SessionHello.java"


#line 12
@implementation ACSessionHello

+ (jbyte)HEADER {
  return ACSessionHello_HEADER;
}


#line 16
- (jbyte)getHeader {
  return ACSessionHello_HEADER;
}


#line 21
- (void)writeBodyWithARDataOutput:(ARDataOutput *)bs {
}


#line 26
- (void)readBodyWithARDataInput:(ARDataInput *)bs {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACSessionHello_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getHeader", NULL, "B", 0x4, NULL, NULL },
    { "writeBodyWithARDataOutput:", "writeBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "readBodyWithARDataInput:", "readBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "B", NULL, NULL, .constantValue.asChar = ACSessionHello_HEADER },
  };
  static const J2ObjcClassInfo _ACSessionHello = { 2, "SessionHello", "im.actor.core.network.mtp.entity", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACSessionHello;
}

@end

void ACSessionHello_init(ACSessionHello *self) {
  (void) ACProtoStruct_init(self);
}

ACSessionHello *new_ACSessionHello_init() {
  ACSessionHello *self = [ACSessionHello alloc];
  ACSessionHello_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACSessionHello)

#pragma clang diagnostic pop
