//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/ProtoSerializer.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/network/mtp/entity/AuthIdInvalid.h"
#include "im/actor/core/network/mtp/entity/Container.h"
#include "im/actor/core/network/mtp/entity/Drop.h"
#include "im/actor/core/network/mtp/entity/MTPush.h"
#include "im/actor/core/network/mtp/entity/MTRpcRequest.h"
#include "im/actor/core/network/mtp/entity/MTRpcResponse.h"
#include "im/actor/core/network/mtp/entity/MessageAck.h"
#include "im/actor/core/network/mtp/entity/NewSessionCreated.h"
#include "im/actor/core/network/mtp/entity/Ping.h"
#include "im/actor/core/network/mtp/entity/Pong.h"
#include "im/actor/core/network/mtp/entity/ProtoSerializer.h"
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/core/network/mtp/entity/RequestResend.h"
#include "im/actor/core/network/mtp/entity/SessionLost.h"
#include "im/actor/core/network/mtp/entity/UnsentMessage.h"
#include "im/actor/core/network/mtp/entity/UnsentResponse.h"
#include "im/actor/core/network/mtp/entity/rpc/Push.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcError.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcFloodWait.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcInternalError.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcOk.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcRequest.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/ProtoSerializer.java"


#line 17
@implementation ACProtoSerializer


#line 18
+ (ACProtoStruct *)readMessagePayloadWithByteArray:(IOSByteArray *)bs {
  return ACProtoSerializer_readMessagePayloadWithByteArray_(bs);
}

+ (ACProtoStruct *)readMessagePayloadWithARDataInput:(ARDataInput *)bs {
  return ACProtoSerializer_readMessagePayloadWithARDataInput_(bs);
}


#line 60
+ (ACProtoStruct *)readRpcResponsePayloadWithByteArray:(IOSByteArray *)data {
  return ACProtoSerializer_readRpcResponsePayloadWithByteArray_(data);
}


#line 76
+ (ACProtoStruct *)readRpcRequestPayloadWithARDataInput:(ARDataInput *)bs {
  return ACProtoSerializer_readRpcRequestPayloadWithARDataInput_(bs);
}


#line 85
+ (ACPush *)readUpdateWithByteArray:(IOSByteArray *)bs {
  return ACProtoSerializer_readUpdateWithByteArray_(bs);
}

+ (ACPush *)readUpdateWithARDataInput:(ARDataInput *)bs {
  return ACProtoSerializer_readUpdateWithARDataInput_(bs);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACProtoSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readMessagePayloadWithByteArray:", "readMessagePayload", "Lim.actor.core.network.mtp.entity.ProtoStruct;", 0x9, "Ljava.io.IOException;", NULL },
    { "readMessagePayloadWithARDataInput:", "readMessagePayload", "Lim.actor.core.network.mtp.entity.ProtoStruct;", 0x9, "Ljava.io.IOException;", NULL },
    { "readRpcResponsePayloadWithByteArray:", "readRpcResponsePayload", "Lim.actor.core.network.mtp.entity.ProtoStruct;", 0x9, "Ljava.io.IOException;", NULL },
    { "readRpcRequestPayloadWithARDataInput:", "readRpcRequestPayload", "Lim.actor.core.network.mtp.entity.ProtoStruct;", 0x9, "Ljava.io.IOException;", NULL },
    { "readUpdateWithByteArray:", "readUpdate", "Lim.actor.core.network.mtp.entity.rpc.Push;", 0x9, "Ljava.io.IOException;", NULL },
    { "readUpdateWithARDataInput:", "readUpdate", "Lim.actor.core.network.mtp.entity.rpc.Push;", 0x9, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACProtoSerializer = { 2, "ProtoSerializer", "im.actor.core.network.mtp.entity", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACProtoSerializer;
}

@end


#line 18
ACProtoStruct *ACProtoSerializer_readMessagePayloadWithByteArray_(IOSByteArray *bs) {
  ACProtoSerializer_initialize();
  
#line 19
  return ACProtoSerializer_readMessagePayloadWithARDataInput_(new_ARDataInput_initWithByteArray_withInt_withInt_(bs, 0, ((IOSByteArray *) nil_chk(bs))->size_));
}


#line 22
ACProtoStruct *ACProtoSerializer_readMessagePayloadWithARDataInput_(ARDataInput *bs) {
  ACProtoSerializer_initialize();
  
#line 23
  jint header = [((ARDataInput *) nil_chk(bs)) readByte];
  
#line 25
  switch (header) {
    case ACPing_HEADER:
    return new_ACPing_initWithARDataInput_(bs);
    case ACPong_HEADER:
    return new_ACPong_initWithARDataInput_(bs);
    case ACDrop_HEADER:
    return new_ACDrop_initWithARDataInput_(bs);
    case ACContainer_HEADER:
    return new_ACContainer_initWithARDataInput_(bs);
    case ACMTRpcRequest_HEADER:
    return new_ACMTRpcRequest_initWithARDataInput_(bs);
    case ACMTRpcResponse_HEADER:
    return new_ACMTRpcResponse_initWithARDataInput_(bs);
    case ACMessageAck_HEADER:
    return new_ACMessageAck_initWithARDataInput_(bs);
    case ACNewSessionCreated_HEADER:
    return new_ACNewSessionCreated_initWithARDataInput_(bs);
    case ACMTPush_HEADER:
    return new_ACMTPush_initWithARDataInput_(bs);
    case ACUnsentMessage_HEADER:
    return new_ACUnsentMessage_initWithARDataInput_(bs);
    case ACUnsentResponse_HEADER:
    return new_ACUnsentResponse_initWithARDataInput_(bs);
    case ACRequestResend_HEADER:
    return new_ACUnsentResponse_initWithARDataInput_(bs);
    case ACSessionLost_HEADER:
    return new_ACSessionLost_initWithARDataInput_(bs);
    case ACAuthIdInvalid_HEADER:
    return new_ACAuthIdInvalid_initWithARDataInput_(bs);
  }
  
#line 57
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Unable to read proto object with header #", header));
}


#line 60
ACProtoStruct *ACProtoSerializer_readRpcResponsePayloadWithByteArray_(IOSByteArray *data) {
  ACProtoSerializer_initialize();
  
#line 61
  ARDataInput *bs = new_ARDataInput_initWithByteArray_withInt_withInt_(data, 0, ((IOSByteArray *) nil_chk(data))->size_);
  jint header = [bs readByte];
  switch (header) {
    case ACRpcOk_HEADER:
    return new_ACRpcOk_initWithARDataInput_(bs);
    case ACRpcError_HEADER:
    return new_ACRpcError_initWithARDataInput_(bs);
    case ACRpcFloodWait_HEADER:
    return new_ACRpcFloodWait_initWithARDataInput_(bs);
    case ACRpcInternalError_HEADER:
    return new_ACRpcInternalError_initWithARDataInput_(bs);
  }
  @throw new_JavaIoIOException_initWithNSString_(@"Unable to read proto object");
}


#line 76
ACProtoStruct *ACProtoSerializer_readRpcRequestPayloadWithARDataInput_(ARDataInput *bs) {
  ACProtoSerializer_initialize();
  
#line 77
  jint header = [((ARDataInput *) nil_chk(bs)) readByte];
  switch (header) {
    case ACRpcRequest_HEADER:
    return new_ACRpcRequest_initWithARDataInput_(bs);
  }
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Unable to read proto object with header #", header));
}


#line 85
ACPush *ACProtoSerializer_readUpdateWithByteArray_(IOSByteArray *bs) {
  ACProtoSerializer_initialize();
  
#line 86
  return ACProtoSerializer_readUpdateWithARDataInput_(new_ARDataInput_initWithByteArray_withInt_withInt_(bs, 0, ((IOSByteArray *) nil_chk(bs))->size_));
}


#line 89
ACPush *ACProtoSerializer_readUpdateWithARDataInput_(ARDataInput *bs) {
  ACProtoSerializer_initialize();
  
#line 90
  return new_ACPush_initWithARDataInput_(bs);
}

void ACProtoSerializer_init(ACProtoSerializer *self) {
  (void) NSObject_init(self);
}

ACProtoSerializer *new_ACProtoSerializer_init() {
  ACProtoSerializer *self = [ACProtoSerializer alloc];
  ACProtoSerializer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACProtoSerializer)

#pragma clang diagnostic pop
