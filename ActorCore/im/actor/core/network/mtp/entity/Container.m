//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/Container.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSObjectArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/network/mtp/entity/Container.h"
#include "im/actor/core/network/mtp/entity/ProtoMessage.h"
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACContainer () {
 @public
  IOSObjectArray *messages_;
}

@end

J2OBJC_FIELD_SETTER(ACContainer, messages_, IOSObjectArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/Container.java"


#line 12
@implementation ACContainer

+ (jbyte)HEADER {
  return ACContainer_HEADER;
}

- (instancetype)initWithARDataInput:(ARDataInput *)stream {
  ACContainer_initWithARDataInput_(self, stream);
  return self;
}


#line 22
- (instancetype)initWithACProtoMessageArray:(IOSObjectArray *)messages {
  ACContainer_initWithACProtoMessageArray_(self, messages);
  return self;
}


#line 26
- (IOSObjectArray *)getMessages {
  return messages_;
}


#line 31
- (jbyte)getHeader {
  return ACContainer_HEADER;
}


#line 36
- (void)writeBodyWithARDataOutput:(ARDataOutput *)bs {
  if (messages_ != nil && messages_->size_ > 0) {
    [((ARDataOutput *) nil_chk(bs)) writeVarIntWithLong:messages_->size_];
    {
      IOSObjectArray *a__ =
#line 39
      messages_;
      ACProtoMessage * const *b__ = a__->buffer_;
      ACProtoMessage * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ACProtoMessage *m = *b__++;
        
#line 40
        [((ACProtoMessage *) nil_chk(m)) writeObjectWithARDataOutput:bs];
      }
    }
  }
  else {
    
#line 43
    [((ARDataOutput *) nil_chk(bs)) writeVarIntWithLong:0];
  }
}


#line 48
- (void)readBodyWithARDataInput:(ARDataInput *)bs {
  jint size = (jint) [((ARDataInput *) nil_chk(bs)) readVarInt];
  messages_ = [IOSObjectArray newArrayWithLength:size type:ACProtoMessage_class_()];
  for (jint i = 0; i < size; ++i) {
    (void) IOSObjectArray_Set(messages_, i, new_ACProtoMessage_initWithARDataInput_(bs));
  }
}


#line 57
- (NSString *)description {
  return JreStrcat("$I$", @"Conatiner[", ((IOSObjectArray *) nil_chk(messages_))->size_, @" items]");
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARDataInput:", "Container", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithACProtoMessageArray:", "Container", NULL, 0x1, NULL, NULL },
    { "getMessages", NULL, "[Lim.actor.core.network.mtp.entity.ProtoMessage;", 0x1, NULL, NULL },
    { "getHeader", NULL, "B", 0x4, NULL, NULL },
    { "writeBodyWithARDataOutput:", "writeBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "readBodyWithARDataInput:", "readBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "B", NULL, NULL, .constantValue.asChar = ACContainer_HEADER },
    { "messages_", NULL, 0x2, "[Lim.actor.core.network.mtp.entity.ProtoMessage;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACContainer = { 2, "Container", "im.actor.core.network.mtp.entity", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACContainer;
}

@end


#line 18
void ACContainer_initWithARDataInput_(ACContainer *self, ARDataInput *stream) {
  (void) ACProtoStruct_initWithARDataInput_(self, stream);
}


#line 18
ACContainer *new_ACContainer_initWithARDataInput_(ARDataInput *stream) {
  ACContainer *self = [ACContainer alloc];
  ACContainer_initWithARDataInput_(self, stream);
  return self;
}


#line 22
void ACContainer_initWithACProtoMessageArray_(ACContainer *self, IOSObjectArray *messages) {
  (void) ACProtoStruct_init(self);
  
#line 23
  self->messages_ = messages;
}


#line 22
ACContainer *new_ACContainer_initWithACProtoMessageArray_(IOSObjectArray *messages) {
  ACContainer *self = [ACContainer alloc];
  ACContainer_initWithACProtoMessageArray_(self, messages);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACContainer)

#pragma clang diagnostic pop
