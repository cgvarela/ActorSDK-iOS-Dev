//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/MessageAck.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSObjectArray.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/network/mtp/entity/MessageAck.h"
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/runtime/bser/DataInput.h"
#include "im/actor/runtime/bser/DataOutput.h"
#include <j2objc/java/io/IOException.h>
#include <j2objc/java/lang/Long.h>
#include <j2objc/java/util/Arrays.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/entity/MessageAck.java"


#line 13
@implementation ACMessageAck

+ (jbyte)HEADER {
  return ACMessageAck_HEADER;
}

- (instancetype)initWithARDataInput:(ARDataInput *)stream {
  ACMessageAck_initWithARDataInput_(self, stream);
  return self;
}


#line 23
- (instancetype)initWithJavaLangLongArray:(IOSObjectArray *)_messagesIds {
  ACMessageAck_initWithJavaLangLongArray_(self, _messagesIds);
  return self;
}


#line 30
- (instancetype)initWithLongArray:(IOSLongArray *)messagesIds {
  ACMessageAck_initWithLongArray_(self, messagesIds);
  return self;
}

- (jbyte)getHeader {
  return ACMessageAck_HEADER;
}


#line 40
- (void)writeBodyWithARDataOutput:(ARDataOutput *)bs {
  [((ARDataOutput *) nil_chk(bs)) writeProtoLongsWithLongArray:messagesIds_];
}


#line 45
- (void)readBodyWithARDataInput:(ARDataInput *)bs {
  messagesIds_ = [((ARDataInput *) nil_chk(bs)) readProtoLongs];
}


#line 50
- (NSString *)description {
  return JreStrcat("$$", @"Ack ", JavaUtilArrays_toStringWithLongArray_(messagesIds_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARDataInput:", "MessageAck", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithJavaLangLongArray:", "MessageAck", NULL, 0x1, NULL, NULL },
    { "initWithLongArray:", "MessageAck", NULL, 0x1, NULL, NULL },
    { "getHeader", NULL, "B", 0x4, NULL, NULL },
    { "writeBodyWithARDataOutput:", "writeBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "readBodyWithARDataInput:", "readBody", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "B", NULL, NULL, .constantValue.asChar = ACMessageAck_HEADER },
    { "messagesIds_", NULL, 0x1, "[J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACMessageAck = { 2, "MessageAck", "im.actor.core.network.mtp.entity", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACMessageAck;
}

@end


#line 19
void ACMessageAck_initWithARDataInput_(ACMessageAck *self, ARDataInput *stream) {
  (void) ACProtoStruct_initWithARDataInput_(self, stream);
}


#line 19
ACMessageAck *new_ACMessageAck_initWithARDataInput_(ARDataInput *stream) {
  ACMessageAck *self = [ACMessageAck alloc];
  ACMessageAck_initWithARDataInput_(self, stream);
  return self;
}


#line 23
void ACMessageAck_initWithJavaLangLongArray_(ACMessageAck *self, IOSObjectArray *_messagesIds) {
  (void) ACProtoStruct_init(self);
  
#line 24
  self->messagesIds_ = [IOSLongArray newArrayWithLength:((IOSObjectArray *) nil_chk(_messagesIds))->size_];
  for (jint i = 0; i < _messagesIds->size_; ++i) {
    *IOSLongArray_GetRef(self->messagesIds_, i) = [((JavaLangLong *) nil_chk(IOSObjectArray_Get(_messagesIds, i))) longLongValue];
  }
}


#line 23
ACMessageAck *new_ACMessageAck_initWithJavaLangLongArray_(IOSObjectArray *_messagesIds) {
  ACMessageAck *self = [ACMessageAck alloc];
  ACMessageAck_initWithJavaLangLongArray_(self, _messagesIds);
  return self;
}


#line 30
void ACMessageAck_initWithLongArray_(ACMessageAck *self, IOSLongArray *messagesIds) {
  (void) ACProtoStruct_init(self);
  
#line 31
  self->messagesIds_ = messagesIds;
}


#line 30
ACMessageAck *new_ACMessageAck_initWithLongArray_(IOSLongArray *messagesIds) {
  ACMessageAck *self = [ACMessageAck alloc];
  ACMessageAck_initWithLongArray_(self, messagesIds);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACMessageAck)

#pragma clang diagnostic pop
