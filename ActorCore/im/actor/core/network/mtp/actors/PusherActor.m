//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/network/mtp/MTProto.h"
#include "im/actor/core/network/mtp/actors/ManagerActor.h"
#include "im/actor/core/network/mtp/actors/PusherActor.h"
#include "im/actor/core/network/mtp/entity/Container.h"
#include "im/actor/core/network/mtp/entity/MessageAck.h"
#include "im/actor/core/network/mtp/entity/ProtoMessage.h"
#include "im/actor/core/network/mtp/entity/SessionHello.h"
#include "im/actor/core/network/util/MTUids.h"
#include "im/actor/runtime/Log.h"
#include "im/actor/runtime/actors/Actor.h"
#include "im/actor/runtime/actors/ActorCreator.h"
#include "im/actor/runtime/actors/ActorRef.h"
#include "im/actor/runtime/actors/ActorSelection.h"
#include "im/actor/runtime/actors/ActorSystem.h"
#include "im/actor/runtime/actors/Props.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#define ACPusherActor_ACK_THRESHOLD 10
#define ACPusherActor_ACK_DELAY 10000
#define ACPusherActor_MAX_WORKLOAD_SIZE 1024

@interface ACPusherActor () {
 @public
  jboolean isEnableLog_;
  ACMTProto *proto_;
  ARActorRef *manager_;
  JavaUtilHashMap *unsentPackages_;
  JavaUtilHashSet *confirm_;
  JavaUtilHashSet *pendingConfirm_;
}

- (ACMessageAck *)buildAck;

- (void)doSendWithJavaUtilList:(id<JavaUtilList>)items;

- (void)doSendWithACProtoMessage:(ACProtoMessage *)message;

- (void)performSendWithACProtoMessage:(ACProtoMessage *)message;

@end

J2OBJC_FIELD_SETTER(ACPusherActor, proto_, ACMTProto *)
J2OBJC_FIELD_SETTER(ACPusherActor, manager_, ARActorRef *)
J2OBJC_FIELD_SETTER(ACPusherActor, unsentPackages_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACPusherActor, confirm_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ACPusherActor, pendingConfirm_, JavaUtilHashSet *)

static NSString *ACPusherActor_TAG_ = @"ProtoSender";
J2OBJC_STATIC_FIELD_GETTER(ACPusherActor, TAG_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ACPusherActor, ACK_THRESHOLD, jint)

J2OBJC_STATIC_FIELD_GETTER(ACPusherActor, ACK_DELAY, jint)

J2OBJC_STATIC_FIELD_GETTER(ACPusherActor, MAX_WORKLOAD_SIZE, jint)

__attribute__((unused)) static ACMessageAck *ACPusherActor_buildAck(ACPusherActor *self);

__attribute__((unused)) static void ACPusherActor_doSendWithJavaUtilList_(ACPusherActor *self, id<JavaUtilList> items);

__attribute__((unused)) static void ACPusherActor_doSendWithACProtoMessage_(ACPusherActor *self, ACProtoMessage *message);

__attribute__((unused)) static void ACPusherActor_performSendWithACProtoMessage_(ACPusherActor *self, ACProtoMessage *message);

@interface ACPusherActor_SendMessage () {
 @public
  jlong mid_;
  IOSByteArray *message_;
}

@end

J2OBJC_FIELD_SETTER(ACPusherActor_SendMessage, message_, IOSByteArray *)

@interface ACPusherActor_ForgetMessage () {
 @public
  jlong mid_;
}

@end

@interface ACPusherActor_ConfirmMessage () {
 @public
  jlong mid_;
}

@end

@interface ACPusherActor_NewSession () {
 @public
  jlong messageId_;
}

@end

@interface ACPusherActor_$1 : NSObject < ARActorCreator > {
 @public
  ACMTProto *val$proto_;
}

- (ACPusherActor *)create;

- (instancetype)initWithACMTProto:(ACMTProto *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ACPusherActor_$1)

J2OBJC_FIELD_SETTER(ACPusherActor_$1, val$proto_, ACMTProto *)

__attribute__((unused)) static void ACPusherActor_$1_initWithACMTProto_(ACPusherActor_$1 *self, ACMTProto *capture$0);

__attribute__((unused)) static ACPusherActor_$1 *new_ACPusherActor_$1_initWithACMTProto_(ACMTProto *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACPusherActor_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 26
@implementation ACPusherActor


#line 30
+ (ARActorRef *)senderActorWithACMTProto:(ACMTProto *)proto {
  return ACPusherActor_senderActorWithACMTProto_(proto);
}


#line 52
- (instancetype)initWithACMTProto:(ACMTProto *)proto {
  ACPusherActor_initWithACMTProto_(self, proto);
  return self;
}


#line 61
- (void)preStart {
  manager_ = ACManagerActor_managerWithACMTProto_(proto_);
}


#line 66
- (void)postStop {
  self->unsentPackages_ = nil;
  self->confirm_ = nil;
  self->pendingConfirm_ = nil;
  self->proto_ = nil;
  self->manager_ = nil;
}


#line 75
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACPusherActor_SendMessage class]]) {
    
#line 78
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$J", @"Received SendMessage #", ((ACPusherActor_SendMessage *) nil_chk(((ACPusherActor_SendMessage *) check_class_cast(message, [ACPusherActor_SendMessage class]))))->mid_));
    }
    
#line 82
    ACPusherActor_SendMessage *sendMessage = (ACPusherActor_SendMessage *) check_class_cast(message, [ACPusherActor_SendMessage class]);
    ACProtoMessage *holder = new_ACProtoMessage_initWithLong_withByteArray_(((ACPusherActor_SendMessage *) nil_chk(sendMessage))->mid_, sendMessage->message_);
    (void) [((JavaUtilHashMap *) nil_chk(unsentPackages_)) putWithId:JavaLangLong_valueOfWithLong_([holder getMessageId]) withId:holder];
    ACPusherActor_doSendWithACProtoMessage_(self, holder);
  }
  else
#line 86
  if ([message isKindOfClass:[ACPusherActor_ConnectionCreated class]]) {
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, @"Received ConnectionCreated");
    }
    
#line 92
    [((JavaUtilHashSet *) nil_chk(confirm_)) addAllWithJavaUtilCollection:pendingConfirm_];
    [((JavaUtilHashSet *) nil_chk(pendingConfirm_)) clear];
    
#line 96
    JavaUtilArrayList *toSend = new_JavaUtilArrayList_init();
    for (ACProtoMessage * __strong unsentPackage in nil_chk([((JavaUtilHashMap *) nil_chk(unsentPackages_)) values])) {
      if (isEnableLog_) {
        ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$J", @"ReSending #", [((ACProtoMessage *) nil_chk(unsentPackage)) getMessageId]));
      }
      [toSend addWithId:unsentPackage];
    }
    
#line 105
    if ([toSend size] == 0) {
      if (isEnableLog_) {
        ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, @"Sending SessionHello");
      }
      [toSend addWithId:new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [new_ACSessionHello_init() toByteArray])];
    }
    
#line 112
    ACPusherActor_doSendWithJavaUtilList_(self, toSend);
  }
  else
#line 113
  if ([message isKindOfClass:[ACPusherActor_SessionLost class]]) {
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, @"Sending SessionHello");
    }
    ACPusherActor_doSendWithACProtoMessage_(self, new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [new_ACSessionHello_init() toByteArray]));
  }
  else
#line 118
  if ([message isKindOfClass:[ACPusherActor_ForgetMessage class]]) {
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$J", @"Received ForgetMessage #", ((ACPusherActor_ForgetMessage *) nil_chk(((ACPusherActor_ForgetMessage *) check_class_cast(message, [ACPusherActor_ForgetMessage class]))))->mid_));
    }
    (void) [((JavaUtilHashMap *) nil_chk(unsentPackages_)) removeWithId:JavaLangLong_valueOfWithLong_(((ACPusherActor_ForgetMessage *) nil_chk(((ACPusherActor_ForgetMessage *) check_class_cast(message, [ACPusherActor_ForgetMessage class]))))->mid_)];
  }
  else
#line 123
  if ([message isKindOfClass:[ACPusherActor_ConfirmMessage class]]) {
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$J", @"Confirming message #", ((ACPusherActor_ConfirmMessage *) nil_chk(((ACPusherActor_ConfirmMessage *) check_class_cast(message, [ACPusherActor_ConfirmMessage class]))))->mid_));
    }
    [((JavaUtilHashSet *) nil_chk(confirm_)) addWithId:JavaLangLong_valueOfWithLong_(((ACPusherActor_ConfirmMessage *) nil_chk(((ACPusherActor_ConfirmMessage *) check_class_cast(message, [ACPusherActor_ConfirmMessage class]))))->mid_)];
    if ([confirm_ size] >= ACPusherActor_ACK_THRESHOLD) {
      [((ARActorRef *) nil_chk([self self__])) sendOnceWithId:new_ACPusherActor_ForceAck_init()];
    }
    else
#line 130
    if ([confirm_ size] == 1) {
      [((ARActorRef *) nil_chk([self self__])) sendOnceWithId:new_ACPusherActor_ForceAck_init() withLong:ACPusherActor_ACK_DELAY];
    }
  }
  else
#line 133
  if ([message isKindOfClass:[ACPusherActor_ForceAck class]]) {
    if ([((JavaUtilHashSet *) nil_chk(confirm_)) size] == 0) {
      return;
    }
    
#line 138
    ACMessageAck *messageAck = ACPusherActor_buildAck(self);
    ACPusherActor_doSendWithACProtoMessage_(self, new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [((ACMessageAck *) nil_chk(messageAck)) toByteArray]));
  }
  else
#line 140
  if ([message isKindOfClass:[ACPusherActor_NewSession class]]) {
    ACPusherActor_NewSession *newSession = (ACPusherActor_NewSession *) check_class_cast(message, [ACPusherActor_NewSession class]);
    
#line 143
    ARLog_wWithNSString_withNSString_(ACPusherActor_TAG_, @"Received NewSessionCreated");
    
#line 146
    [((JavaUtilHashSet *) nil_chk(pendingConfirm_)) clear];
    [((JavaUtilHashSet *) nil_chk(confirm_)) clear];
    
#line 150
    JavaUtilArrayList *toSend = new_JavaUtilArrayList_init();
    for (ACProtoMessage * __strong unsentPackage in nil_chk([((JavaUtilHashMap *) nil_chk(unsentPackages_)) values])) {
      if ([((ACProtoMessage *) nil_chk(unsentPackage)) getMessageId] < [((ACPusherActor_NewSession *) nil_chk(newSession)) getMessageId]) {
        if (isEnableLog_) {
          ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$J", @"ReSending #", [unsentPackage getMessageId]));
        }
        [toSend addWithId:unsentPackage];
      }
    }
    
#line 160
    ACPusherActor_doSendWithJavaUtilList_(self, toSend);
  }
  else
#line 161
  if ([message isKindOfClass:[ACPusherActor_ReadPackageFromConnection class]]) {
    
#line 163
    if ([((JavaUtilHashSet *) nil_chk(pendingConfirm_)) size] > 0) {
      [pendingConfirm_ clear];
    }
  }
}


#line 169
- (ACMessageAck *)buildAck {
  return ACPusherActor_buildAck(self);
}


#line 192
- (void)doSendWithJavaUtilList:(id<JavaUtilList>)items {
  ACPusherActor_doSendWithJavaUtilList_(self, items);
}


#line 225
- (void)doSendWithACProtoMessage:(ACProtoMessage *)message {
  ACPusherActor_doSendWithACProtoMessage_(self, message);
}


#line 235
- (void)performSendWithACProtoMessage:(ACProtoMessage *)message {
  ACPusherActor_performSendWithACProtoMessage_(self, message);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "senderActorWithACMTProto:", "senderActor", "Lim.actor.runtime.actors.ActorRef;", 0x9, NULL, NULL },
    { "initWithACMTProto:", "PusherActor", NULL, 0x1, NULL, NULL },
    { "preStart", NULL, "V", 0x1, NULL, NULL },
    { "postStop", NULL, "V", 0x1, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
    { "buildAck", NULL, "Lim.actor.core.network.mtp.entity.MessageAck;", 0x2, NULL, NULL },
    { "doSendWithJavaUtilList:", "doSend", "V", 0x2, NULL, NULL },
    { "doSendWithACProtoMessage:", "doSend", "V", 0x2, NULL, NULL },
    { "performSendWithACProtoMessage:", "performSend", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_", NULL, 0x1a, "Ljava.lang.String;", &ACPusherActor_TAG_, NULL, .constantValue.asLong = 0 },
    { "ACK_THRESHOLD", "ACK_THRESHOLD", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACPusherActor_ACK_THRESHOLD },
    { "ACK_DELAY", "ACK_DELAY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACPusherActor_ACK_DELAY },
    { "MAX_WORKLOAD_SIZE", "MAX_WORKLOAD_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ACPusherActor_MAX_WORKLOAD_SIZE },
    { "isEnableLog_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "proto_", NULL, 0x2, "Lim.actor.core.network.mtp.MTProto;", NULL, NULL, .constantValue.asLong = 0 },
    { "manager_", NULL, 0x2, "Lim.actor.runtime.actors.ActorRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "unsentPackages_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Long;Lim/actor/core/network/mtp/entity/ProtoMessage;>;", .constantValue.asLong = 0 },
    { "confirm_", NULL, 0x2, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "pendingConfirm_", NULL, 0x2, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.core.network.mtp.actors.PusherActor$SendMessage;", "Lim.actor.core.network.mtp.actors.PusherActor$ForgetMessage;", "Lim.actor.core.network.mtp.actors.PusherActor$ConfirmMessage;", "Lim.actor.core.network.mtp.actors.PusherActor$ConnectionCreated;", "Lim.actor.core.network.mtp.actors.PusherActor$ReadPackageFromConnection;", "Lim.actor.core.network.mtp.actors.PusherActor$NewSession;", "Lim.actor.core.network.mtp.actors.PusherActor$SessionLost;", "Lim.actor.core.network.mtp.actors.PusherActor$ForceAck;", "Lim.actor.core.network.mtp.actors.PusherActor$StopActor;"};
  static const J2ObjcClassInfo _ACPusherActor = { 2, "PusherActor", "im.actor.core.network.mtp.actors", NULL, 0x1, 9, methods, 10, fields, 0, NULL, 9, inner_classes, NULL, NULL };
  return &_ACPusherActor;
}

@end


#line 30
ARActorRef *ACPusherActor_senderActorWithACMTProto_(ACMTProto *proto) {
  ACPusherActor_initialize();
  
#line 31
  return [((ARActorSystem *) nil_chk(ARActorSystem_system())) actorOfWithARActorSelection:new_ARActorSelection_initWithARProps_withNSString_([((ARProps *) nil_chk(ARProps_createWithIOSClass_withARActorCreator_(ACPusherActor_class_(), new_ACPusherActor_$1_initWithACMTProto_(proto)))) changeDispatcherWithNSString:
#line 36
  @"network"], JreStrcat("$$", [((ACMTProto *) nil_chk(proto)) getActorPath], @"/sender"))];
}


#line 52
void ACPusherActor_initWithACMTProto_(ACPusherActor *self, ACMTProto *proto) {
  (void) ARActor_init(self);
  
#line 53
  self->proto_ = proto;
  self->isEnableLog_ = [((ACMTProto *) nil_chk(proto)) isEnableLog];
  self->unsentPackages_ = new_JavaUtilHashMap_init();
  self->pendingConfirm_ = new_JavaUtilHashSet_init();
  self->confirm_ = new_JavaUtilHashSet_init();
}


#line 52
ACPusherActor *new_ACPusherActor_initWithACMTProto_(ACMTProto *proto) {
  ACPusherActor *self = [ACPusherActor alloc];
  ACPusherActor_initWithACMTProto_(self, proto);
  return self;
}


#line 169
ACMessageAck *ACPusherActor_buildAck(ACPusherActor *self) {
  IOSLongArray *ids = [IOSLongArray newArrayWithLength:[((JavaUtilHashSet *) nil_chk(self->confirm_)) size]];
  IOSObjectArray *ids2 = [self->confirm_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[self->confirm_ size] type:JavaLangLong_class_()]];
  
#line 173
  NSString *acks = @"";
  for (jint i = 0; i < ids->size_; i++) {
    *IOSLongArray_GetRef(ids, i) = [((JavaLangLong *) nil_chk(IOSObjectArray_Get(nil_chk(ids2), i))) longLongValue];
    if (self->isEnableLog_) {
      if (((jint) [acks length]) != 0) {
        (void) JreStrAppendStrong(&acks, "$", @",");
      }
      (void) JreStrAppendStrong(&acks, "C@", '#', IOSObjectArray_Get(ids2, i));
    }
  }
  if (self->isEnableLog_) {
    ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, JreStrcat("$$", @"Sending acks ", acks));
  }
  
#line 187
  [((JavaUtilHashSet *) nil_chk(self->pendingConfirm_)) addAllWithJavaUtilCollection:self->confirm_];
  [self->confirm_ clear];
  return new_ACMessageAck_initWithLongArray_(ids);
}


#line 192
void ACPusherActor_doSendWithJavaUtilList_(ACPusherActor *self, id<JavaUtilList> items) {
  if ([((id<JavaUtilList>) nil_chk(items)) size] > 0) {
    if ([((JavaUtilHashSet *) nil_chk(self->confirm_)) size] > 0) {
      if (self->isEnableLog_) {
        ARLog_dWithNSString_withNSString_(ACPusherActor_TAG_, @"Sending acks in package");
      }
      [items addWithInt:0 withId:new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [((ACMessageAck *) nil_chk(ACPusherActor_buildAck(self))) toByteArray])];
    }
  }
  if ([items size] == 1) {
    ACPusherActor_doSendWithACProtoMessage_(self, [items getWithInt:0]);
  }
  else
#line 203
  if ([items size] > 1) {
    JavaUtilArrayList *messages = new_JavaUtilArrayList_init();
    jint currentPayload = 0;
    for (jint i = 0; i < [items size]; i++) {
      ACProtoMessage *message = [items getWithInt:i];
      currentPayload += ((IOSByteArray *) nil_chk([((ACProtoMessage *) nil_chk(message)) getPayload]))->size_;
      [messages addWithId:message];
      if (currentPayload > ACPusherActor_MAX_WORKLOAD_SIZE) {
        ACContainer *container = new_ACContainer_initWithACProtoMessageArray_([messages toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[messages size] type:ACProtoMessage_class_()]]);
        ACPusherActor_performSendWithACProtoMessage_(self, new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [container toByteArray]));
        
#line 214
        [messages clear];
        currentPayload = 0;
      }
    }
    if ([messages size] > 0) {
      ACContainer *container = new_ACContainer_initWithACProtoMessageArray_([messages toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[messages size] type:ACProtoMessage_class_()]]);
      ACPusherActor_performSendWithACProtoMessage_(self, new_ACProtoMessage_initWithLong_withByteArray_(ACMTUids_nextId(), [container toByteArray]));
    }
  }
}


#line 225
void ACPusherActor_doSendWithACProtoMessage_(ACPusherActor *self, ACProtoMessage *message) {
  if ([((JavaUtilHashSet *) nil_chk(self->confirm_)) size] > 0) {
    JavaUtilArrayList *mtpMessages = new_JavaUtilArrayList_init();
    [mtpMessages addWithId:message];
    ACPusherActor_doSendWithJavaUtilList_(self, mtpMessages);
  }
  else {
    
#line 231
    ACPusherActor_performSendWithACProtoMessage_(self, message);
  }
}


#line 235
void ACPusherActor_performSendWithACProtoMessage_(ACPusherActor *self, ACProtoMessage *message) {
  IOSByteArray *data = [((ACProtoMessage *) nil_chk(message)) toByteArray];
  [((ARActorRef *) nil_chk(self->manager_)) sendWithId:new_ACManagerActor_OutMessage_initWithByteArray_withInt_withInt_(data, 0, ((IOSByteArray *) nil_chk(data))->size_)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 240
@implementation ACPusherActor_SendMessage


#line 244
- (instancetype)initWithLong:(jlong)rid
               withByteArray:(IOSByteArray *)message {
  ACPusherActor_SendMessage_initWithLong_withByteArray_(self, rid, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withByteArray:", "SendMessage", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPusherActor_SendMessage = { 2, "SendMessage", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_SendMessage;
}

@end


#line 244
void ACPusherActor_SendMessage_initWithLong_withByteArray_(ACPusherActor_SendMessage *self, jlong rid, IOSByteArray *message) {
  (void) NSObject_init(self);
  
#line 245
  self->mid_ = rid;
  self->message_ = message;
}


#line 244
ACPusherActor_SendMessage *new_ACPusherActor_SendMessage_initWithLong_withByteArray_(jlong rid, IOSByteArray *message) {
  ACPusherActor_SendMessage *self = [ACPusherActor_SendMessage alloc];
  ACPusherActor_SendMessage_initWithLong_withByteArray_(self, rid, message);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_SendMessage)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 250
@implementation ACPusherActor_ForgetMessage


#line 253
- (instancetype)initWithLong:(jlong)rid {
  ACPusherActor_ForgetMessage_initWithLong_(self, rid);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "ForgetMessage", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPusherActor_ForgetMessage = { 2, "ForgetMessage", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_ForgetMessage;
}

@end


#line 253
void ACPusherActor_ForgetMessage_initWithLong_(ACPusherActor_ForgetMessage *self, jlong rid) {
  (void) NSObject_init(self);
  
#line 254
  self->mid_ = rid;
}


#line 253
ACPusherActor_ForgetMessage *new_ACPusherActor_ForgetMessage_initWithLong_(jlong rid) {
  ACPusherActor_ForgetMessage *self = [ACPusherActor_ForgetMessage alloc];
  ACPusherActor_ForgetMessage_initWithLong_(self, rid);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_ForgetMessage)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 258
@implementation ACPusherActor_ConfirmMessage


#line 261
- (instancetype)initWithLong:(jlong)rid {
  ACPusherActor_ConfirmMessage_initWithLong_(self, rid);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "ConfirmMessage", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPusherActor_ConfirmMessage = { 2, "ConfirmMessage", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_ConfirmMessage;
}

@end


#line 261
void ACPusherActor_ConfirmMessage_initWithLong_(ACPusherActor_ConfirmMessage *self, jlong rid) {
  (void) NSObject_init(self);
  
#line 262
  self->mid_ = rid;
}


#line 261
ACPusherActor_ConfirmMessage *new_ACPusherActor_ConfirmMessage_initWithLong_(jlong rid) {
  ACPusherActor_ConfirmMessage *self = [ACPusherActor_ConfirmMessage alloc];
  ACPusherActor_ConfirmMessage_initWithLong_(self, rid);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_ConfirmMessage)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 266
@implementation ACPusherActor_ConnectionCreated

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACPusherActor_ConnectionCreated_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACPusherActor_ConnectionCreated = { 2, "ConnectionCreated", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_ConnectionCreated;
}

@end

void ACPusherActor_ConnectionCreated_init(ACPusherActor_ConnectionCreated *self) {
  (void) NSObject_init(self);
}

ACPusherActor_ConnectionCreated *new_ACPusherActor_ConnectionCreated_init() {
  ACPusherActor_ConnectionCreated *self = [ACPusherActor_ConnectionCreated alloc];
  ACPusherActor_ConnectionCreated_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_ConnectionCreated)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 270
@implementation ACPusherActor_ReadPackageFromConnection

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACPusherActor_ReadPackageFromConnection_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACPusherActor_ReadPackageFromConnection = { 2, "ReadPackageFromConnection", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_ReadPackageFromConnection;
}

@end

void ACPusherActor_ReadPackageFromConnection_init(ACPusherActor_ReadPackageFromConnection *self) {
  (void) NSObject_init(self);
}

ACPusherActor_ReadPackageFromConnection *new_ACPusherActor_ReadPackageFromConnection_init() {
  ACPusherActor_ReadPackageFromConnection *self = [ACPusherActor_ReadPackageFromConnection alloc];
  ACPusherActor_ReadPackageFromConnection_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_ReadPackageFromConnection)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 274
@implementation ACPusherActor_NewSession


#line 277
- (instancetype)initWithLong:(jlong)messageId {
  ACPusherActor_NewSession_initWithLong_(self, messageId);
  return self;
}


#line 281
- (jlong)getMessageId {
  return messageId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "NewSession", NULL, 0x1, NULL, NULL },
    { "getMessageId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messageId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACPusherActor_NewSession = { 2, "NewSession", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_NewSession;
}

@end


#line 277
void ACPusherActor_NewSession_initWithLong_(ACPusherActor_NewSession *self, jlong messageId) {
  (void) NSObject_init(self);
  
#line 278
  self->messageId_ = messageId;
}


#line 277
ACPusherActor_NewSession *new_ACPusherActor_NewSession_initWithLong_(jlong messageId) {
  ACPusherActor_NewSession *self = [ACPusherActor_NewSession alloc];
  ACPusherActor_NewSession_initWithLong_(self, messageId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_NewSession)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 286
@implementation ACPusherActor_SessionLost

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACPusherActor_SessionLost_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACPusherActor_SessionLost = { 2, "SessionLost", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_SessionLost;
}

@end

void ACPusherActor_SessionLost_init(ACPusherActor_SessionLost *self) {
  (void) NSObject_init(self);
}

ACPusherActor_SessionLost *new_ACPusherActor_SessionLost_init() {
  ACPusherActor_SessionLost *self = [ACPusherActor_SessionLost alloc];
  ACPusherActor_SessionLost_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_SessionLost)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 290
@implementation ACPusherActor_ForceAck

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACPusherActor_ForceAck_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACPusherActor_ForceAck = { 2, "ForceAck", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_ForceAck;
}

@end

void ACPusherActor_ForceAck_init(ACPusherActor_ForceAck *self) {
  (void) NSObject_init(self);
}

ACPusherActor_ForceAck *new_ACPusherActor_ForceAck_init() {
  ACPusherActor_ForceAck *self = [ACPusherActor_ForceAck alloc];
  ACPusherActor_ForceAck_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_ForceAck)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"


#line 294
@implementation ACPusherActor_StopActor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACPusherActor_StopActor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACPusherActor_StopActor = { 2, "StopActor", "im.actor.core.network.mtp.actors", "PusherActor", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACPusherActor_StopActor;
}

@end

void ACPusherActor_StopActor_init(ACPusherActor_StopActor *self) {
  (void) NSObject_init(self);
}

ACPusherActor_StopActor *new_ACPusherActor_StopActor_init() {
  ACPusherActor_StopActor *self = [ACPusherActor_StopActor alloc];
  ACPusherActor_StopActor_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_StopActor)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/mtp/actors/PusherActor.java"

@implementation ACPusherActor_$1


#line 33
- (ACPusherActor *)create {
  return new_ACPusherActor_initWithACMTProto_(val$proto_);
}

- (instancetype)initWithACMTProto:(ACMTProto *)capture$0 {
  ACPusherActor_$1_initWithACMTProto_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Lim.actor.core.network.mtp.actors.PusherActor;", 0x1, NULL, NULL },
    { "initWithACMTProto:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$proto_", NULL, 0x1012, "Lim.actor.core.network.mtp.MTProto;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACPusherActor", "senderActorWithACMTProto:" };
  static const J2ObjcClassInfo _ACPusherActor_$1 = { 2, "", "im.actor.core.network.mtp.actors", "PusherActor", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lim/actor/runtime/actors/ActorCreator<Lim/actor/core/network/mtp/actors/PusherActor;>;" };
  return &_ACPusherActor_$1;
}

@end

void ACPusherActor_$1_initWithACMTProto_(ACPusherActor_$1 *self, ACMTProto *capture$0) {
  self->val$proto_ = capture$0;
  (void) NSObject_init(self);
}

ACPusherActor_$1 *new_ACPusherActor_$1_initWithACMTProto_(ACMTProto *capture$0) {
  ACPusherActor_$1 *self = [ACPusherActor_$1 alloc];
  ACPusherActor_$1_initWithACMTProto_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACPusherActor_$1)

#pragma clang diagnostic pop
