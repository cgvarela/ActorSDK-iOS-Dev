//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/modules/utils/RandomUtils.h"
#include "im/actor/core/network/ActorApiCallback.h"
#include "im/actor/core/network/AuthKeyStorage.h"
#include "im/actor/core/network/Endpoints.h"
#include "im/actor/core/network/NetworkState.h"
#include "im/actor/core/network/RpcCallback.h"
#include "im/actor/core/network/RpcException.h"
#include "im/actor/core/network/RpcInternalException.h"
#include "im/actor/core/network/api/ApiBroker.h"
#include "im/actor/core/network/mtp/AuthIdRetriever.h"
#include "im/actor/core/network/mtp/MTProto.h"
#include "im/actor/core/network/mtp/MTProtoCallback.h"
#include "im/actor/core/network/mtp/entity/ProtoSerializer.h"
#include "im/actor/core/network/mtp/entity/ProtoStruct.h"
#include "im/actor/core/network/mtp/entity/rpc/Push.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcError.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcFloodWait.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcInternalError.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcOk.h"
#include "im/actor/core/network/mtp/entity/rpc/RpcRequest.h"
#include "im/actor/core/network/parser/ApiParserConfig.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/core/network/parser/RpcScope.h"
#include "im/actor/core/util/ExponentialBackoff.h"
#include "im/actor/runtime/Log.h"
#include "im/actor/runtime/Runtime.h"
#include "im/actor/runtime/actors/Actor.h"
#include "im/actor/runtime/actors/ActorCreator.h"
#include "im/actor/runtime/actors/ActorRef.h"
#include "im/actor/runtime/actors/ActorSystem.h"
#include "im/actor/runtime/actors/Props.h"
#include "im/actor/runtime/threading/AtomicIntegerCompat.h"
#include "im/actor/runtime/threading/AtomicLongCompat.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACApiBroker () {
 @public
  ACEndpoints *endpoints_;
  id<ACAuthKeyStorage> keyStorage_;
  id<ACActorApiCallback> callback_;
  jboolean isEnableLog_;
  jint minDelay_;
  jint maxDelay_;
  jint maxFailureCount_;
  JavaUtilHashMap *requests_;
  JavaUtilHashMap *idMap_;
  jlong currentAuthId_;
  ACMTProto *proto_;
  ACExponentialBackoff *authIdBackOff_;
  ACApiParserConfig *parserConfig_;
}

- (void)onNetworkChangedWithACNetworkStateEnum:(ACNetworkStateEnum *)state;

- (void)forceNetworkCheck;

- (void)onNewSessionCreatedWithLong:(jlong)authId;

- (void)onAuthIdInvalidatedWithLong:(jlong)authId;

- (void)requestAuthId;

- (void)createMtProtoWithLong:(jlong)key;

- (void)performRequestWithLong:(jlong)randomId
                 withACRequest:(ACRequest *)message
             withACRpcCallback:(id<ACRpcCallback>)callback;

- (void)processResponseWithLong:(jlong)authId
                       withLong:(jlong)mid
                  withByteArray:(IOSByteArray *)content;

- (void)forceResendWithLong:(jlong)randomId;

- (void)cancelRequestWithLong:(jlong)randomId;

- (void)processUpdateWithLong:(jlong)authId
                withByteArray:(IOSByteArray *)content;

@end

J2OBJC_FIELD_SETTER(ACApiBroker, endpoints_, ACEndpoints *)
J2OBJC_FIELD_SETTER(ACApiBroker, keyStorage_, id<ACAuthKeyStorage>)
J2OBJC_FIELD_SETTER(ACApiBroker, callback_, id<ACActorApiCallback>)
J2OBJC_FIELD_SETTER(ACApiBroker, requests_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACApiBroker, idMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ACApiBroker, proto_, ACMTProto *)
J2OBJC_FIELD_SETTER(ACApiBroker, authIdBackOff_, ACExponentialBackoff *)
J2OBJC_FIELD_SETTER(ACApiBroker, parserConfig_, ACApiParserConfig *)

static NSString *ACApiBroker_TAG_ = @"ApiBroker";
J2OBJC_STATIC_FIELD_GETTER(ACApiBroker, TAG_, NSString *)

static ARAtomicLongCompat *ACApiBroker_NEXT_RPC_ID_;
J2OBJC_STATIC_FIELD_GETTER(ACApiBroker, NEXT_RPC_ID_, ARAtomicLongCompat *)

static ARAtomicIntegerCompat *ACApiBroker_NEXT_PROTO_ID_;
J2OBJC_STATIC_FIELD_GETTER(ACApiBroker, NEXT_PROTO_ID_, ARAtomicIntegerCompat *)

__attribute__((unused)) static void ACApiBroker_onNetworkChangedWithACNetworkStateEnum_(ACApiBroker *self, ACNetworkStateEnum *state);

__attribute__((unused)) static void ACApiBroker_forceNetworkCheck(ACApiBroker *self);

__attribute__((unused)) static void ACApiBroker_onNewSessionCreatedWithLong_(ACApiBroker *self, jlong authId);

__attribute__((unused)) static void ACApiBroker_onAuthIdInvalidatedWithLong_(ACApiBroker *self, jlong authId);

__attribute__((unused)) static void ACApiBroker_requestAuthId(ACApiBroker *self);

__attribute__((unused)) static void ACApiBroker_createMtProtoWithLong_(ACApiBroker *self, jlong key);

__attribute__((unused)) static void ACApiBroker_performRequestWithLong_withACRequest_withACRpcCallback_(ACApiBroker *self, jlong randomId, ACRequest *message, id<ACRpcCallback> callback);

__attribute__((unused)) static void ACApiBroker_processResponseWithLong_withLong_withByteArray_(ACApiBroker *self, jlong authId, jlong mid, IOSByteArray *content);

__attribute__((unused)) static void ACApiBroker_forceResendWithLong_(ACApiBroker *self, jlong randomId);

__attribute__((unused)) static void ACApiBroker_cancelRequestWithLong_(ACApiBroker *self, jlong randomId);

__attribute__((unused)) static void ACApiBroker_processUpdateWithLong_withByteArray_(ACApiBroker *self, jlong authId, IOSByteArray *content);

@interface ACApiBroker_PerformRequest () {
 @public
  ACRequest *message_;
  id<ACRpcCallback> callback_;
}

@end

J2OBJC_FIELD_SETTER(ACApiBroker_PerformRequest, message_, ACRequest *)
J2OBJC_FIELD_SETTER(ACApiBroker_PerformRequest, callback_, id<ACRpcCallback>)

@interface ACApiBroker_CancelRequest () {
 @public
  jlong randomId_;
}

@end

@interface ACApiBroker_NetworkChanged () {
 @public
  ACNetworkStateEnum *state_;
}

@end

J2OBJC_FIELD_SETTER(ACApiBroker_NetworkChanged, state_, ACNetworkStateEnum *)

@interface ACApiBroker_RequestAuthId : NSObject

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_RequestAuthId)

__attribute__((unused)) static void ACApiBroker_RequestAuthId_initWithACApiBroker_(ACApiBroker_RequestAuthId *self, ACApiBroker *outer$);

__attribute__((unused)) static ACApiBroker_RequestAuthId *new_ACApiBroker_RequestAuthId_initWithACApiBroker_(ACApiBroker *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_RequestAuthId)

@interface ACApiBroker_InitMTProto : NSObject {
 @public
  jlong authId_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId;

- (jlong)getAuthId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_InitMTProto)

__attribute__((unused)) static void ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(ACApiBroker_InitMTProto *self, ACApiBroker *outer$, jlong authId);

__attribute__((unused)) static ACApiBroker_InitMTProto *new_ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_InitMTProto)

@interface ACApiBroker_ProtoResponse : NSObject {
 @public
  jlong authId_;
  jlong responseId_;
  IOSByteArray *data_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId
                           withLong:(jlong)responseId
                      withByteArray:(IOSByteArray *)data;

- (jlong)getAuthId;

- (jlong)getResponseId;

- (IOSByteArray *)getData;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ProtoResponse)

J2OBJC_FIELD_SETTER(ACApiBroker_ProtoResponse, data_, IOSByteArray *)

__attribute__((unused)) static void ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(ACApiBroker_ProtoResponse *self, ACApiBroker *outer$, jlong authId, jlong responseId, IOSByteArray *data);

__attribute__((unused)) static ACApiBroker_ProtoResponse *new_ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(ACApiBroker *outer$, jlong authId, jlong responseId, IOSByteArray *data) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ProtoResponse)

@interface ACApiBroker_ProtoUpdate : NSObject {
 @public
  jlong authId_;
  IOSByteArray *data_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId
                      withByteArray:(IOSByteArray *)data;

- (jlong)getAuthId;

- (IOSByteArray *)getData;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ProtoUpdate)

J2OBJC_FIELD_SETTER(ACApiBroker_ProtoUpdate, data_, IOSByteArray *)

__attribute__((unused)) static void ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(ACApiBroker_ProtoUpdate *self, ACApiBroker *outer$, jlong authId, IOSByteArray *data);

__attribute__((unused)) static ACApiBroker_ProtoUpdate *new_ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(ACApiBroker *outer$, jlong authId, IOSByteArray *data) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ProtoUpdate)

@interface ACApiBroker_ForceResend : NSObject {
 @public
  jlong id__;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)id_;

- (jlong)getId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ForceResend)

__attribute__((unused)) static void ACApiBroker_ForceResend_initWithACApiBroker_withLong_(ACApiBroker_ForceResend *self, ACApiBroker *outer$, jlong id_);

__attribute__((unused)) static ACApiBroker_ForceResend *new_ACApiBroker_ForceResend_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong id_) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ForceResend)

@interface ACApiBroker_RequestHolder : NSObject {
 @public
  jlong requestTime_;
  ACRpcRequest *message_;
  jlong publicId_;
  id<ACRpcCallback> callback_;
  jlong protoId_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)requestTime
                           withLong:(jlong)publicId
                   withACRpcRequest:(ACRpcRequest *)message
                  withACRpcCallback:(id<ACRpcCallback>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_RequestHolder)

J2OBJC_FIELD_SETTER(ACApiBroker_RequestHolder, message_, ACRpcRequest *)
J2OBJC_FIELD_SETTER(ACApiBroker_RequestHolder, callback_, id<ACRpcCallback>)

__attribute__((unused)) static void ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(ACApiBroker_RequestHolder *self, ACApiBroker *outer$, jlong requestTime, jlong publicId, ACRpcRequest *message, id<ACRpcCallback> callback);

__attribute__((unused)) static ACApiBroker_RequestHolder *new_ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(ACApiBroker *outer$, jlong requestTime, jlong publicId, ACRpcRequest *message, id<ACRpcCallback> callback) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_RequestHolder)

@interface ACApiBroker_NewSessionCreated : NSObject {
 @public
  jlong authId_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId;

- (jlong)getAuthId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_NewSessionCreated)

__attribute__((unused)) static void ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(ACApiBroker_NewSessionCreated *self, ACApiBroker *outer$, jlong authId);

__attribute__((unused)) static ACApiBroker_NewSessionCreated *new_ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_NewSessionCreated)

@interface ACApiBroker_AuthIdInvalidated : NSObject {
 @public
  jlong authId_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId;

- (jlong)getAuthId;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_AuthIdInvalidated)

__attribute__((unused)) static void ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(ACApiBroker_AuthIdInvalidated *self, ACApiBroker *outer$, jlong authId);

__attribute__((unused)) static ACApiBroker_AuthIdInvalidated *new_ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_AuthIdInvalidated)

@interface ACApiBroker_ConnectionsCountChanged : NSObject {
 @public
  jint count_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                            withInt:(jint)count;

- (jint)getCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ConnectionsCountChanged)

__attribute__((unused)) static void ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(ACApiBroker_ConnectionsCountChanged *self, ACApiBroker *outer$, jint count);

__attribute__((unused)) static ACApiBroker_ConnectionsCountChanged *new_ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(ACApiBroker *outer$, jint count) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ConnectionsCountChanged)

@interface ACApiBroker_ProtoCallback : NSObject < ACMTProtoCallback > {
 @public
  ACApiBroker *this$0_;
  jlong authId_;
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId;

- (void)onRpcResponseWithLong:(jlong)mid
                withByteArray:(IOSByteArray *)content;

- (void)onUpdateWithByteArray:(IOSByteArray *)content;

- (void)onAuthKeyInvalidatedWithLong:(jlong)authId;

- (void)onSessionCreated;

- (void)onConnectionsCountChangedWithInt:(jint)count;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_ProtoCallback)

J2OBJC_FIELD_SETTER(ACApiBroker_ProtoCallback, this$0_, ACApiBroker *)

__attribute__((unused)) static void ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(ACApiBroker_ProtoCallback *self, ACApiBroker *outer$, jlong authId);

__attribute__((unused)) static ACApiBroker_ProtoCallback *new_ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_ProtoCallback)

@interface ACApiBroker_$1 : NSObject < ARActorCreator > {
 @public
  ACEndpoints *val$endpoints_;
  id<ACAuthKeyStorage> val$keyStorage_;
  id<ACActorApiCallback> val$callback_;
  jboolean val$isEnableLog_;
  jint val$minDelay_;
  jint val$maxDelay_;
  jint val$maxFailureCount_;
  ACApiParserConfig *val$parserConfig_;
}

- (ACApiBroker *)create;

- (instancetype)initWithACEndpoints:(ACEndpoints *)capture$0
               withACAuthKeyStorage:(id<ACAuthKeyStorage>)capture$1
             withACActorApiCallback:(id<ACActorApiCallback>)capture$2
                        withBoolean:(jboolean)capture$3
                            withInt:(jint)capture$4
                            withInt:(jint)capture$5
                            withInt:(jint)capture$6
              withACApiParserConfig:(ACApiParserConfig *)capture$7;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_$1)

J2OBJC_FIELD_SETTER(ACApiBroker_$1, val$endpoints_, ACEndpoints *)
J2OBJC_FIELD_SETTER(ACApiBroker_$1, val$keyStorage_, id<ACAuthKeyStorage>)
J2OBJC_FIELD_SETTER(ACApiBroker_$1, val$callback_, id<ACActorApiCallback>)
J2OBJC_FIELD_SETTER(ACApiBroker_$1, val$parserConfig_, ACApiParserConfig *)

__attribute__((unused)) static void ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACApiBroker_$1 *self, ACEndpoints *capture$0, id<ACAuthKeyStorage> capture$1, id<ACActorApiCallback> capture$2, jboolean capture$3, jint capture$4, jint capture$5, jint capture$6, ACApiParserConfig *capture$7);

__attribute__((unused)) static ACApiBroker_$1 *new_ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *capture$0, id<ACAuthKeyStorage> capture$1, id<ACActorApiCallback> capture$2, jboolean capture$3, jint capture$4, jint capture$5, jint capture$6, ACApiParserConfig *capture$7) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_$1)

@interface ACApiBroker_$2 : NSObject < ACAuthIdRetriever_AuthIdCallback > {
 @public
  ACApiBroker *this$0_;
}

- (void)onSuccessWithLong:(jlong)authId;

- (void)onFailure;

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ACApiBroker_$2)

J2OBJC_FIELD_SETTER(ACApiBroker_$2, this$0_, ACApiBroker *)

__attribute__((unused)) static void ACApiBroker_$2_initWithACApiBroker_(ACApiBroker_$2 *self, ACApiBroker *outer$);

__attribute__((unused)) static ACApiBroker_$2 *new_ACApiBroker_$2_initWithACApiBroker_(ACApiBroker *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACApiBroker_$2)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"

J2OBJC_INITIALIZED_DEFN(ACApiBroker)


#line 45
@implementation ACApiBroker

+ (ARActorRef *)getWithACEndpoints:(ACEndpoints *)endpoints
              withACAuthKeyStorage:(id<ACAuthKeyStorage>)keyStorage
            withACActorApiCallback:(id<ACActorApiCallback>)callback
                       withBoolean:(jboolean)isEnableLog
                           withInt:(jint)id_
                           withInt:(jint)minDelay
                           withInt:(jint)maxDelay
                           withInt:(jint)maxFailureCount
             withACApiParserConfig:(ACApiParserConfig *)parserConfig {
  return ACApiBroker_getWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withInt_withACApiParserConfig_(endpoints, keyStorage, callback, isEnableLog, id_, minDelay, maxDelay, maxFailureCount, parserConfig);
}


#line 84
- (instancetype)initWithACEndpoints:(ACEndpoints *)endpoints
               withACAuthKeyStorage:(id<ACAuthKeyStorage>)keyStorage
             withACActorApiCallback:(id<ACActorApiCallback>)callback
                        withBoolean:(jboolean)isEnableLog
                            withInt:(jint)minDelay
                            withInt:(jint)maxDelay
                            withInt:(jint)maxFailureCount
              withACApiParserConfig:(ACApiParserConfig *)parserConfig {
  ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(self, endpoints, keyStorage, callback, isEnableLog, minDelay, maxDelay, maxFailureCount, parserConfig);
  return self;
}


#line 100
- (void)preStart {
  self->currentAuthId_ = [((id<ACAuthKeyStorage>) nil_chk(keyStorage_)) getAuthKey];
  if (currentAuthId_ == 0) {
    [((ARActorRef *) nil_chk([self self__])) sendWithId:new_ACApiBroker_RequestAuthId_initWithACApiBroker_(self)];
  }
  else {
    
#line 105
    if (isEnableLog_) {
      ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J", @"Key loaded: ", currentAuthId_));
    }
    [((ARActorRef *) nil_chk([self self__])) sendWithId:new_ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(self, currentAuthId_)];
  }
}


#line 113
- (void)postStop {
  if (proto_ != nil) {
    [proto_ stopProto];
    proto_ = nil;
  }
}

- (void)onNetworkChangedWithACNetworkStateEnum:(ACNetworkStateEnum *)state {
  ACApiBroker_onNetworkChangedWithACNetworkStateEnum_(self, state);
}


#line 126
- (void)forceNetworkCheck {
  ACApiBroker_forceNetworkCheck(self);
}


#line 132
- (void)onNewSessionCreatedWithLong:(jlong)authId {
  ACApiBroker_onNewSessionCreatedWithLong_(self, authId);
}


#line 142
- (void)onAuthIdInvalidatedWithLong:(jlong)authId {
  ACApiBroker_onAuthIdInvalidatedWithLong_(self, authId);
}


#line 158
- (void)requestAuthId {
  ACApiBroker_requestAuthId(self);
}


#line 179
- (void)createMtProtoWithLong:(jlong)key {
  ACApiBroker_createMtProtoWithLong_(self, key);
}


#line 201
- (void)performRequestWithLong:(jlong)randomId
                 withACRequest:(ACRequest *)message
             withACRpcCallback:(id<ACRpcCallback>)callback {
  ACApiBroker_performRequestWithLong_withACRequest_withACRpcCallback_(self, randomId, message, callback);
}


#line 219
- (void)processResponseWithLong:(jlong)authId
                       withLong:(jlong)mid
                  withByteArray:(IOSByteArray *)content {
  ACApiBroker_processResponseWithLong_withLong_withByteArray_(self, authId, mid, content);
}


#line 303
- (void)forceResendWithLong:(jlong)randomId {
  ACApiBroker_forceResendWithLong_(self, randomId);
}


#line 316
- (void)cancelRequestWithLong:(jlong)randomId {
  ACApiBroker_cancelRequestWithLong_(self, randomId);
}


#line 327
- (void)processUpdateWithLong:(jlong)authId
                withByteArray:(IOSByteArray *)content {
  ACApiBroker_processUpdateWithLong_withByteArray_(self, authId, content);
}


#line 358
- (void)connectionCountChangedWithInt:(jint)count {
  [((id<ACActorApiCallback>) nil_chk(callback_)) onConnectionsChanged:count];
}


#line 572
- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ACApiBroker_RequestAuthId class]]) {
    ACApiBroker_requestAuthId(self);
  }
  else
#line 575
  if ([message isKindOfClass:[ACApiBroker_InitMTProto class]]) {
    ACApiBroker_InitMTProto *initMTProto = (ACApiBroker_InitMTProto *) check_class_cast(message, [ACApiBroker_InitMTProto class]);
    ACApiBroker_createMtProtoWithLong_(self, [((ACApiBroker_InitMTProto *) nil_chk(initMTProto)) getAuthId]);
  }
  else
#line 578
  if ([message isKindOfClass:[ACApiBroker_PerformRequest class]]) {
    ACApiBroker_PerformRequest *request = (ACApiBroker_PerformRequest *) check_class_cast(message, [ACApiBroker_PerformRequest class]);
    ACApiBroker_performRequestWithLong_withACRequest_withACRpcCallback_(self, [((ARAtomicLongCompat *) nil_chk(ACApiBroker_NEXT_RPC_ID_)) getAndIncrement],
#line 581
    [((ACApiBroker_PerformRequest *) nil_chk(request)) getMessage], [request getCallback]);
  }
  else
#line 582
  if ([message isKindOfClass:[ACApiBroker_CancelRequest class]]) {
    ACApiBroker_CancelRequest *cancelRequest = (ACApiBroker_CancelRequest *) check_class_cast(message, [ACApiBroker_CancelRequest class]);
    ACApiBroker_cancelRequestWithLong_(self, [((ACApiBroker_CancelRequest *) nil_chk(cancelRequest)) getRandomId]);
  }
  else
#line 585
  if ([message isKindOfClass:[ACApiBroker_ProtoResponse class]]) {
    ACApiBroker_ProtoResponse *response = (ACApiBroker_ProtoResponse *) check_class_cast(message, [ACApiBroker_ProtoResponse class]);
    ACApiBroker_processResponseWithLong_withLong_withByteArray_(self, [((ACApiBroker_ProtoResponse *) nil_chk(response)) getAuthId], [response getResponseId], [response getData]);
  }
  else
#line 588
  if ([message isKindOfClass:[ACApiBroker_ForceResend class]]) {
    ACApiBroker_ForceResend *forceResend = (ACApiBroker_ForceResend *) check_class_cast(message, [ACApiBroker_ForceResend class]);
    ACApiBroker_forceResendWithLong_(self, [((ACApiBroker_ForceResend *) nil_chk(forceResend)) getId]);
  }
  else
#line 591
  if ([message isKindOfClass:[ACApiBroker_ProtoUpdate class]]) {
    ACApiBroker_ProtoUpdate *update = (ACApiBroker_ProtoUpdate *) check_class_cast(message, [ACApiBroker_ProtoUpdate class]);
    ACApiBroker_processUpdateWithLong_withByteArray_(self, [((ACApiBroker_ProtoUpdate *) nil_chk(update)) getAuthId], [update getData]);
  }
  else
#line 594
  if ([message isKindOfClass:[ACApiBroker_NewSessionCreated class]]) {
    ACApiBroker_NewSessionCreated *newSessionCreated = (ACApiBroker_NewSessionCreated *) check_class_cast(message, [ACApiBroker_NewSessionCreated class]);
    ACApiBroker_onNewSessionCreatedWithLong_(self, [((ACApiBroker_NewSessionCreated *) nil_chk(newSessionCreated)) getAuthId]);
  }
  else
#line 597
  if ([message isKindOfClass:[ACApiBroker_AuthIdInvalidated class]]) {
    ACApiBroker_AuthIdInvalidated *authIdInvalidated = (ACApiBroker_AuthIdInvalidated *) check_class_cast(message, [ACApiBroker_AuthIdInvalidated class]);
    ACApiBroker_onAuthIdInvalidatedWithLong_(self, [((ACApiBroker_AuthIdInvalidated *) nil_chk(authIdInvalidated)) getAuthId]);
  }
  else
#line 600
  if ([message isKindOfClass:[ACApiBroker_NetworkChanged class]]) {
    ACApiBroker_NetworkChanged *networkChanged = (ACApiBroker_NetworkChanged *) check_class_cast(message, [ACApiBroker_NetworkChanged class]);
    ACApiBroker_onNetworkChangedWithACNetworkStateEnum_(self, [((ACApiBroker_NetworkChanged *) nil_chk(networkChanged)) getState]);
  }
  else
#line 603
  if ([message isKindOfClass:[ACApiBroker_ForceNetworkCheck class]]) {
    ACApiBroker_forceNetworkCheck(self);
  }
  else
#line 605
  if ([message isKindOfClass:[ACApiBroker_ConnectionsCountChanged class]]) {
    [self connectionCountChangedWithInt:[((ACApiBroker_ConnectionsCountChanged *) nil_chk(((ACApiBroker_ConnectionsCountChanged *) check_class_cast(message, [ACApiBroker_ConnectionsCountChanged class])))) getCount]];
  }
  else {
    
#line 608
    [self dropWithId:message];
  }
}

+ (void)initialize {
  if (self == [ACApiBroker class]) {
    ACApiBroker_NEXT_RPC_ID_ = ARRuntime_createAtomicLongWithLong_(
#line 63
    1);
    ACApiBroker_NEXT_PROTO_ID_ = ARRuntime_createAtomicIntWithInt_(
#line 64
    1);
    J2OBJC_SET_INITIALIZED(ACApiBroker)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithACEndpoints:withACAuthKeyStorage:withACActorApiCallback:withBoolean:withInt:withInt:withInt:withInt:withACApiParserConfig:", "get", "Lim.actor.runtime.actors.ActorRef;", 0x9, NULL, NULL },
    { "initWithACEndpoints:withACAuthKeyStorage:withACActorApiCallback:withBoolean:withInt:withInt:withInt:withACApiParserConfig:", "ApiBroker", NULL, 0x1, NULL, NULL },
    { "preStart", NULL, "V", 0x1, NULL, NULL },
    { "postStop", NULL, "V", 0x1, NULL, NULL },
    { "onNetworkChangedWithACNetworkStateEnum:", "onNetworkChanged", "V", 0x2, NULL, NULL },
    { "forceNetworkCheck", NULL, "V", 0x2, NULL, NULL },
    { "onNewSessionCreatedWithLong:", "onNewSessionCreated", "V", 0x2, NULL, NULL },
    { "onAuthIdInvalidatedWithLong:", "onAuthIdInvalidated", "V", 0x2, NULL, NULL },
    { "requestAuthId", NULL, "V", 0x2, NULL, NULL },
    { "createMtProtoWithLong:", "createMtProto", "V", 0x2, NULL, NULL },
    { "performRequestWithLong:withACRequest:withACRpcCallback:", "performRequest", "V", 0x2, NULL, NULL },
    { "processResponseWithLong:withLong:withByteArray:", "processResponse", "V", 0x2, NULL, NULL },
    { "forceResendWithLong:", "forceResend", "V", 0x2, NULL, NULL },
    { "cancelRequestWithLong:", "cancelRequest", "V", 0x2, NULL, NULL },
    { "processUpdateWithLong:withByteArray:", "processUpdate", "V", 0x2, NULL, NULL },
    { "connectionCountChangedWithInt:", "connectionCountChanged", "V", 0x0, NULL, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_", NULL, 0x1a, "Ljava.lang.String;", &ACApiBroker_TAG_, NULL, .constantValue.asLong = 0 },
    { "NEXT_RPC_ID_", NULL, 0x1a, "Lim.actor.runtime.threading.AtomicLongCompat;", &ACApiBroker_NEXT_RPC_ID_, NULL, .constantValue.asLong = 0 },
    { "NEXT_PROTO_ID_", NULL, 0x1a, "Lim.actor.runtime.threading.AtomicIntegerCompat;", &ACApiBroker_NEXT_PROTO_ID_, NULL, .constantValue.asLong = 0 },
    { "endpoints_", NULL, 0x12, "Lim.actor.core.network.Endpoints;", NULL, NULL, .constantValue.asLong = 0 },
    { "keyStorage_", NULL, 0x12, "Lim.actor.core.network.AuthKeyStorage;", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x12, "Lim.actor.core.network.ActorApiCallback;", NULL, NULL, .constantValue.asLong = 0 },
    { "isEnableLog_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "minDelay_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDelay_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxFailureCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "requests_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Long;Lim/actor/core/network/api/ApiBroker$RequestHolder;>;", .constantValue.asLong = 0 },
    { "idMap_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Long;Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "currentAuthId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "proto_", NULL, 0x2, "Lim.actor.core.network.mtp.MTProto;", NULL, NULL, .constantValue.asLong = 0 },
    { "authIdBackOff_", NULL, 0x2, "Lim.actor.core.util.ExponentialBackoff;", NULL, NULL, .constantValue.asLong = 0 },
    { "parserConfig_", NULL, 0x2, "Lim.actor.core.network.parser.ApiParserConfig;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lim.actor.core.network.api.ApiBroker$PerformRequest;", "Lim.actor.core.network.api.ApiBroker$CancelRequest;", "Lim.actor.core.network.api.ApiBroker$NetworkChanged;", "Lim.actor.core.network.api.ApiBroker$ForceNetworkCheck;", "Lim.actor.core.network.api.ApiBroker$RequestAuthId;", "Lim.actor.core.network.api.ApiBroker$InitMTProto;", "Lim.actor.core.network.api.ApiBroker$ProtoResponse;", "Lim.actor.core.network.api.ApiBroker$ProtoUpdate;", "Lim.actor.core.network.api.ApiBroker$ForceResend;", "Lim.actor.core.network.api.ApiBroker$RequestHolder;", "Lim.actor.core.network.api.ApiBroker$NewSessionCreated;", "Lim.actor.core.network.api.ApiBroker$AuthIdInvalidated;", "Lim.actor.core.network.api.ApiBroker$ConnectionsCountChanged;", "Lim.actor.core.network.api.ApiBroker$ProtoCallback;"};
  static const J2ObjcClassInfo _ACApiBroker = { 2, "ApiBroker", "im.actor.core.network.api", NULL, 0x1, 17, methods, 16, fields, 0, NULL, 14, inner_classes, NULL, NULL };
  return &_ACApiBroker;
}

@end


#line 47
ARActorRef *ACApiBroker_getWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACActorApiCallback> callback, jboolean isEnableLog, jint id_, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig) {
  ACApiBroker_initialize();
  
#line 52
  return [((ARActorSystem *) nil_chk(ARActorSystem_system())) actorOfWithARProps:[((ARProps *) nil_chk(ARProps_createWithIOSClass_withARActorCreator_(ACApiBroker_class_(), new_ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(endpoints, keyStorage, callback, isEnableLog, minDelay, maxDelay, maxFailureCount, parserConfig)))) changeDispatcherWithNSString:
#line 59
  @"network"] withNSString:JreStrcat("$I", @"api/broker#", id_)];
}


#line 84
void ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACApiBroker *self, ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACActorApiCallback> callback, jboolean isEnableLog, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig) {
  (void) ARActor_init(self);
  self->requests_ = new_JavaUtilHashMap_init();
  self->idMap_ = new_JavaUtilHashMap_init();
  self->isEnableLog_ = isEnableLog;
  self->endpoints_ = endpoints;
  self->keyStorage_ = keyStorage;
  self->callback_ = callback;
  self->minDelay_ = minDelay;
  self->maxDelay_ = maxDelay;
  self->maxFailureCount_ = maxFailureCount;
  self->authIdBackOff_ = new_ACExponentialBackoff_initWithInt_withInt_withInt_(minDelay, maxDelay, maxFailureCount);
  self->parserConfig_ = parserConfig;
}


#line 84
ACApiBroker *new_ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *endpoints, id<ACAuthKeyStorage> keyStorage, id<ACActorApiCallback> callback, jboolean isEnableLog, jint minDelay, jint maxDelay, jint maxFailureCount, ACApiParserConfig *parserConfig) {
  ACApiBroker *self = [ACApiBroker alloc];
  ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(self, endpoints, keyStorage, callback, isEnableLog, minDelay, maxDelay, maxFailureCount, parserConfig);
  return self;
}


#line 120
void ACApiBroker_onNetworkChangedWithACNetworkStateEnum_(ACApiBroker *self, ACNetworkStateEnum *state) {
  if (self->proto_ != nil) {
    [self->proto_ onNetworkChangedWithACNetworkStateEnum:state];
  }
}

void ACApiBroker_forceNetworkCheck(ACApiBroker *self) {
  if (self->proto_ != nil) {
    [self->proto_ forceNetworkCheck];
  }
}

void ACApiBroker_onNewSessionCreatedWithLong_(ACApiBroker *self, jlong authId) {
  if (authId != self->currentAuthId_) {
    return;
  }
  
#line 137
  ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, @"New Session Created");
  
#line 139
  [((id<ACActorApiCallback>) nil_chk(self->callback_)) onNewSessionCreated];
}


#line 142
void ACApiBroker_onAuthIdInvalidatedWithLong_(ACApiBroker *self, jlong authId) {
  if (authId != self->currentAuthId_) {
    return;
  }
  
#line 147
  ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, @"Auth id invalidated");
  
#line 149
  [((id<ACAuthKeyStorage>) nil_chk(self->keyStorage_)) saveAuthKey:0];
  self->currentAuthId_ = 0;
  self->proto_ = nil;
  
#line 153
  [((id<ACActorApiCallback>) nil_chk(self->callback_)) onAuthIdInvalidated];
  
#line 155
  [((ARActorRef *) nil_chk([self self__])) sendWithId:new_ACApiBroker_RequestAuthId_initWithACApiBroker_(self)];
}


#line 158
void ACApiBroker_requestAuthId(ACApiBroker *self) {
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, @"Creating auth key...");
  
#line 161
  ACAuthIdRetriever_requestAuthIdWithACEndpoints_withInt_withInt_withInt_withACAuthIdRetriever_AuthIdCallback_(self->endpoints_, self->minDelay_, self->maxDelay_, self->maxFailureCount_, new_ACApiBroker_$2_initWithACApiBroker_(self));
}


#line 179
void ACApiBroker_createMtProtoWithLong_(ACApiBroker *self, jlong key) {
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, @"Creating proto");
  [((id<ACAuthKeyStorage>) nil_chk(self->keyStorage_)) saveAuthKey:key];
  self->currentAuthId_ = key;
  
#line 184
  self->proto_ = new_ACMTProto_initWithLong_withLong_withACEndpoints_withACMTProtoCallback_withBoolean_withNSString_withInt_withInt_withInt_(key, ACRandomUtils_nextRid(), self->endpoints_, new_ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(self,
#line 187
  key), self->isEnableLog_, JreStrcat("$$I",
#line 189
  [self getPath], @"/proto#", [((ARAtomicIntegerCompat *) nil_chk(ACApiBroker_NEXT_PROTO_ID_)) incrementAndGet]), self->minDelay_, self->maxDelay_, self->maxFailureCount_);
  
#line 194
  for (ACApiBroker_RequestHolder * __strong holder in nil_chk([((JavaUtilHashMap *) nil_chk(self->requests_)) values])) {
    ((ACApiBroker_RequestHolder *) nil_chk(holder))->protoId_ = [self->proto_ sendRpcMessageWithACProtoStruct:holder->message_];
    (void) [((JavaUtilHashMap *) nil_chk(self->idMap_)) putWithId:JavaLangLong_valueOfWithLong_(holder->protoId_) withId:JavaLangLong_valueOfWithLong_(holder->publicId_)];
  }
}


#line 201
void ACApiBroker_performRequestWithLong_withACRequest_withACRpcCallback_(ACApiBroker *self, jlong randomId, ACRequest *message, id<ACRpcCallback> callback) {
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J$@", @"-> request#", randomId, @": ", message));
  
#line 204
  ACApiBroker_RequestHolder *holder = new_ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(self, ARRuntime_getCurrentTime(),
#line 206
  randomId, new_ACRpcRequest_initWithInt_withByteArray_(
#line 207
  [((ACRequest *) nil_chk(message)) getHeaderKey], [message toByteArray]),
#line 208
  callback);
  (void) [((JavaUtilHashMap *) nil_chk(self->requests_)) putWithId:JavaLangLong_valueOfWithLong_(holder->publicId_) withId:holder];
  
#line 211
  if (self->proto_ != nil) {
    jlong mid = [self->proto_ sendRpcMessageWithACProtoStruct:holder->message_];
    holder->protoId_ = mid;
    (void) [((JavaUtilHashMap *) nil_chk(self->idMap_)) putWithId:JavaLangLong_valueOfWithLong_(mid) withId:JavaLangLong_valueOfWithLong_(randomId)];
  }
}


#line 219
void ACApiBroker_processResponseWithLong_withLong_withByteArray_(ACApiBroker *self, jlong authId, jlong mid, IOSByteArray *content) {
  if (authId != self->currentAuthId_) {
    return;
  }
  
#line 224
  ACProtoStruct *protoStruct;
  @try {
    protoStruct = ACProtoSerializer_readRpcResponsePayloadWithByteArray_(content);
  }
  @catch (
#line 227
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J", @"Broken response mid#", mid));
    return;
  }
  
#line 235
  jlong rid;
  if ([((JavaUtilHashMap *) nil_chk(self->idMap_)) containsKeyWithId:JavaLangLong_valueOfWithLong_(mid)]) {
    rid = [((JavaLangLong *) nil_chk([self->idMap_ getWithId:JavaLangLong_valueOfWithLong_(mid)])) longLongValue];
  }
  else {
    
#line 239
    return;
  }
  
#line 242
  ACApiBroker_RequestHolder *holder;
  if ([((JavaUtilHashMap *) nil_chk(self->requests_)) containsKeyWithId:JavaLangLong_valueOfWithLong_(rid)]) {
    holder = [self->requests_ getWithId:JavaLangLong_valueOfWithLong_(rid)];
  }
  else {
    
#line 246
    return;
  }
  
#line 249
  if ([protoStruct isKindOfClass:[ACRpcOk class]]) {
    ACRpcOk *ok = (ACRpcOk *) check_class_cast(protoStruct, [ACRpcOk class]);
    (void) [self->requests_ removeWithId:JavaLangLong_valueOfWithLong_(rid)];
    if (((ACApiBroker_RequestHolder *) nil_chk(holder))->protoId_ != 0) {
      (void) [self->idMap_ removeWithId:JavaLangLong_valueOfWithLong_(holder->protoId_)];
    }
    
#line 256
    ACResponse *response;
    @try {
      response = (ACResponse *) check_class_cast([((ACApiParserConfig *) nil_chk(self->parserConfig_)) parseRpcWithInt:((ACRpcOk *) nil_chk(ok))->responseType_ withByteArray:ok->payload_], [ACResponse class]);
    }
    @catch (
#line 259
    JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
      return;
    }
    
#line 264
    ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J$@$J$", @"<- response#", holder->publicId_, @": ", response, @" in ",
#line 265
    (ARRuntime_getCurrentTime() - holder->requestTime_), @" ms"));
    
#line 267
    [((id<ACRpcCallback>) nil_chk(holder->callback_)) onResult:response];
  }
  else
#line 268
  if ([protoStruct isKindOfClass:[ACRpcError class]]) {
    ACRpcError *e = (ACRpcError *) check_class_cast(protoStruct, [ACRpcError class]);
    (void) [self->requests_ removeWithId:JavaLangLong_valueOfWithLong_(rid)];
    if (((ACApiBroker_RequestHolder *) nil_chk(holder))->protoId_ != 0) {
      (void) [self->idMap_ removeWithId:JavaLangLong_valueOfWithLong_(holder->protoId_)];
    }
    
#line 275
    ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J$$CIC$$J$", @"<- error#", holder->publicId_, @": ", ((ACRpcError *) nil_chk(e))->errorTag_, ' ', e->errorCode_, ' ', e->userMessage_, @" in ",
#line 276
    (ARRuntime_getCurrentTime() - holder->requestTime_), @" ms"));
    
#line 278
    [((id<ACRpcCallback>) nil_chk(holder->callback_)) onError:new_ACRpcException_initWithNSString_withInt_withNSString_withBoolean_withByteArray_(e->errorTag_, e->errorCode_, e->userMessage_, e->canTryAgain_, e->relatedData_)];
  }
  else
#line 279
  if ([protoStruct isKindOfClass:[ACRpcInternalError class]]) {
    ACRpcInternalError *e = ((ACRpcInternalError *) check_class_cast(protoStruct, [ACRpcInternalError class]));
    ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$JCI$J$", @"<- internal_error#", ((ACApiBroker_RequestHolder *) nil_chk(holder))->publicId_, ' ', [((ACRpcInternalError *) nil_chk(e)) getTryAgainDelay], @" sec in ",
#line 282
    (ARRuntime_getCurrentTime() - holder->requestTime_), @" ms"));
    if ([e isCanTryAgain]) {
      [((ARActorRef *) nil_chk([self self__])) sendWithId:new_ACApiBroker_ForceResend_initWithACApiBroker_withLong_(self, rid) withLong:[e getTryAgainDelay] * 1000LL];
    }
    else {
      
#line 286
      (void) [self->requests_ removeWithId:JavaLangLong_valueOfWithLong_(rid)];
      if (holder->protoId_ != 0) {
        (void) [self->idMap_ removeWithId:JavaLangLong_valueOfWithLong_(holder->protoId_)];
      }
      [((id<ACRpcCallback>) nil_chk(holder->callback_)) onError:new_ACRpcInternalException_init()];
    }
  }
  else
#line 292
  if ([protoStruct isKindOfClass:[ACRpcFloodWait class]]) {
    ACRpcFloodWait *f = (ACRpcFloodWait *) check_class_cast(protoStruct, [ACRpcFloodWait class]);
    ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$JCI$J$", @"<- flood_wait#", ((ACApiBroker_RequestHolder *) nil_chk(holder))->publicId_, ' ', [((ACRpcFloodWait *) nil_chk(f)) getDelay], @" sec in ",
#line 295
    (ARRuntime_getCurrentTime() - holder->requestTime_), @" ms"));
    [((ARActorRef *) nil_chk([self self__])) sendWithId:new_ACApiBroker_ForceResend_initWithACApiBroker_withLong_(self, rid) withLong:[f getDelay] * 1000LL];
  }
  else {
    
#line 298
    ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J$J$", @"<- unknown_package#", ((ACApiBroker_RequestHolder *) nil_chk(holder))->publicId_, @" in ",
#line 299
    (ARRuntime_getCurrentTime() - holder->requestTime_), @" ms"));
  }
}


#line 303
void ACApiBroker_forceResendWithLong_(ACApiBroker *self, jlong randomId) {
  ACApiBroker_RequestHolder *holder = [((JavaUtilHashMap *) nil_chk(self->requests_)) getWithId:JavaLangLong_valueOfWithLong_(randomId)];
  if (holder != nil) {
    if (holder->protoId_ != 0) {
      (void) [((JavaUtilHashMap *) nil_chk(self->idMap_)) removeWithId:JavaLangLong_valueOfWithLong_(holder->protoId_)];
      [((ACMTProto *) nil_chk(self->proto_)) cancelRpcWithLong:holder->protoId_];
    }
    jlong mid = [((ACMTProto *) nil_chk(self->proto_)) sendRpcMessageWithACProtoStruct:holder->message_];
    holder->protoId_ = mid;
    (void) [((JavaUtilHashMap *) nil_chk(self->idMap_)) putWithId:JavaLangLong_valueOfWithLong_(mid) withId:JavaLangLong_valueOfWithLong_(randomId)];
  }
}

void ACApiBroker_cancelRequestWithLong_(ACApiBroker *self, jlong randomId) {
  ACApiBroker_RequestHolder *holder = [((JavaUtilHashMap *) nil_chk(self->requests_)) getWithId:JavaLangLong_valueOfWithLong_(randomId)];
  if (holder != nil) {
    (void) [self->requests_ removeWithId:JavaLangLong_valueOfWithLong_(randomId)];
    if (holder->protoId_ != 0 && self->proto_ != nil) {
      (void) [((JavaUtilHashMap *) nil_chk(self->idMap_)) removeWithId:JavaLangLong_valueOfWithLong_(holder->protoId_)];
      [self->proto_ cancelRpcWithLong:holder->protoId_];
    }
  }
}

void ACApiBroker_processUpdateWithLong_withByteArray_(ACApiBroker *self, jlong authId, IOSByteArray *content) {
  if (authId != self->currentAuthId_) {
    return;
  }
  
#line 332
  ACProtoStruct *protoStruct;
  @try {
    protoStruct = ACProtoSerializer_readUpdateWithByteArray_(content);
  }
  @catch (
#line 335
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, @"Broken mt update");
    return;
  }
  
#line 341
  jint type = ((ACPush *) nil_chk(((ACPush *) check_class_cast(protoStruct, [ACPush class]))))->updateType_;
  IOSByteArray *body = ((ACPush *) nil_chk(((ACPush *) check_class_cast(protoStruct, [ACPush class]))))->body_;
  
#line 344
  ACRpcScope *updateBox;
  @try {
    updateBox = [((ACApiParserConfig *) nil_chk(self->parserConfig_)) parseRpcWithInt:type withByteArray:body];
  }
  @catch (
#line 347
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    ARLog_wWithNSString_withNSString_(ACApiBroker_TAG_, @"Broken update box");
    return;
  }
  
#line 355
  [((id<ACActorApiCallback>) nil_chk(self->callback_)) onUpdateReceived:updateBox];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 362
@implementation ACApiBroker_PerformRequest


#line 366
- (instancetype)initWithACRequest:(ACRequest *)message
                withACRpcCallback:(id<ACRpcCallback>)callback {
  ACApiBroker_PerformRequest_initWithACRequest_withACRpcCallback_(self, message, callback);
  return self;
}


#line 371
- (ACRequest *)getMessage {
  return message_;
}

- (id<ACRpcCallback>)getCallback {
  return callback_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACRequest:withACRpcCallback:", "PerformRequest", NULL, 0x1, NULL, NULL },
    { "getMessage", NULL, "Lim.actor.core.network.parser.Request;", 0x1, NULL, NULL },
    { "getCallback", NULL, "Lim.actor.core.network.RpcCallback;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "message_", NULL, 0x2, "Lim.actor.core.network.parser.Request;", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x2, "Lim.actor.core.network.RpcCallback;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_PerformRequest = { 2, "PerformRequest", "im.actor.core.network.api", "ApiBroker", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_PerformRequest;
}

@end


#line 366
void ACApiBroker_PerformRequest_initWithACRequest_withACRpcCallback_(ACApiBroker_PerformRequest *self, ACRequest *message, id<ACRpcCallback> callback) {
  (void) NSObject_init(self);
  
#line 367
  self->message_ = message;
  self->callback_ = callback;
}


#line 366
ACApiBroker_PerformRequest *new_ACApiBroker_PerformRequest_initWithACRequest_withACRpcCallback_(ACRequest *message, id<ACRpcCallback> callback) {
  ACApiBroker_PerformRequest *self = [ACApiBroker_PerformRequest alloc];
  ACApiBroker_PerformRequest_initWithACRequest_withACRpcCallback_(self, message, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_PerformRequest)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 380
@implementation ACApiBroker_CancelRequest


#line 383
- (instancetype)initWithLong:(jlong)randomId {
  ACApiBroker_CancelRequest_initWithLong_(self, randomId);
  return self;
}


#line 387
- (jlong)getRandomId {
  return randomId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "CancelRequest", NULL, 0x1, NULL, NULL },
    { "getRandomId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "randomId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_CancelRequest = { 2, "CancelRequest", "im.actor.core.network.api", "ApiBroker", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_CancelRequest;
}

@end


#line 383
void ACApiBroker_CancelRequest_initWithLong_(ACApiBroker_CancelRequest *self, jlong randomId) {
  (void) NSObject_init(self);
  
#line 384
  self->randomId_ = randomId;
}


#line 383
ACApiBroker_CancelRequest *new_ACApiBroker_CancelRequest_initWithLong_(jlong randomId) {
  ACApiBroker_CancelRequest *self = [ACApiBroker_CancelRequest alloc];
  ACApiBroker_CancelRequest_initWithLong_(self, randomId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_CancelRequest)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 392
@implementation ACApiBroker_NetworkChanged


#line 395
- (instancetype)initWithACNetworkStateEnum:(ACNetworkStateEnum *)state {
  ACApiBroker_NetworkChanged_initWithACNetworkStateEnum_(self, state);
  return self;
}


#line 399
- (ACNetworkStateEnum *)getState {
  return state_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACNetworkStateEnum:", "NetworkChanged", NULL, 0x1, NULL, NULL },
    { "getState", NULL, "Lim.actor.core.network.NetworkState;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x2, "Lim.actor.core.network.NetworkState;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_NetworkChanged = { 2, "NetworkChanged", "im.actor.core.network.api", "ApiBroker", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_NetworkChanged;
}

@end


#line 395
void ACApiBroker_NetworkChanged_initWithACNetworkStateEnum_(ACApiBroker_NetworkChanged *self, ACNetworkStateEnum *state) {
  (void) NSObject_init(self);
  
#line 396
  self->state_ = state;
}


#line 395
ACApiBroker_NetworkChanged *new_ACApiBroker_NetworkChanged_initWithACNetworkStateEnum_(ACNetworkStateEnum *state) {
  ACApiBroker_NetworkChanged *self = [ACApiBroker_NetworkChanged alloc];
  ACApiBroker_NetworkChanged_initWithACNetworkStateEnum_(self, state);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_NetworkChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 404
@implementation ACApiBroker_ForceNetworkCheck

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACApiBroker_ForceNetworkCheck_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACApiBroker_ForceNetworkCheck = { 2, "ForceNetworkCheck", "im.actor.core.network.api", "ApiBroker", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ForceNetworkCheck;
}

@end

void ACApiBroker_ForceNetworkCheck_init(ACApiBroker_ForceNetworkCheck *self) {
  (void) NSObject_init(self);
}

ACApiBroker_ForceNetworkCheck *new_ACApiBroker_ForceNetworkCheck_init() {
  ACApiBroker_ForceNetworkCheck *self = [ACApiBroker_ForceNetworkCheck alloc];
  ACApiBroker_ForceNetworkCheck_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ForceNetworkCheck)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 408
@implementation ACApiBroker_RequestAuthId

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$ {
  ACApiBroker_RequestAuthId_initWithACApiBroker_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ACApiBroker_RequestAuthId = { 2, "RequestAuthId", "im.actor.core.network.api", "ApiBroker", 0x2, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_RequestAuthId;
}

@end

void ACApiBroker_RequestAuthId_initWithACApiBroker_(ACApiBroker_RequestAuthId *self, ACApiBroker *outer$) {
  (void) NSObject_init(self);
}

ACApiBroker_RequestAuthId *new_ACApiBroker_RequestAuthId_initWithACApiBroker_(ACApiBroker *outer$) {
  ACApiBroker_RequestAuthId *self = [ACApiBroker_RequestAuthId alloc];
  ACApiBroker_RequestAuthId_initWithACApiBroker_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_RequestAuthId)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 412
@implementation ACApiBroker_InitMTProto


#line 415
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId {
  ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}


#line 419
- (jlong)getAuthId {
  return authId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:", "InitMTProto", NULL, 0x1, NULL, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_InitMTProto = { 2, "InitMTProto", "im.actor.core.network.api", "ApiBroker", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_InitMTProto;
}

@end


#line 415
void ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(ACApiBroker_InitMTProto *self, ACApiBroker *outer$, jlong authId) {
  (void) NSObject_init(self);
  
#line 416
  self->authId_ = authId;
}


#line 415
ACApiBroker_InitMTProto *new_ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) {
  ACApiBroker_InitMTProto *self = [ACApiBroker_InitMTProto alloc];
  ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_InitMTProto)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 424
@implementation ACApiBroker_ProtoResponse


#line 430
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId
                           withLong:(jlong)responseId
                      withByteArray:(IOSByteArray *)data {
  ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(self, outer$, authId, responseId, data);
  return self;
}


#line 436
- (jlong)getAuthId {
  return authId_;
}

- (jlong)getResponseId {
  return responseId_;
}

- (IOSByteArray *)getData {
  return data_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:withLong:withByteArray:", "ProtoResponse", NULL, 0x1, NULL, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL, NULL },
    { "getResponseId", NULL, "J", 0x1, NULL, NULL },
    { "getData", NULL, "[B", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "responseId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_ProtoResponse = { 2, "ProtoResponse", "im.actor.core.network.api", "ApiBroker", 0x2, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ProtoResponse;
}

@end


#line 430
void ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(ACApiBroker_ProtoResponse *self, ACApiBroker *outer$, jlong authId, jlong responseId, IOSByteArray *data) {
  (void) NSObject_init(self);
  
#line 431
  self->authId_ = authId;
  self->responseId_ = responseId;
  self->data_ = data;
}


#line 430
ACApiBroker_ProtoResponse *new_ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(ACApiBroker *outer$, jlong authId, jlong responseId, IOSByteArray *data) {
  ACApiBroker_ProtoResponse *self = [ACApiBroker_ProtoResponse alloc];
  ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(self, outer$, authId, responseId, data);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ProtoResponse)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 449
@implementation ACApiBroker_ProtoUpdate


#line 454
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId
                      withByteArray:(IOSByteArray *)data {
  ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(self, outer$, authId, data);
  return self;
}


#line 459
- (jlong)getAuthId {
  return authId_;
}

- (IOSByteArray *)getData {
  return data_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:withByteArray:", "ProtoUpdate", NULL, 0x1, NULL, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL, NULL },
    { "getData", NULL, "[B", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_ProtoUpdate = { 2, "ProtoUpdate", "im.actor.core.network.api", "ApiBroker", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ProtoUpdate;
}

@end


#line 454
void ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(ACApiBroker_ProtoUpdate *self, ACApiBroker *outer$, jlong authId, IOSByteArray *data) {
  (void) NSObject_init(self);
  
#line 455
  self->authId_ = authId;
  self->data_ = data;
}


#line 454
ACApiBroker_ProtoUpdate *new_ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(ACApiBroker *outer$, jlong authId, IOSByteArray *data) {
  ACApiBroker_ProtoUpdate *self = [ACApiBroker_ProtoUpdate alloc];
  ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(self, outer$, authId, data);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ProtoUpdate)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 468
@implementation ACApiBroker_ForceResend


#line 471
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)id_ {
  ACApiBroker_ForceResend_initWithACApiBroker_withLong_(self, outer$, id_);
  return self;
}


#line 475
- (jlong)getId {
  return id__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:", "ForceResend", NULL, 0x1, NULL, NULL },
    { "getId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "id", 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_ForceResend = { 2, "ForceResend", "im.actor.core.network.api", "ApiBroker", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ForceResend;
}

@end


#line 471
void ACApiBroker_ForceResend_initWithACApiBroker_withLong_(ACApiBroker_ForceResend *self, ACApiBroker *outer$, jlong id_) {
  (void) NSObject_init(self);
  
#line 472
  self->id__ = id_;
}


#line 471
ACApiBroker_ForceResend *new_ACApiBroker_ForceResend_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong id_) {
  ACApiBroker_ForceResend *self = [ACApiBroker_ForceResend alloc];
  ACApiBroker_ForceResend_initWithACApiBroker_withLong_(self, outer$, id_);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ForceResend)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 480
@implementation ACApiBroker_RequestHolder


#line 488
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)requestTime
                           withLong:(jlong)publicId
                   withACRpcRequest:(ACRpcRequest *)message
                  withACRpcCallback:(id<ACRpcCallback>)callback {
  ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(self, outer$, requestTime, publicId, message, callback);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:withLong:withACRpcRequest:withACRpcCallback:", "RequestHolder", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "requestTime_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x12, "Lim.actor.core.network.mtp.entity.rpc.RpcRequest;", NULL, NULL, .constantValue.asLong = 0 },
    { "publicId_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x12, "Lim.actor.core.network.RpcCallback;", NULL, NULL, .constantValue.asLong = 0 },
    { "protoId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_RequestHolder = { 2, "RequestHolder", "im.actor.core.network.api", "ApiBroker", 0x2, 1, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_RequestHolder;
}

@end


#line 488
void ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(ACApiBroker_RequestHolder *self, ACApiBroker *outer$, jlong requestTime, jlong publicId, ACRpcRequest *message, id<ACRpcCallback> callback) {
  (void) NSObject_init(self);
  
#line 489
  self->requestTime_ = requestTime;
  self->message_ = message;
  self->publicId_ = publicId;
  self->callback_ = callback;
}


#line 488
ACApiBroker_RequestHolder *new_ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(ACApiBroker *outer$, jlong requestTime, jlong publicId, ACRpcRequest *message, id<ACRpcCallback> callback) {
  ACApiBroker_RequestHolder *self = [ACApiBroker_RequestHolder alloc];
  ACApiBroker_RequestHolder_initWithACApiBroker_withLong_withLong_withACRpcRequest_withACRpcCallback_(self, outer$, requestTime, publicId, message, callback);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_RequestHolder)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 496
@implementation ACApiBroker_NewSessionCreated


#line 499
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId {
  ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}


#line 503
- (jlong)getAuthId {
  return authId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:", "NewSessionCreated", NULL, 0x1, NULL, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_NewSessionCreated = { 2, "NewSessionCreated", "im.actor.core.network.api", "ApiBroker", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_NewSessionCreated;
}

@end


#line 499
void ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(ACApiBroker_NewSessionCreated *self, ACApiBroker *outer$, jlong authId) {
  (void) NSObject_init(self);
  
#line 500
  self->authId_ = authId;
}


#line 499
ACApiBroker_NewSessionCreated *new_ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) {
  ACApiBroker_NewSessionCreated *self = [ACApiBroker_NewSessionCreated alloc];
  ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_NewSessionCreated)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 508
@implementation ACApiBroker_AuthIdInvalidated


#line 511
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId {
  ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}


#line 515
- (jlong)getAuthId {
  return authId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:", "AuthIdInvalidated", NULL, 0x1, NULL, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_AuthIdInvalidated = { 2, "AuthIdInvalidated", "im.actor.core.network.api", "ApiBroker", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_AuthIdInvalidated;
}

@end


#line 511
void ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(ACApiBroker_AuthIdInvalidated *self, ACApiBroker *outer$, jlong authId) {
  (void) NSObject_init(self);
  
#line 512
  self->authId_ = authId;
}


#line 511
ACApiBroker_AuthIdInvalidated *new_ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) {
  ACApiBroker_AuthIdInvalidated *self = [ACApiBroker_AuthIdInvalidated alloc];
  ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_AuthIdInvalidated)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 520
@implementation ACApiBroker_ConnectionsCountChanged


#line 523
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                            withInt:(jint)count {
  ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(self, outer$, count);
  return self;
}


#line 527
- (jint)getCount {
  return count_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withInt:", "ConnectionsCountChanged", NULL, 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "count_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_ConnectionsCountChanged = { 2, "ConnectionsCountChanged", "im.actor.core.network.api", "ApiBroker", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ConnectionsCountChanged;
}

@end


#line 523
void ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(ACApiBroker_ConnectionsCountChanged *self, ACApiBroker *outer$, jint count) {
  (void) NSObject_init(self);
  
#line 524
  self->count_ = count;
}


#line 523
ACApiBroker_ConnectionsCountChanged *new_ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(ACApiBroker *outer$, jint count) {
  ACApiBroker_ConnectionsCountChanged *self = [ACApiBroker_ConnectionsCountChanged alloc];
  ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(self, outer$, count);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ConnectionsCountChanged)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"


#line 532
@implementation ACApiBroker_ProtoCallback


#line 536
- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$
                           withLong:(jlong)authId {
  ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}


#line 541
- (void)onRpcResponseWithLong:(jlong)mid
                withByteArray:(IOSByteArray *)content {
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_ProtoResponse_initWithACApiBroker_withLong_withLong_withByteArray_(this$0_, authId_, mid, content)];
}

- (void)onUpdateWithByteArray:(IOSByteArray *)content {
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_ProtoUpdate_initWithACApiBroker_withLong_withByteArray_(this$0_, authId_, content)];
}


#line 551
- (void)onAuthKeyInvalidatedWithLong:(jlong)authId {
  if (self->authId_ != authId) {
    
#line 554
    return;
  }
  
#line 557
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_AuthIdInvalidated_initWithACApiBroker_withLong_(this$0_, authId)];
}


#line 561
- (void)onSessionCreated {
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_NewSessionCreated_initWithACApiBroker_withLong_(this$0_, authId_)];
}


#line 566
- (void)onConnectionsCountChangedWithInt:(jint)count {
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_ConnectionsCountChanged_initWithACApiBroker_withInt_(this$0_, count)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithACApiBroker:withLong:", "ProtoCallback", NULL, 0x1, NULL, NULL },
    { "onRpcResponseWithLong:withByteArray:", "onRpcResponse", "V", 0x1, NULL, NULL },
    { "onUpdateWithByteArray:", "onUpdate", "V", 0x1, NULL, NULL },
    { "onAuthKeyInvalidatedWithLong:", "onAuthKeyInvalidated", "V", 0x1, NULL, NULL },
    { "onSessionCreated", NULL, "V", 0x1, NULL, NULL },
    { "onConnectionsCountChangedWithInt:", "onConnectionsCountChanged", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.network.api.ApiBroker;", NULL, NULL, .constantValue.asLong = 0 },
    { "authId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiBroker_ProtoCallback = { 2, "ProtoCallback", "im.actor.core.network.api", "ApiBroker", 0x2, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiBroker_ProtoCallback;
}

@end


#line 536
void ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(ACApiBroker_ProtoCallback *self, ACApiBroker *outer$, jlong authId) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  
#line 537
  self->authId_ = authId;
}


#line 536
ACApiBroker_ProtoCallback *new_ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(ACApiBroker *outer$, jlong authId) {
  ACApiBroker_ProtoCallback *self = [ACApiBroker_ProtoCallback alloc];
  ACApiBroker_ProtoCallback_initWithACApiBroker_withLong_(self, outer$, authId);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_ProtoCallback)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"

@implementation ACApiBroker_$1


#line 54
- (ACApiBroker *)create {
  return new_ACApiBroker_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(val$endpoints_, val$keyStorage_, val$callback_, val$isEnableLog_, val$minDelay_, val$maxDelay_, val$maxFailureCount_, val$parserConfig_);
}

- (instancetype)initWithACEndpoints:(ACEndpoints *)capture$0
               withACAuthKeyStorage:(id<ACAuthKeyStorage>)capture$1
             withACActorApiCallback:(id<ACActorApiCallback>)capture$2
                        withBoolean:(jboolean)capture$3
                            withInt:(jint)capture$4
                            withInt:(jint)capture$5
                            withInt:(jint)capture$6
              withACApiParserConfig:(ACApiParserConfig *)capture$7 {
  ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(self, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6, capture$7);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Lim.actor.core.network.api.ApiBroker;", 0x1, NULL, NULL },
    { "initWithACEndpoints:withACAuthKeyStorage:withACActorApiCallback:withBoolean:withInt:withInt:withInt:withACApiParserConfig:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$endpoints_", NULL, 0x1012, "Lim.actor.core.network.Endpoints;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$keyStorage_", NULL, 0x1012, "Lim.actor.core.network.AuthKeyStorage;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$callback_", NULL, 0x1012, "Lim.actor.core.network.ActorApiCallback;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$isEnableLog_", NULL, 0x1012, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "val$minDelay_", NULL, 0x1012, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "val$maxDelay_", NULL, 0x1012, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "val$maxFailureCount_", NULL, 0x1012, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "val$parserConfig_", NULL, 0x1012, "Lim.actor.core.network.parser.ApiParserConfig;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACApiBroker", "getWithACEndpoints:withACAuthKeyStorage:withACActorApiCallback:withBoolean:withInt:withInt:withInt:withInt:withACApiParserConfig:" };
  static const J2ObjcClassInfo _ACApiBroker_$1 = { 2, "", "im.actor.core.network.api", "ApiBroker", 0x8008, 2, methods, 8, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lim/actor/runtime/actors/ActorCreator<Lim/actor/core/network/api/ApiBroker;>;" };
  return &_ACApiBroker_$1;
}

@end

void ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACApiBroker_$1 *self, ACEndpoints *capture$0, id<ACAuthKeyStorage> capture$1, id<ACActorApiCallback> capture$2, jboolean capture$3, jint capture$4, jint capture$5, jint capture$6, ACApiParserConfig *capture$7) {
  self->val$endpoints_ = capture$0;
  self->val$keyStorage_ = capture$1;
  self->val$callback_ = capture$2;
  self->val$isEnableLog_ = capture$3;
  self->val$minDelay_ = capture$4;
  self->val$maxDelay_ = capture$5;
  self->val$maxFailureCount_ = capture$6;
  self->val$parserConfig_ = capture$7;
  (void) NSObject_init(self);
}

ACApiBroker_$1 *new_ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(ACEndpoints *capture$0, id<ACAuthKeyStorage> capture$1, id<ACActorApiCallback> capture$2, jboolean capture$3, jint capture$4, jint capture$5, jint capture$6, ACApiParserConfig *capture$7) {
  ACApiBroker_$1 *self = [ACApiBroker_$1 alloc];
  ACApiBroker_$1_initWithACEndpoints_withACAuthKeyStorage_withACActorApiCallback_withBoolean_withInt_withInt_withInt_withACApiParserConfig_(self, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5, capture$6, capture$7);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_$1)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/api/ApiBroker.java"

@implementation ACApiBroker_$2


#line 163
- (void)onSuccessWithLong:(jlong)authId {
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J", @"Key created: ", authId));
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_InitMTProto_initWithACApiBroker_withLong_(this$0_, authId)];
}


#line 169
- (void)onFailure {
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, @"Key creation failure");
  [((ACExponentialBackoff *) nil_chk(this$0_->authIdBackOff_)) onFailure];
  jlong delay = [this$0_->authIdBackOff_ exponentialWait];
  ARLog_dWithNSString_withNSString_(ACApiBroker_TAG_, JreStrcat("$J$", @"Key creation delay in ", delay, @" ms"));
  [((ARActorRef *) nil_chk([this$0_ self__])) sendWithId:new_ACApiBroker_RequestAuthId_initWithACApiBroker_(this$0_) withLong:delay];
}

- (instancetype)initWithACApiBroker:(ACApiBroker *)outer$ {
  ACApiBroker_$2_initWithACApiBroker_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithLong:", "onSuccess", "V", 0x1, NULL, NULL },
    { "onFailure", NULL, "V", 0x1, NULL, NULL },
    { "initWithACApiBroker:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.core.network.api.ApiBroker;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ACApiBroker", "requestAuthId" };
  static const J2ObjcClassInfo _ACApiBroker_$2 = { 2, "", "im.actor.core.network.api", "ApiBroker", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ACApiBroker_$2;
}

@end

void ACApiBroker_$2_initWithACApiBroker_(ACApiBroker_$2 *self, ACApiBroker *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ACApiBroker_$2 *new_ACApiBroker_$2_initWithACApiBroker_(ACApiBroker *outer$) {
  ACApiBroker_$2 *self = [ACApiBroker_$2 alloc];
  ACApiBroker_$2_initWithACApiBroker_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiBroker_$2)

#pragma clang diagnostic pop
