//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/parser/ApiParserConfig.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/network/parser/ApiParserConfig.h"
#include "im/actor/core/network/parser/BaseParser.h"
#include "im/actor/core/network/parser/ParsingExtension.h"
#include "im/actor/core/network/parser/RpcScope.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACApiParserConfig () {
 @public
  JavaUtilArrayList *extensions_;
}

@end

J2OBJC_FIELD_SETTER(ACApiParserConfig, extensions_, JavaUtilArrayList *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/network/parser/ApiParserConfig.java"


#line 10
@implementation ACApiParserConfig


#line 14
- (void)addExtensionWithACParsingExtension:(ACParsingExtension *)extension {
  [((JavaUtilArrayList *) nil_chk(extensions_)) addWithId:extension];
}

- (ACRpcScope *)parseRpcWithInt:(jint)header
                  withByteArray:(IOSByteArray *)content {
  for (ACParsingExtension * __strong ex in nil_chk(extensions_)) {
    @try {
      return [((ACBaseParser *) nil_chk([((ACParsingExtension *) nil_chk(ex)) getRpcScopeParser])) readWithInt:header withByteArray:content];
    }
    @catch (
#line 22
    JavaLangException *e) {
    }
  }
  
#line 27
  @throw new_JavaIoIOException_initWithNSString_(@"Unknown package");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ACApiParserConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addExtensionWithACParsingExtension:", "addExtension", "V", 0x1, NULL, NULL },
    { "parseRpcWithInt:withByteArray:", "parseRpc", "Lim.actor.core.network.parser.RpcScope;", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "extensions_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lim/actor/core/network/parser/ParsingExtension;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACApiParserConfig = { 2, "ApiParserConfig", "im.actor.core.network.parser", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACApiParserConfig;
}

@end

void ACApiParserConfig_init(ACApiParserConfig *self) {
  (void) NSObject_init(self);
  self->extensions_ = new_JavaUtilArrayList_init();
}

ACApiParserConfig *new_ACApiParserConfig_init() {
  ACApiParserConfig *self = [ACApiParserConfig alloc];
  ACApiParserConfig_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACApiParserConfig)

#pragma clang diagnostic pop
