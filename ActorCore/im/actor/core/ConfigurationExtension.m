//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/ConfigurationExtension.java
//

#include "J2ObjC_source.h"
#include "im/actor/core/ConfigurationExtension.h"
#include "im/actor/core/Extension.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACConfigurationExtension () {
 @public
  NSString *key_;
  id<ACExtension> extension_;
}

@end

J2OBJC_FIELD_SETTER(ACConfigurationExtension, key_, NSString *)
J2OBJC_FIELD_SETTER(ACConfigurationExtension, extension_, id<ACExtension>)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/ConfigurationExtension.java"


#line 3
@implementation ACConfigurationExtension


#line 8
- (instancetype)initWithNSString:(NSString *)key
                 withACExtension:(id<ACExtension>)extension {
  ACConfigurationExtension_initWithNSString_withACExtension_(self, key, extension);
  return self;
}


#line 13
- (NSString *)getKey {
  return key_;
}

- (id<ACExtension>)getExtension {
  return extension_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withACExtension:", "ConfigurationExtension", NULL, 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getExtension", NULL, "Lim.actor.core.Extension;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "extension_", NULL, 0x2, "Lim.actor.core.Extension;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACConfigurationExtension = { 2, "ConfigurationExtension", "im.actor.core", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACConfigurationExtension;
}

@end


#line 8
void ACConfigurationExtension_initWithNSString_withACExtension_(ACConfigurationExtension *self, NSString *key, id<ACExtension> extension) {
  (void) NSObject_init(self);
  
#line 9
  self->key_ = key;
  self->extension_ = extension;
}


#line 8
ACConfigurationExtension *new_ACConfigurationExtension_initWithNSString_withACExtension_(NSString *key, id<ACExtension> extension) {
  ACConfigurationExtension *self = [ACConfigurationExtension alloc];
  ACConfigurationExtension_initWithNSString_withACExtension_(self, key, extension);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACConfigurationExtension)

#pragma clang diagnostic pop
