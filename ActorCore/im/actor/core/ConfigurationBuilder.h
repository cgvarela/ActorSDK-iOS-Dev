//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/ConfigurationBuilder.java
//

#ifndef _ImActorCoreConfigurationBuilder_H_
#define _ImActorCoreConfigurationBuilder_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class ACApiConfiguration;
@class ACConfiguration;
@class ACDeviceCategoryEnum;
@class ACPlatformTypeEnum;
@protocol ACExtension;
@protocol ACNotificationProvider;
@protocol ACPhoneBookProvider;

/*!
 @brief Configuration builder for starting up messenger object
 */
@interface ACConfigurationBuilder : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Adding Endpoint for API
 Valid URLs are:
 tcp://[host]:[port]
 tls://[host]:[port]
 ws://[host]:[port]
 wss://[host]:[port]
 @param url endpoint url
 @return this
 */
- (ACConfigurationBuilder *)addEndpoint:(NSString *)url;

/*!
 @brief Adding app extension
 @param key       extension key
 @param extension extension
 @return this
 */
- (ACConfigurationBuilder *)addExtensionWithNSString:(NSString *)key
                                     withACExtension:(id<ACExtension>)extension;

/*!
 @brief Build configuration
 @return result configuration
 */
- (ACConfiguration *)build;

/*!
 @brief Set API Configuration
 @param apiConfiguration API Configuration
 @return this
 */
- (ACConfigurationBuilder *)setApiConfiguration:(ACApiConfiguration *)apiConfiguration;

/*!
 @brief Setting Device Type
 @param deviceCategory Device Type
 @return this
 */
- (ACConfigurationBuilder *)setDeviceCategory:(ACDeviceCategoryEnum *)deviceCategory;

/*!
 @brief Set Enable contacts logging
 @param enableContactsLogging Enable contacts logging flag
 @return this
 */
- (ACConfigurationBuilder *)setEnableContactsLogging:(jboolean)enableContactsLogging;

/*!
 @brief Set Enable file operations loggging
 @param enableFilesLogging Enable files logging
 @return this
 */
- (ACConfigurationBuilder *)setEnableFilesLogging:(jboolean)enableFilesLogging;

/*!
 @brief Set Enable Network logging
 @param enableNetworkLogging Enable network logging
 @return this
 */
- (ACConfigurationBuilder *)setEnableNetworkLogging:(jboolean)enableNetworkLogging;

/*!
 @brief Set max backoff delay
 @param maxDelay max connection exponential backoff delay
 @return this
 */
- (ACConfigurationBuilder *)setMaxDelay:(jint)maxDelay;

/*!
 @brief Set max connection exponential backoff failure count
 @param maxFailureCount max connection exponential backoff failure count
 @return this
 */
- (ACConfigurationBuilder *)setMaxFailureCount:(jint)maxFailureCount;

/*!
 @brief Set min backoff delay
 @param minDelay min connection exponential backoff delay
 @return this
 */
- (ACConfigurationBuilder *)setMinDelay:(jint)minDelay;

/*!
 @brief Set Notification provider
 @param notificationProvider Notification provider
 @return this
 */
- (ACConfigurationBuilder *)setNotificationProvider:(id<ACNotificationProvider>)notificationProvider;

/*!
 @brief Set Phone Book provider
 @param phoneBookProvider phone book provider
 @return this
 */
- (ACConfigurationBuilder *)setPhoneBookProvider:(id<ACPhoneBookProvider>)phoneBookProvider;

/*!
 @brief Set App Type
 @param platformType App Type
 @return this
 */
- (ACConfigurationBuilder *)setPlatformType:(ACPlatformTypeEnum *)platformType;

@end

J2OBJC_EMPTY_STATIC_INIT(ACConfigurationBuilder)

FOUNDATION_EXPORT void ACConfigurationBuilder_init(ACConfigurationBuilder *self);

FOUNDATION_EXPORT ACConfigurationBuilder *new_ACConfigurationBuilder_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACConfigurationBuilder)

@compatibility_alias ImActorCoreConfigurationBuilder ACConfigurationBuilder;


#pragma clang diagnostic pop
#endif // _ImActorCoreConfigurationBuilder_H_
