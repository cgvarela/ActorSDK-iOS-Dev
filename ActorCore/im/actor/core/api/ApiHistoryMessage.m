//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiHistoryMessage.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiHistoryMessage.h"
#include "im/actor/core/api/ApiMessage.h"
#include "im/actor/core/api/ApiMessageState.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARApiHistoryMessage () {
 @public
  jint senderUid_;
  jlong rid_;
  jlong date_;
  ARApiMessage *message_;
  ARApiMessageStateEnum *state_;
}

@end

J2OBJC_FIELD_SETTER(ARApiHistoryMessage, message_, ARApiMessage *)
J2OBJC_FIELD_SETTER(ARApiHistoryMessage, state_, ARApiMessageStateEnum *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiHistoryMessage.java"


#line 17
@implementation ARApiHistoryMessage


#line 25
- (instancetype)initWithInt:(jint)senderUid
                   withLong:(jlong)rid
                   withLong:(jlong)date
           withARApiMessage:(ARApiMessage *)message
  withARApiMessageStateEnum:(ARApiMessageStateEnum *)state {
  ARApiHistoryMessage_initWithInt_withLong_withLong_withARApiMessage_withARApiMessageStateEnum_(self, senderUid, rid, date, message, state);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARApiHistoryMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 37
- (jint)getSenderUid {
  return self->senderUid_;
}

- (jlong)getRid {
  return self->rid_;
}

- (jlong)getDate {
  return self->date_;
}


#line 50
- (ARApiMessage *)getMessage {
  return self->message_;
}


#line 55
- (ARApiMessageStateEnum *)getState {
  return self->state_;
}


#line 60
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->senderUid_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->rid_ = [values getLongWithInt:2];
  self->date_ = [values getLongWithInt:3];
  self->message_ = ARApiMessage_fromBytesWithByteArray_([values getBytesWithInt:5]);
  jint val_state = [values getIntWithInt:6 withInt:0];
  if (val_state != 0) {
    self->state_ = ARApiMessageStateEnum_parseWithInt_(val_state);
  }
}


#line 72
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->senderUid_];
  [writer writeLongWithInt:2 withLong:self->rid_];
  [writer writeLongWithInt:3 withLong:self->date_];
  if (self->message_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  
#line 80
  [writer writeBytesWithInt:5 withByteArray:[((ARApiMessage *) nil_chk(self->message_)) buildContainer]];
  if (self->state_ != nil) {
    [writer writeIntWithInt:6 withInt:[self->state_ getValue]];
  }
}

- (NSString *)description {
  NSString *res = @"struct HistoryMessage{";
  (void) JreStrAppendStrong(&res, "$I", @"senderUid=", self->senderUid_);
  (void) JreStrAppendStrong(&res, "$J", @", rid=", self->rid_);
  (void) JreStrAppendStrong(&res, "$J", @", date=", self->date_);
  (void) JreStrAppendStrong(&res, "$@", @", message=", self->message_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withLong:withLong:withARApiMessage:withARApiMessageStateEnum:", "ApiHistoryMessage", NULL, 0x1, NULL, NULL },
    { "init", "ApiHistoryMessage", NULL, 0x1, NULL, NULL },
    { "getSenderUid", NULL, "I", 0x1, NULL, NULL },
    { "getRid", NULL, "J", 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "getMessage", NULL, "Lim.actor.core.api.ApiMessage;", 0x1, NULL, NULL },
    { "getState", NULL, "Lim.actor.core.api.ApiMessageState;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "senderUid_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "rid_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x2, "Lim.actor.core.api.ApiMessage;", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "Lim.actor.core.api.ApiMessageState;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARApiHistoryMessage = { 2, "ApiHistoryMessage", "im.actor.core.api", NULL, 0x1, 10, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiHistoryMessage;
}

@end


#line 25
void ARApiHistoryMessage_initWithInt_withLong_withLong_withARApiMessage_withARApiMessageStateEnum_(ARApiHistoryMessage *self, jint senderUid, jlong rid, jlong date, ARApiMessage *message, ARApiMessageStateEnum *state) {
  (void) ARBserObject_init(self);
  
#line 26
  self->senderUid_ = senderUid;
  self->rid_ = rid;
  self->date_ = date;
  self->message_ = message;
  self->state_ = state;
}


#line 25
ARApiHistoryMessage *new_ARApiHistoryMessage_initWithInt_withLong_withLong_withARApiMessage_withARApiMessageStateEnum_(jint senderUid, jlong rid, jlong date, ARApiMessage *message, ARApiMessageStateEnum *state) {
  ARApiHistoryMessage *self = [ARApiHistoryMessage alloc];
  ARApiHistoryMessage_initWithInt_withLong_withLong_withARApiMessage_withARApiMessageStateEnum_(self, senderUid, rid, date, message, state);
  return self;
}


#line 33
void ARApiHistoryMessage_init(ARApiHistoryMessage *self) {
  (void) ARBserObject_init(self);
}


#line 33
ARApiHistoryMessage *new_ARApiHistoryMessage_init() {
  ARApiHistoryMessage *self = [ARApiHistoryMessage alloc];
  ARApiHistoryMessage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiHistoryMessage)

#pragma clang diagnostic pop
