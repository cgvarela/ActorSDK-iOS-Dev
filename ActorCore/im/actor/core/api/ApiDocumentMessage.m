//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiDocumentMessage.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiDocumentEx.h"
#include "im/actor/core/api/ApiDocumentMessage.h"
#include "im/actor/core/api/ApiFastThumb.h"
#include "im/actor/core/api/ApiMessage.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/collections/SparseArray.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARApiDocumentMessage () {
 @public
  jlong fileId_;
  jlong accessHash_;
  jint fileSize_;
  NSString *name_;
  NSString *mimeType_;
  ARApiFastThumb *thumb_;
  ARApiDocumentEx *ext_;
}

@end

J2OBJC_FIELD_SETTER(ARApiDocumentMessage, name_, NSString *)
J2OBJC_FIELD_SETTER(ARApiDocumentMessage, mimeType_, NSString *)
J2OBJC_FIELD_SETTER(ARApiDocumentMessage, thumb_, ARApiFastThumb *)
J2OBJC_FIELD_SETTER(ARApiDocumentMessage, ext_, ARApiDocumentEx *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiDocumentMessage.java"


#line 17
@implementation ARApiDocumentMessage


#line 27
- (instancetype)initWithLong:(jlong)fileId
                    withLong:(jlong)accessHash
                     withInt:(jint)fileSize
                withNSString:(NSString *)name
                withNSString:(NSString *)mimeType
          withARApiFastThumb:(ARApiFastThumb *)thumb
         withARApiDocumentEx:(ARApiDocumentEx *)ext {
  ARApiDocumentMessage_initWithLong_withLong_withInt_withNSString_withNSString_withARApiFastThumb_withARApiDocumentEx_(self, fileId, accessHash, fileSize, name, mimeType, thumb, ext);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 37
- (instancetype)init {
  ARApiDocumentMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 41
- (jint)getHeader {
  return 3;
}

- (jlong)getFileId {
  return self->fileId_;
}

- (jlong)getAccessHash {
  return self->accessHash_;
}

- (jint)getFileSize {
  return self->fileSize_;
}


#line 58
- (NSString *)getName {
  return self->name_;
}


#line 63
- (NSString *)getMimeType {
  return self->mimeType_;
}


#line 68
- (ARApiFastThumb *)getThumb {
  return self->thumb_;
}


#line 73
- (ARApiDocumentEx *)getExt {
  return self->ext_;
}


#line 78
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->fileId_ = [((ARBserValues *) nil_chk(values)) getLongWithInt:1];
  self->accessHash_ = [values getLongWithInt:2];
  self->fileSize_ = [values getIntWithInt:3];
  self->name_ = [values getStringWithInt:4];
  self->mimeType_ = [values getStringWithInt:5];
  self->thumb_ = [values optObjWithInt:6 withARBserObject:new_ARApiFastThumb_init()];
  if ([values optBytesWithInt:8] != nil) {
    self->ext_ = ARApiDocumentEx_fromBytesWithByteArray_([values getBytesWithInt:8]);
  }
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithARSparseArray:[values buildRemaining]];
  }
}


#line 94
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeLongWithInt:1 withLong:self->fileId_];
  [writer writeLongWithInt:2 withLong:self->accessHash_];
  [writer writeIntWithInt:3 withInt:self->fileSize_];
  if (self->name_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:4 withNSString:self->name_];
  if (self->mimeType_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:5 withNSString:self->mimeType_];
  if (self->thumb_ != nil) {
    [writer writeObjectWithInt:6 withARBserObject:self->thumb_];
  }
  if (self->ext_ != nil) {
    [writer writeBytesWithInt:8 withByteArray:[self->ext_ buildContainer]];
  }
  if ([self getUnmappedObjects] != nil) {
    ARSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ARSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [writer writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}


#line 122
- (NSString *)description {
  NSString *res = @"struct DocumentMessage{";
  (void) JreStrAppendStrong(&res, "$J", @"fileId=", self->fileId_);
  (void) JreStrAppendStrong(&res, "$I", @", fileSize=", self->fileSize_);
  (void) JreStrAppendStrong(&res, "$$", @", name=", self->name_);
  (void) JreStrAppendStrong(&res, "$$", @", mimeType=", self->mimeType_);
  (void) JreStrAppendStrong(&res, "$$", @", thumb=", (self->thumb_ != nil ? @"set" : @"empty"));
  (void) JreStrAppendStrong(&res, "$$", @", ext=", (self->ext_ != nil ? @"set" : @"empty"));
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:withInt:withNSString:withNSString:withARApiFastThumb:withARApiDocumentEx:", "ApiDocumentMessage", NULL, 0x1, NULL, NULL },
    { "init", "ApiDocumentMessage", NULL, 0x1, NULL, NULL },
    { "getHeader", NULL, "I", 0x1, NULL, NULL },
    { "getFileId", NULL, "J", 0x1, NULL, NULL },
    { "getAccessHash", NULL, "J", 0x1, NULL, NULL },
    { "getFileSize", NULL, "I", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getMimeType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getThumb", NULL, "Lim.actor.core.api.ApiFastThumb;", 0x1, NULL, NULL },
    { "getExt", NULL, "Lim.actor.core.api.ApiDocumentEx;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fileId_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "accessHash_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "fileSize_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "mimeType_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "thumb_", NULL, 0x2, "Lim.actor.core.api.ApiFastThumb;", NULL, NULL, .constantValue.asLong = 0 },
    { "ext_", NULL, 0x2, "Lim.actor.core.api.ApiDocumentEx;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARApiDocumentMessage = { 2, "ApiDocumentMessage", "im.actor.core.api", NULL, 0x1, 13, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiDocumentMessage;
}

@end


#line 27
void ARApiDocumentMessage_initWithLong_withLong_withInt_withNSString_withNSString_withARApiFastThumb_withARApiDocumentEx_(ARApiDocumentMessage *self, jlong fileId, jlong accessHash, jint fileSize, NSString *name, NSString *mimeType, ARApiFastThumb *thumb, ARApiDocumentEx *ext) {
  (void) ARApiMessage_init(self);
  
#line 28
  self->fileId_ = fileId;
  self->accessHash_ = accessHash;
  self->fileSize_ = fileSize;
  self->name_ = name;
  self->mimeType_ = mimeType;
  self->thumb_ = thumb;
  self->ext_ = ext;
}


#line 27
ARApiDocumentMessage *new_ARApiDocumentMessage_initWithLong_withLong_withInt_withNSString_withNSString_withARApiFastThumb_withARApiDocumentEx_(jlong fileId, jlong accessHash, jint fileSize, NSString *name, NSString *mimeType, ARApiFastThumb *thumb, ARApiDocumentEx *ext) {
  ARApiDocumentMessage *self = [ARApiDocumentMessage alloc];
  ARApiDocumentMessage_initWithLong_withLong_withInt_withNSString_withNSString_withARApiFastThumb_withARApiDocumentEx_(self, fileId, accessHash, fileSize, name, mimeType, thumb, ext);
  return self;
}


#line 37
void ARApiDocumentMessage_init(ARApiDocumentMessage *self) {
  (void) ARApiMessage_init(self);
}


#line 37
ARApiDocumentMessage *new_ARApiDocumentMessage_init() {
  ARApiDocumentMessage *self = [ARApiDocumentMessage alloc];
  ARApiDocumentMessage_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiDocumentMessage)

#pragma clang diagnostic pop
