//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestStartEmailAuth.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/RequestStartEmailAuth.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestStartEmailAuth () {
 @public
  NSString *email_;
  jint appId_;
  NSString *apiKey_;
  IOSByteArray *deviceHash_;
  NSString *deviceTitle_;
}

@end

J2OBJC_FIELD_SETTER(ARRequestStartEmailAuth, email_, NSString *)
J2OBJC_FIELD_SETTER(ARRequestStartEmailAuth, apiKey_, NSString *)
J2OBJC_FIELD_SETTER(ARRequestStartEmailAuth, deviceHash_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ARRequestStartEmailAuth, deviceTitle_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestStartEmailAuth.java"


#line 18
@implementation ARRequestStartEmailAuth

+ (jint)HEADER {
  return ARRequestStartEmailAuth_HEADER;
}


#line 21
+ (ARRequestStartEmailAuth *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestStartEmailAuth_fromBytesWithByteArray_(data);
}


#line 31
- (instancetype)initWithNSString:(NSString *)email
                         withInt:(jint)appId
                    withNSString:(NSString *)apiKey
                   withByteArray:(IOSByteArray *)deviceHash
                    withNSString:(NSString *)deviceTitle {
  ARRequestStartEmailAuth_initWithNSString_withInt_withNSString_withByteArray_withNSString_(self, email, appId, apiKey, deviceHash, deviceTitle);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 39
- (instancetype)init {
  ARRequestStartEmailAuth_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 44
- (NSString *)getEmail {
  return self->email_;
}

- (jint)getAppId {
  return self->appId_;
}


#line 53
- (NSString *)getApiKey {
  return self->apiKey_;
}


#line 58
- (IOSByteArray *)getDeviceHash {
  return self->deviceHash_;
}


#line 63
- (NSString *)getDeviceTitle {
  return self->deviceTitle_;
}


#line 68
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->email_ = [((ARBserValues *) nil_chk(values)) getStringWithInt:1];
  self->appId_ = [values getIntWithInt:2];
  self->apiKey_ = [values getStringWithInt:3];
  self->deviceHash_ = [values getBytesWithInt:4];
  self->deviceTitle_ = [values getStringWithInt:5];
}


#line 77
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->email_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->email_];
  [writer writeIntWithInt:2 withInt:self->appId_];
  if (self->apiKey_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:3 withNSString:self->apiKey_];
  if (self->deviceHash_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:4 withByteArray:self->deviceHash_];
  if (self->deviceTitle_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:5 withNSString:self->deviceTitle_];
}


#line 98
- (NSString *)description {
  NSString *res = @"rpc StartEmailAuth{";
  (void) JreStrAppendStrong(&res, "$$", @"email=", self->email_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 106
- (jint)getHeaderKey {
  return ARRequestStartEmailAuth_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestStartEmailAuth;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withInt:withNSString:withByteArray:withNSString:", "RequestStartEmailAuth", NULL, 0x1, NULL, NULL },
    { "init", "RequestStartEmailAuth", NULL, 0x1, NULL, NULL },
    { "getEmail", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAppId", NULL, "I", 0x1, NULL, NULL },
    { "getApiKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDeviceHash", NULL, "[B", 0x1, NULL, NULL },
    { "getDeviceTitle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestStartEmailAuth_HEADER },
    { "email_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "appId_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "apiKey_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "deviceHash_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "deviceTitle_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseStartEmailAuth;"};
  static const J2ObjcClassInfo _ARRequestStartEmailAuth = { 2, "RequestStartEmailAuth", "im.actor.core.api.rpc", NULL, 0x1, 12, methods, 6, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseStartEmailAuth;>;" };
  return &_ARRequestStartEmailAuth;
}

@end


#line 21
ARRequestStartEmailAuth *ARRequestStartEmailAuth_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestStartEmailAuth_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestStartEmailAuth_init(), data);
}


#line 31
void ARRequestStartEmailAuth_initWithNSString_withInt_withNSString_withByteArray_withNSString_(ARRequestStartEmailAuth *self, NSString *email, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle) {
  (void) ACRequest_init(self);
  
#line 32
  self->email_ = email;
  self->appId_ = appId;
  self->apiKey_ = apiKey;
  self->deviceHash_ = deviceHash;
  self->deviceTitle_ = deviceTitle;
}


#line 31
ARRequestStartEmailAuth *new_ARRequestStartEmailAuth_initWithNSString_withInt_withNSString_withByteArray_withNSString_(NSString *email, jint appId, NSString *apiKey, IOSByteArray *deviceHash, NSString *deviceTitle) {
  ARRequestStartEmailAuth *self = [ARRequestStartEmailAuth alloc];
  ARRequestStartEmailAuth_initWithNSString_withInt_withNSString_withByteArray_withNSString_(self, email, appId, apiKey, deviceHash, deviceTitle);
  return self;
}


#line 39
void ARRequestStartEmailAuth_init(ARRequestStartEmailAuth *self) {
  (void) ACRequest_init(self);
}


#line 39
ARRequestStartEmailAuth *new_ARRequestStartEmailAuth_init() {
  ARRequestStartEmailAuth *self = [ARRequestStartEmailAuth alloc];
  ARRequestStartEmailAuth_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestStartEmailAuth)

#pragma clang diagnostic pop
