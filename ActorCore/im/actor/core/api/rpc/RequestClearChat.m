//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestClearChat.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiOutPeer.h"
#include "im/actor/core/api/rpc/RequestClearChat.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestClearChat () {
 @public
  ARApiOutPeer *peer_;
}

@end

J2OBJC_FIELD_SETTER(ARRequestClearChat, peer_, ARApiOutPeer *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestClearChat.java"


#line 18
@implementation ARRequestClearChat

+ (jint)HEADER {
  return ARRequestClearChat_HEADER;
}


#line 21
+ (ARRequestClearChat *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestClearChat_fromBytesWithByteArray_(data);
}


#line 27
- (instancetype)initWithARApiOutPeer:(ARApiOutPeer *)peer {
  ARRequestClearChat_initWithARApiOutPeer_(self, peer);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 31
- (instancetype)init {
  ARRequestClearChat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 36
- (ARApiOutPeer *)getPeer {
  return self->peer_;
}


#line 41
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->peer_ = [((ARBserValues *) nil_chk(values)) getObjWithInt:1 withARBserObject:new_ARApiOutPeer_init()];
}


#line 46
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->peer_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withARBserObject:self->peer_];
}


#line 54
- (NSString *)description {
  NSString *res = @"rpc ClearChat{";
  (void) JreStrAppendStrong(&res, "$@", @"peer=", self->peer_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 62
- (jint)getHeaderKey {
  return ARRequestClearChat_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestClearChat;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithARApiOutPeer:", "RequestClearChat", NULL, 0x1, NULL, NULL },
    { "init", "RequestClearChat", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.api.ApiOutPeer;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestClearChat_HEADER },
    { "peer_", NULL, 0x2, "Lim.actor.core.api.ApiOutPeer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseSeq;"};
  static const J2ObjcClassInfo _ARRequestClearChat = { 2, "RequestClearChat", "im.actor.core.api.rpc", NULL, 0x1, 8, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseSeq;>;" };
  return &_ARRequestClearChat;
}

@end


#line 21
ARRequestClearChat *ARRequestClearChat_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestClearChat_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestClearChat_init(), data);
}


#line 27
void ARRequestClearChat_initWithARApiOutPeer_(ARRequestClearChat *self, ARApiOutPeer *peer) {
  (void) ACRequest_init(self);
  
#line 28
  self->peer_ = peer;
}


#line 27
ARRequestClearChat *new_ARRequestClearChat_initWithARApiOutPeer_(ARApiOutPeer *peer) {
  ARRequestClearChat *self = [ARRequestClearChat alloc];
  ARRequestClearChat_initWithARApiOutPeer_(self, peer);
  return self;
}


#line 31
void ARRequestClearChat_init(ARRequestClearChat *self) {
  (void) ACRequest_init(self);
}


#line 31
ARRequestClearChat *new_ARRequestClearChat_init() {
  ARRequestClearChat *self = [ARRequestClearChat alloc];
  ARRequestClearChat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestClearChat)

#pragma clang diagnostic pop
