//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseGetDifference.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiDifferenceUpdate.h"
#include "im/actor/core/api/ApiGroup.h"
#include "im/actor/core/api/ApiUser.h"
#include "im/actor/core/api/rpc/ResponseGetDifference.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseGetDifference () {
 @public
  jint seq_;
  IOSByteArray *state_;
  id<JavaUtilList> users_;
  id<JavaUtilList> groups_;
  id<JavaUtilList> updates_;
  jboolean needMore_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseGetDifference, state_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ARResponseGetDifference, users_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ARResponseGetDifference, groups_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ARResponseGetDifference, updates_, id<JavaUtilList>)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseGetDifference.java"


#line 18
@implementation ARResponseGetDifference

+ (jint)HEADER {
  return ARResponseGetDifference_HEADER;
}


#line 21
+ (ARResponseGetDifference *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseGetDifference_fromBytesWithByteArray_(data);
}


#line 32
- (instancetype)initWithInt:(jint)seq
              withByteArray:(IOSByteArray *)state
           withJavaUtilList:(id<JavaUtilList>)users
           withJavaUtilList:(id<JavaUtilList>)groups
           withJavaUtilList:(id<JavaUtilList>)updates
                withBoolean:(jboolean)needMore {
  ARResponseGetDifference_initWithInt_withByteArray_withJavaUtilList_withJavaUtilList_withJavaUtilList_withBoolean_(self, seq, state, users, groups, updates, needMore);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 41
- (instancetype)init {
  ARResponseGetDifference_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 45
- (jint)getSeq {
  return self->seq_;
}


#line 50
- (IOSByteArray *)getState {
  return self->state_;
}


#line 55
- (id<JavaUtilList>)getUsers {
  return self->users_;
}


#line 60
- (id<JavaUtilList>)getGroups {
  return self->groups_;
}


#line 65
- (id<JavaUtilList>)getUpdates {
  return self->updates_;
}

- (jboolean)needMore {
  return self->needMore_;
}


#line 74
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->seq_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->state_ = [values getBytesWithInt:2];
  id<JavaUtilList> _users = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [values getRepeatedCountWithInt:3]; i++) {
    [_users addWithId:new_ARApiUser_init()];
  }
  self->users_ = [values getRepeatedObjWithInt:3 withJavaUtilList:_users];
  id<JavaUtilList> _groups = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [values getRepeatedCountWithInt:6]; i++) {
    [_groups addWithId:new_ARApiGroup_init()];
  }
  self->groups_ = [values getRepeatedObjWithInt:6 withJavaUtilList:_groups];
  id<JavaUtilList> _updates = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [values getRepeatedCountWithInt:4]; i++) {
    [_updates addWithId:new_ARApiDifferenceUpdate_init()];
  }
  self->updates_ = [values getRepeatedObjWithInt:4 withJavaUtilList:_updates];
  self->needMore_ = [values getBoolWithInt:5];
}


#line 96
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->seq_];
  if (self->state_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:2 withByteArray:self->state_];
  [writer writeRepeatedObjWithInt:3 withJavaUtilList:self->users_];
  [writer writeRepeatedObjWithInt:6 withJavaUtilList:self->groups_];
  [writer writeRepeatedObjWithInt:4 withJavaUtilList:self->updates_];
  [writer writeBoolWithInt:5 withBoolean:self->needMore_];
}


#line 109
- (NSString *)description {
  NSString *res = @"tuple GetDifference{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 116
- (jint)getHeaderKey {
  return ARResponseGetDifference_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseGetDifference;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:withByteArray:withJavaUtilList:withJavaUtilList:withJavaUtilList:withBoolean:", "ResponseGetDifference", NULL, 0x1, NULL, NULL },
    { "init", "ResponseGetDifference", NULL, 0x1, NULL, NULL },
    { "getSeq", NULL, "I", 0x1, NULL, NULL },
    { "getState", NULL, "[B", 0x1, NULL, NULL },
    { "getUsers", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getGroups", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getUpdates", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "needMore", NULL, "Z", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseGetDifference_HEADER },
    { "seq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "users_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/api/ApiUser;>;", .constantValue.asLong = 0 },
    { "groups_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/api/ApiGroup;>;", .constantValue.asLong = 0 },
    { "updates_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lim/actor/core/api/ApiDifferenceUpdate;>;", .constantValue.asLong = 0 },
    { "needMore_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseGetDifference = { 2, "ResponseGetDifference", "im.actor.core.api.rpc", NULL, 0x1, 13, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseGetDifference;
}

@end


#line 21
ARResponseGetDifference *ARResponseGetDifference_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseGetDifference_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseGetDifference_init(), data);
}


#line 32
void ARResponseGetDifference_initWithInt_withByteArray_withJavaUtilList_withJavaUtilList_withJavaUtilList_withBoolean_(ARResponseGetDifference *self, jint seq, IOSByteArray *state, id<JavaUtilList> users, id<JavaUtilList> groups, id<JavaUtilList> updates, jboolean needMore) {
  (void) ACResponse_init(self);
  
#line 33
  self->seq_ = seq;
  self->state_ = state;
  self->users_ = users;
  self->groups_ = groups;
  self->updates_ = updates;
  self->needMore_ = needMore;
}


#line 32
ARResponseGetDifference *new_ARResponseGetDifference_initWithInt_withByteArray_withJavaUtilList_withJavaUtilList_withJavaUtilList_withBoolean_(jint seq, IOSByteArray *state, id<JavaUtilList> users, id<JavaUtilList> groups, id<JavaUtilList> updates, jboolean needMore) {
  ARResponseGetDifference *self = [ARResponseGetDifference alloc];
  ARResponseGetDifference_initWithInt_withByteArray_withJavaUtilList_withJavaUtilList_withJavaUtilList_withBoolean_(self, seq, state, users, groups, updates, needMore);
  return self;
}


#line 41
void ARResponseGetDifference_init(ARResponseGetDifference *self) {
  (void) ACResponse_init(self);
}


#line 41
ARResponseGetDifference *new_ARResponseGetDifference_init() {
  ARResponseGetDifference *self = [ARResponseGetDifference alloc];
  ARResponseGetDifference_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseGetDifference)

#pragma clang diagnostic pop
