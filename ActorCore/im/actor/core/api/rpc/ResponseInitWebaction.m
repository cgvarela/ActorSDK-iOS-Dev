//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseInitWebaction.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/rpc/ResponseInitWebaction.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseInitWebaction () {
 @public
  NSString *uri_;
  NSString *regexp_;
  NSString *actionHash_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseInitWebaction, uri_, NSString *)
J2OBJC_FIELD_SETTER(ARResponseInitWebaction, regexp_, NSString *)
J2OBJC_FIELD_SETTER(ARResponseInitWebaction, actionHash_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseInitWebaction.java"


#line 18
@implementation ARResponseInitWebaction

+ (jint)HEADER {
  return ARResponseInitWebaction_HEADER;
}


#line 21
+ (ARResponseInitWebaction *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseInitWebaction_fromBytesWithByteArray_(data);
}


#line 29
- (instancetype)initWithNSString:(NSString *)uri
                    withNSString:(NSString *)regexp
                    withNSString:(NSString *)actionHash {
  ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(self, uri, regexp, actionHash);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 35
- (instancetype)init {
  ARResponseInitWebaction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 40
- (NSString *)getUri {
  return self->uri_;
}


#line 45
- (NSString *)getRegexp {
  return self->regexp_;
}


#line 50
- (NSString *)getActionHash {
  return self->actionHash_;
}


#line 55
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->uri_ = [((ARBserValues *) nil_chk(values)) getStringWithInt:1];
  self->regexp_ = [values getStringWithInt:2];
  self->actionHash_ = [values getStringWithInt:3];
}


#line 62
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->uri_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->uri_];
  if (self->regexp_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:2 withNSString:self->regexp_];
  if (self->actionHash_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:3 withNSString:self->actionHash_];
}


#line 78
- (NSString *)description {
  NSString *res = @"tuple InitWebaction{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 85
- (jint)getHeaderKey {
  return ARResponseInitWebaction_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseInitWebaction;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withNSString:withNSString:", "ResponseInitWebaction", NULL, 0x1, NULL, NULL },
    { "init", "ResponseInitWebaction", NULL, 0x1, NULL, NULL },
    { "getUri", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getRegexp", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getActionHash", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseInitWebaction_HEADER },
    { "uri_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "regexp_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "actionHash_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseInitWebaction = { 2, "ResponseInitWebaction", "im.actor.core.api.rpc", NULL, 0x1, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseInitWebaction;
}

@end


#line 21
ARResponseInitWebaction *ARResponseInitWebaction_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseInitWebaction_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseInitWebaction_init(), data);
}


#line 29
void ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(ARResponseInitWebaction *self, NSString *uri, NSString *regexp, NSString *actionHash) {
  (void) ACResponse_init(self);
  
#line 30
  self->uri_ = uri;
  self->regexp_ = regexp;
  self->actionHash_ = actionHash;
}


#line 29
ARResponseInitWebaction *new_ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(NSString *uri, NSString *regexp, NSString *actionHash) {
  ARResponseInitWebaction *self = [ARResponseInitWebaction alloc];
  ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(self, uri, regexp, actionHash);
  return self;
}

void ARResponseInitWebaction_init(ARResponseInitWebaction *self) {
  (void) ACResponse_init(self);
}


#line 35
ARResponseInitWebaction *new_ARResponseInitWebaction_init() {
  ARResponseInitWebaction *self = [ARResponseInitWebaction alloc];
  ARResponseInitWebaction_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseInitWebaction)

#pragma clang diagnostic pop
