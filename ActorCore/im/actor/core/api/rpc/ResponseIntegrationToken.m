//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseIntegrationToken.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/rpc/ResponseIntegrationToken.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseIntegrationToken () {
 @public
  NSString *token_;
  NSString *url_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseIntegrationToken, token_, NSString *)
J2OBJC_FIELD_SETTER(ARResponseIntegrationToken, url_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseIntegrationToken.java"


#line 18
@implementation ARResponseIntegrationToken

+ (jint)HEADER {
  return ARResponseIntegrationToken_HEADER;
}


#line 21
+ (ARResponseIntegrationToken *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseIntegrationToken_fromBytesWithByteArray_(data);
}


#line 28
- (instancetype)initWithNSString:(NSString *)token
                    withNSString:(NSString *)url {
  ARResponseIntegrationToken_initWithNSString_withNSString_(self, token, url);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARResponseIntegrationToken_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 38
- (NSString *)getToken {
  return self->token_;
}


#line 43
- (NSString *)getUrl {
  return self->url_;
}


#line 48
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->token_ = [((ARBserValues *) nil_chk(values)) getStringWithInt:1];
  self->url_ = [values getStringWithInt:2];
}


#line 54
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->token_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->token_];
  if (self->url_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:2 withNSString:self->url_];
}


#line 66
- (NSString *)description {
  NSString *res = @"response IntegrationToken{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 73
- (jint)getHeaderKey {
  return ARResponseIntegrationToken_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseIntegrationToken;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withNSString:", "ResponseIntegrationToken", NULL, 0x1, NULL, NULL },
    { "init", "ResponseIntegrationToken", NULL, 0x1, NULL, NULL },
    { "getToken", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseIntegrationToken_HEADER },
    { "token_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "url_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseIntegrationToken = { 2, "ResponseIntegrationToken", "im.actor.core.api.rpc", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseIntegrationToken;
}

@end


#line 21
ARResponseIntegrationToken *ARResponseIntegrationToken_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseIntegrationToken_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseIntegrationToken_init(), data);
}

void ARResponseIntegrationToken_initWithNSString_withNSString_(ARResponseIntegrationToken *self, NSString *token, NSString *url) {
  (void) ACResponse_init(self);
  
#line 29
  self->token_ = token;
  self->url_ = url;
}


#line 28
ARResponseIntegrationToken *new_ARResponseIntegrationToken_initWithNSString_withNSString_(NSString *token, NSString *url) {
  ARResponseIntegrationToken *self = [ARResponseIntegrationToken alloc];
  ARResponseIntegrationToken_initWithNSString_withNSString_(self, token, url);
  return self;
}


#line 33
void ARResponseIntegrationToken_init(ARResponseIntegrationToken *self) {
  (void) ACResponse_init(self);
}


#line 33
ARResponseIntegrationToken *new_ARResponseIntegrationToken_init() {
  ARResponseIntegrationToken *self = [ARResponseIntegrationToken alloc];
  ARResponseIntegrationToken_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseIntegrationToken)

#pragma clang diagnostic pop
