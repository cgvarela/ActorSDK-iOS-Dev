//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseSeqDate.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/ResponseSeqDate.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/bser/Utils.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseSeqDate () {
 @public
  jint seq_;
  IOSByteArray *state_;
  jlong date_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseSeqDate, state_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseSeqDate.java"


#line 18
@implementation ARResponseSeqDate

+ (jint)HEADER {
  return ARResponseSeqDate_HEADER;
}


#line 21
+ (ARResponseSeqDate *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseSeqDate_fromBytesWithByteArray_(data);
}


#line 29
- (instancetype)initWithInt:(jint)seq
              withByteArray:(IOSByteArray *)state
                   withLong:(jlong)date {
  ARResponseSeqDate_initWithInt_withByteArray_withLong_(self, seq, state, date);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 35
- (instancetype)init {
  ARResponseSeqDate_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 39
- (jint)getSeq {
  return self->seq_;
}


#line 44
- (IOSByteArray *)getState {
  return self->state_;
}

- (jlong)getDate {
  return self->date_;
}


#line 53
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->seq_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->state_ = [values getBytesWithInt:2];
  self->date_ = [values getLongWithInt:3];
}


#line 60
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->seq_];
  if (self->state_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:2 withByteArray:self->state_];
  [writer writeLongWithInt:3 withLong:self->date_];
}


#line 70
- (NSString *)description {
  NSString *res = @"response SeqDate{";
  (void) JreStrAppendStrong(&res, "$I", @"seq=", self->seq_);
  (void) JreStrAppendStrong(&res, "$$", @", state=", ARUtils_byteArrayToStringWithByteArray_(self->state_));
  (void) JreStrAppendStrong(&res, "$J", @", date=", self->date_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 80
- (jint)getHeaderKey {
  return ARResponseSeqDate_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseSeqDate;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:withByteArray:withLong:", "ResponseSeqDate", NULL, 0x1, NULL, NULL },
    { "init", "ResponseSeqDate", NULL, 0x1, NULL, NULL },
    { "getSeq", NULL, "I", 0x1, NULL, NULL },
    { "getState", NULL, "[B", 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseSeqDate_HEADER },
    { "seq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseSeqDate = { 2, "ResponseSeqDate", "im.actor.core.api.rpc", NULL, 0x1, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseSeqDate;
}

@end


#line 21
ARResponseSeqDate *ARResponseSeqDate_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseSeqDate_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseSeqDate_init(), data);
}


#line 29
void ARResponseSeqDate_initWithInt_withByteArray_withLong_(ARResponseSeqDate *self, jint seq, IOSByteArray *state, jlong date) {
  (void) ACResponse_init(self);
  
#line 30
  self->seq_ = seq;
  self->state_ = state;
  self->date_ = date;
}


#line 29
ARResponseSeqDate *new_ARResponseSeqDate_initWithInt_withByteArray_withLong_(jint seq, IOSByteArray *state, jlong date) {
  ARResponseSeqDate *self = [ARResponseSeqDate alloc];
  ARResponseSeqDate_initWithInt_withByteArray_withLong_(self, seq, state, date);
  return self;
}

void ARResponseSeqDate_init(ARResponseSeqDate *self) {
  (void) ACResponse_init(self);
}


#line 35
ARResponseSeqDate *new_ARResponseSeqDate_init() {
  ARResponseSeqDate *self = [ARResponseSeqDate alloc];
  ARResponseSeqDate_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseSeqDate)

#pragma clang diagnostic pop
