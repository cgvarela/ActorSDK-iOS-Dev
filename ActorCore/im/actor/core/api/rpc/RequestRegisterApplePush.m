//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestRegisterApplePush.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/RequestRegisterApplePush.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestRegisterApplePush () {
 @public
  jint apnsKey_;
  NSString *token_;
}

@end

J2OBJC_FIELD_SETTER(ARRequestRegisterApplePush, token_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestRegisterApplePush.java"


#line 18
@implementation ARRequestRegisterApplePush

+ (jint)HEADER {
  return ARRequestRegisterApplePush_HEADER;
}


#line 21
+ (ARRequestRegisterApplePush *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestRegisterApplePush_fromBytesWithByteArray_(data);
}


#line 28
- (instancetype)initWithInt:(jint)apnsKey
               withNSString:(NSString *)token {
  ARRequestRegisterApplePush_initWithInt_withNSString_(self, apnsKey, token);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARRequestRegisterApplePush_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 37
- (jint)getApnsKey {
  return self->apnsKey_;
}


#line 42
- (NSString *)getToken {
  return self->token_;
}


#line 47
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->apnsKey_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->token_ = [values getStringWithInt:2];
}


#line 53
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->apnsKey_];
  if (self->token_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeStringWithInt:2 withNSString:self->token_];
}


#line 62
- (NSString *)description {
  NSString *res = @"rpc RegisterApplePush{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 69
- (jint)getHeaderKey {
  return ARRequestRegisterApplePush_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestRegisterApplePush;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:withNSString:", "RequestRegisterApplePush", NULL, 0x1, NULL, NULL },
    { "init", "RequestRegisterApplePush", NULL, 0x1, NULL, NULL },
    { "getApnsKey", NULL, "I", 0x1, NULL, NULL },
    { "getToken", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestRegisterApplePush_HEADER },
    { "apnsKey_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "token_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseVoid;"};
  static const J2ObjcClassInfo _ARRequestRegisterApplePush = { 2, "RequestRegisterApplePush", "im.actor.core.api.rpc", NULL, 0x1, 9, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseVoid;>;" };
  return &_ARRequestRegisterApplePush;
}

@end


#line 21
ARRequestRegisterApplePush *ARRequestRegisterApplePush_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestRegisterApplePush_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestRegisterApplePush_init(), data);
}

void ARRequestRegisterApplePush_initWithInt_withNSString_(ARRequestRegisterApplePush *self, jint apnsKey, NSString *token) {
  (void) ACRequest_init(self);
  
#line 29
  self->apnsKey_ = apnsKey;
  self->token_ = token;
}


#line 28
ARRequestRegisterApplePush *new_ARRequestRegisterApplePush_initWithInt_withNSString_(jint apnsKey, NSString *token) {
  ARRequestRegisterApplePush *self = [ARRequestRegisterApplePush alloc];
  ARRequestRegisterApplePush_initWithInt_withNSString_(self, apnsKey, token);
  return self;
}


#line 33
void ARRequestRegisterApplePush_init(ARRequestRegisterApplePush *self) {
  (void) ACRequest_init(self);
}


#line 33
ARRequestRegisterApplePush *new_ARRequestRegisterApplePush_init() {
  ARRequestRegisterApplePush *self = [ARRequestRegisterApplePush alloc];
  ARRequestRegisterApplePush_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestRegisterApplePush)

#pragma clang diagnostic pop
