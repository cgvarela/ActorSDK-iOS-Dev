//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestLoadHistory.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiOutPeer.h"
#include "im/actor/core/api/rpc/RequestLoadHistory.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestLoadHistory () {
 @public
  ARApiOutPeer *peer_;
  jlong minDate_;
  jint limit_;
}

@end

J2OBJC_FIELD_SETTER(ARRequestLoadHistory, peer_, ARApiOutPeer *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestLoadHistory.java"


#line 18
@implementation ARRequestLoadHistory

+ (jint)HEADER {
  return ARRequestLoadHistory_HEADER;
}


#line 21
+ (ARRequestLoadHistory *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestLoadHistory_fromBytesWithByteArray_(data);
}


#line 29
- (instancetype)initWithARApiOutPeer:(ARApiOutPeer *)peer
                            withLong:(jlong)minDate
                             withInt:(jint)limit {
  ARRequestLoadHistory_initWithARApiOutPeer_withLong_withInt_(self, peer, minDate, limit);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 35
- (instancetype)init {
  ARRequestLoadHistory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 40
- (ARApiOutPeer *)getPeer {
  return self->peer_;
}

- (jlong)getMinDate {
  return self->minDate_;
}

- (jint)getLimit {
  return self->limit_;
}


#line 53
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->peer_ = [((ARBserValues *) nil_chk(values)) getObjWithInt:1 withARBserObject:new_ARApiOutPeer_init()];
  self->minDate_ = [values getLongWithInt:3];
  self->limit_ = [values getIntWithInt:4];
}


#line 60
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->peer_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withARBserObject:self->peer_];
  [writer writeLongWithInt:3 withLong:self->minDate_];
  [writer writeIntWithInt:4 withInt:self->limit_];
}


#line 70
- (NSString *)description {
  NSString *res = @"rpc LoadHistory{";
  (void) JreStrAppendStrong(&res, "$@", @"peer=", self->peer_);
  (void) JreStrAppendStrong(&res, "$J", @", minDate=", self->minDate_);
  (void) JreStrAppendStrong(&res, "$I", @", limit=", self->limit_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 80
- (jint)getHeaderKey {
  return ARRequestLoadHistory_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestLoadHistory;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithARApiOutPeer:withLong:withInt:", "RequestLoadHistory", NULL, 0x1, NULL, NULL },
    { "init", "RequestLoadHistory", NULL, 0x1, NULL, NULL },
    { "getPeer", NULL, "Lim.actor.core.api.ApiOutPeer;", 0x1, NULL, NULL },
    { "getMinDate", NULL, "J", 0x1, NULL, NULL },
    { "getLimit", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestLoadHistory_HEADER },
    { "peer_", NULL, 0x2, "Lim.actor.core.api.ApiOutPeer;", NULL, NULL, .constantValue.asLong = 0 },
    { "minDate_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "limit_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseLoadHistory;"};
  static const J2ObjcClassInfo _ARRequestLoadHistory = { 2, "RequestLoadHistory", "im.actor.core.api.rpc", NULL, 0x1, 10, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseLoadHistory;>;" };
  return &_ARRequestLoadHistory;
}

@end


#line 21
ARRequestLoadHistory *ARRequestLoadHistory_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestLoadHistory_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestLoadHistory_init(), data);
}


#line 29
void ARRequestLoadHistory_initWithARApiOutPeer_withLong_withInt_(ARRequestLoadHistory *self, ARApiOutPeer *peer, jlong minDate, jint limit) {
  (void) ACRequest_init(self);
  
#line 30
  self->peer_ = peer;
  self->minDate_ = minDate;
  self->limit_ = limit;
}


#line 29
ARRequestLoadHistory *new_ARRequestLoadHistory_initWithARApiOutPeer_withLong_withInt_(ARApiOutPeer *peer, jlong minDate, jint limit) {
  ARRequestLoadHistory *self = [ARRequestLoadHistory alloc];
  ARRequestLoadHistory_initWithARApiOutPeer_withLong_withInt_(self, peer, minDate, limit);
  return self;
}

void ARRequestLoadHistory_init(ARRequestLoadHistory *self) {
  (void) ACRequest_init(self);
}


#line 35
ARRequestLoadHistory *new_ARRequestLoadHistory_init() {
  ARRequestLoadHistory *self = [ARRequestLoadHistory alloc];
  ARRequestLoadHistory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestLoadHistory)

#pragma clang diagnostic pop
