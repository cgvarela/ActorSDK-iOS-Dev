//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestLoadWallpappers.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/RequestLoadWallpappers.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestLoadWallpappers () {
 @public
  jint maxWidth_;
  jint maxHeight_;
}

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestLoadWallpappers.java"


#line 18
@implementation ARRequestLoadWallpappers

+ (jint)HEADER {
  return ARRequestLoadWallpappers_HEADER;
}


#line 21
+ (ARRequestLoadWallpappers *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestLoadWallpappers_fromBytesWithByteArray_(data);
}


#line 28
- (instancetype)initWithInt:(jint)maxWidth
                    withInt:(jint)maxHeight {
  ARRequestLoadWallpappers_initWithInt_withInt_(self, maxWidth, maxHeight);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARRequestLoadWallpappers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 37
- (jint)getMaxWidth {
  return self->maxWidth_;
}

- (jint)getMaxHeight {
  return self->maxHeight_;
}


#line 46
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->maxWidth_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->maxHeight_ = [values getIntWithInt:2];
}


#line 52
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->maxWidth_];
  [writer writeIntWithInt:2 withInt:self->maxHeight_];
}


#line 58
- (NSString *)description {
  NSString *res = @"rpc LoadWallpappers{";
  (void) JreStrAppendStrong(&res, "$I", @"maxWidth=", self->maxWidth_);
  (void) JreStrAppendStrong(&res, "$I", @", maxHeight=", self->maxHeight_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 67
- (jint)getHeaderKey {
  return ARRequestLoadWallpappers_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestLoadWallpappers;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:withInt:", "RequestLoadWallpappers", NULL, 0x1, NULL, NULL },
    { "init", "RequestLoadWallpappers", NULL, 0x1, NULL, NULL },
    { "getMaxWidth", NULL, "I", 0x1, NULL, NULL },
    { "getMaxHeight", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestLoadWallpappers_HEADER },
    { "maxWidth_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxHeight_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseLoadWallpappers;"};
  static const J2ObjcClassInfo _ARRequestLoadWallpappers = { 2, "RequestLoadWallpappers", "im.actor.core.api.rpc", NULL, 0x1, 9, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseLoadWallpappers;>;" };
  return &_ARRequestLoadWallpappers;
}

@end


#line 21
ARRequestLoadWallpappers *ARRequestLoadWallpappers_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestLoadWallpappers_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestLoadWallpappers_init(), data);
}

void ARRequestLoadWallpappers_initWithInt_withInt_(ARRequestLoadWallpappers *self, jint maxWidth, jint maxHeight) {
  (void) ACRequest_init(self);
  
#line 29
  self->maxWidth_ = maxWidth;
  self->maxHeight_ = maxHeight;
}


#line 28
ARRequestLoadWallpappers *new_ARRequestLoadWallpappers_initWithInt_withInt_(jint maxWidth, jint maxHeight) {
  ARRequestLoadWallpappers *self = [ARRequestLoadWallpappers alloc];
  ARRequestLoadWallpappers_initWithInt_withInt_(self, maxWidth, maxHeight);
  return self;
}


#line 33
void ARRequestLoadWallpappers_init(ARRequestLoadWallpappers *self) {
  (void) ACRequest_init(self);
}


#line 33
ARRequestLoadWallpappers *new_ARRequestLoadWallpappers_init() {
  ARRequestLoadWallpappers *self = [ARRequestLoadWallpappers alloc];
  ARRequestLoadWallpappers_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestLoadWallpappers)

#pragma clang diagnostic pop
