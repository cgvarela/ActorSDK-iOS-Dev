//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseGetFileUrl.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/ResponseGetFileUrl.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseGetFileUrl () {
 @public
  NSString *url_;
  jint timeout_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseGetFileUrl, url_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseGetFileUrl.java"


#line 18
@implementation ARResponseGetFileUrl

+ (jint)HEADER {
  return ARResponseGetFileUrl_HEADER;
}


#line 21
+ (ARResponseGetFileUrl *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseGetFileUrl_fromBytesWithByteArray_(data);
}


#line 28
- (instancetype)initWithNSString:(NSString *)url
                         withInt:(jint)timeout {
  ARResponseGetFileUrl_initWithNSString_withInt_(self, url, timeout);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARResponseGetFileUrl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 38
- (NSString *)getUrl {
  return self->url_;
}

- (jint)getTimeout {
  return self->timeout_;
}


#line 47
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->url_ = [((ARBserValues *) nil_chk(values)) getStringWithInt:1];
  self->timeout_ = [values getIntWithInt:2];
}


#line 53
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->url_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeStringWithInt:1 withNSString:self->url_];
  [writer writeIntWithInt:2 withInt:self->timeout_];
}


#line 62
- (NSString *)description {
  NSString *res = @"tuple GetFileUrl{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 69
- (jint)getHeaderKey {
  return ARResponseGetFileUrl_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseGetFileUrl;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withInt:", "ResponseGetFileUrl", NULL, 0x1, NULL, NULL },
    { "init", "ResponseGetFileUrl", NULL, 0x1, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTimeout", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseGetFileUrl_HEADER },
    { "url_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "timeout_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseGetFileUrl = { 2, "ResponseGetFileUrl", "im.actor.core.api.rpc", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseGetFileUrl;
}

@end


#line 21
ARResponseGetFileUrl *ARResponseGetFileUrl_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseGetFileUrl_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseGetFileUrl_init(), data);
}

void ARResponseGetFileUrl_initWithNSString_withInt_(ARResponseGetFileUrl *self, NSString *url, jint timeout) {
  (void) ACResponse_init(self);
  
#line 29
  self->url_ = url;
  self->timeout_ = timeout;
}


#line 28
ARResponseGetFileUrl *new_ARResponseGetFileUrl_initWithNSString_withInt_(NSString *url, jint timeout) {
  ARResponseGetFileUrl *self = [ARResponseGetFileUrl alloc];
  ARResponseGetFileUrl_initWithNSString_withInt_(self, url, timeout);
  return self;
}


#line 33
void ARResponseGetFileUrl_init(ARResponseGetFileUrl *self) {
  (void) ACResponse_init(self);
}


#line 33
ARResponseGetFileUrl *new_ARResponseGetFileUrl_init() {
  ARResponseGetFileUrl *self = [ARResponseGetFileUrl alloc];
  ARResponseGetFileUrl_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseGetFileUrl)

#pragma clang diagnostic pop
