//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestTerminateSession.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/rpc/RequestTerminateSession.h"
#include "im/actor/core/network/parser/Request.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARRequestTerminateSession () {
 @public
  jint id__;
}

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/RequestTerminateSession.java"


#line 18
@implementation ARRequestTerminateSession

+ (jint)HEADER {
  return ARRequestTerminateSession_HEADER;
}


#line 21
+ (ARRequestTerminateSession *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARRequestTerminateSession_fromBytesWithByteArray_(data);
}


#line 27
- (instancetype)initWithInt:(jint)id_ {
  ARRequestTerminateSession_initWithInt_(self, id_);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 31
- (instancetype)init {
  ARRequestTerminateSession_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 35
- (jint)getId {
  return self->id__;
}


#line 40
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->id__ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
}


#line 45
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->id__];
}


#line 50
- (NSString *)description {
  NSString *res = @"rpc TerminateSession{";
  (void) JreStrAppendStrong(&res, "$I", @"id=", self->id__);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 58
- (jint)getHeaderKey {
  return ARRequestTerminateSession_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.RequestTerminateSession;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:", "RequestTerminateSession", NULL, 0x1, NULL, NULL },
    { "init", "RequestTerminateSession", NULL, 0x1, NULL, NULL },
    { "getId", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARRequestTerminateSession_HEADER },
    { "id__", "id", 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lim.actor.core.api.rpc.ResponseVoid;"};
  static const J2ObjcClassInfo _ARRequestTerminateSession = { 2, "RequestTerminateSession", "im.actor.core.api.rpc", NULL, 0x1, 8, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Lim/actor/core/network/parser/Request<Lim/actor/core/api/rpc/ResponseVoid;>;" };
  return &_ARRequestTerminateSession;
}

@end


#line 21
ARRequestTerminateSession *ARRequestTerminateSession_fromBytesWithByteArray_(IOSByteArray *data) {
  ARRequestTerminateSession_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARRequestTerminateSession_init(), data);
}


#line 27
void ARRequestTerminateSession_initWithInt_(ARRequestTerminateSession *self, jint id_) {
  (void) ACRequest_init(self);
  
#line 28
  self->id__ = id_;
}


#line 27
ARRequestTerminateSession *new_ARRequestTerminateSession_initWithInt_(jint id_) {
  ARRequestTerminateSession *self = [ARRequestTerminateSession alloc];
  ARRequestTerminateSession_initWithInt_(self, id_);
  return self;
}


#line 31
void ARRequestTerminateSession_init(ARRequestTerminateSession *self) {
  (void) ACRequest_init(self);
}


#line 31
ARRequestTerminateSession *new_ARRequestTerminateSession_init() {
  ARRequestTerminateSession *self = [ARRequestTerminateSession alloc];
  ARRequestTerminateSession_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARRequestTerminateSession)

#pragma clang diagnostic pop
