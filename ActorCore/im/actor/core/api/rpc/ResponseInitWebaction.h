//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseInitWebaction.java
//

#ifndef _ImActorCoreApiRpcResponseInitWebaction_H_
#define _ImActorCoreApiRpcResponseInitWebaction_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include <ActorSDK/im/actor/core/network/parser/Response.h>

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

#define ARResponseInitWebaction_HEADER 117

@interface ARResponseInitWebaction : ACResponse

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)uri
                    withNSString:(NSString *)regexp
                    withNSString:(NSString *)actionHash;

+ (ARResponseInitWebaction *)fromBytesWithByteArray:(IOSByteArray *)data;

- (NSString *)getActionHash;

- (jint)getHeaderKey;

- (NSString *)getRegexp;

- (NSString *)getUri;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARResponseInitWebaction)

J2OBJC_STATIC_FIELD_GETTER(ARResponseInitWebaction, HEADER, jint)

FOUNDATION_EXPORT ARResponseInitWebaction *ARResponseInitWebaction_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(ARResponseInitWebaction *self, NSString *uri, NSString *regexp, NSString *actionHash);

FOUNDATION_EXPORT ARResponseInitWebaction *new_ARResponseInitWebaction_initWithNSString_withNSString_withNSString_(NSString *uri, NSString *regexp, NSString *actionHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ARResponseInitWebaction_init(ARResponseInitWebaction *self);

FOUNDATION_EXPORT ARResponseInitWebaction *new_ARResponseInitWebaction_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ARResponseInitWebaction)

@compatibility_alias ImActorCoreApiRpcResponseInitWebaction ARResponseInitWebaction;


#pragma clang diagnostic pop
#endif // _ImActorCoreApiRpcResponseInitWebaction_H_
