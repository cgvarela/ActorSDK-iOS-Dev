//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseEditGroupAvatar.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiAvatar.h"
#include "im/actor/core/api/rpc/ResponseEditGroupAvatar.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARResponseEditGroupAvatar () {
 @public
  ARApiAvatar *avatar_;
  jint seq_;
  IOSByteArray *state_;
  jlong date_;
}

@end

J2OBJC_FIELD_SETTER(ARResponseEditGroupAvatar, avatar_, ARApiAvatar *)
J2OBJC_FIELD_SETTER(ARResponseEditGroupAvatar, state_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseEditGroupAvatar.java"


#line 18
@implementation ARResponseEditGroupAvatar

+ (jint)HEADER {
  return ARResponseEditGroupAvatar_HEADER;
}


#line 21
+ (ARResponseEditGroupAvatar *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseEditGroupAvatar_fromBytesWithByteArray_(data);
}


#line 30
- (instancetype)initWithARApiAvatar:(ARApiAvatar *)avatar
                            withInt:(jint)seq
                      withByteArray:(IOSByteArray *)state
                           withLong:(jlong)date {
  ARResponseEditGroupAvatar_initWithARApiAvatar_withInt_withByteArray_withLong_(self, avatar, seq, state, date);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 37
- (instancetype)init {
  ARResponseEditGroupAvatar_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 42
- (ARApiAvatar *)getAvatar {
  return self->avatar_;
}

- (jint)getSeq {
  return self->seq_;
}


#line 51
- (IOSByteArray *)getState {
  return self->state_;
}

- (jlong)getDate {
  return self->date_;
}


#line 60
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->avatar_ = [((ARBserValues *) nil_chk(values)) getObjWithInt:1 withARBserObject:new_ARApiAvatar_init()];
  self->seq_ = [values getIntWithInt:2];
  self->state_ = [values getBytesWithInt:3];
  self->date_ = [values getLongWithInt:4];
}


#line 68
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->avatar_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withARBserObject:self->avatar_];
  [writer writeIntWithInt:2 withInt:self->seq_];
  if (self->state_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:3 withByteArray:self->state_];
  [writer writeLongWithInt:4 withLong:self->date_];
}


#line 82
- (NSString *)description {
  NSString *res = @"tuple EditGroupAvatar{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 89
- (jint)getHeaderKey {
  return ARResponseEditGroupAvatar_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseEditGroupAvatar;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithARApiAvatar:withInt:withByteArray:withLong:", "ResponseEditGroupAvatar", NULL, 0x1, NULL, NULL },
    { "init", "ResponseEditGroupAvatar", NULL, 0x1, NULL, NULL },
    { "getAvatar", NULL, "Lim.actor.core.api.ApiAvatar;", 0x1, NULL, NULL },
    { "getSeq", NULL, "I", 0x1, NULL, NULL },
    { "getState", NULL, "[B", 0x1, NULL, NULL },
    { "getDate", NULL, "J", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseEditGroupAvatar_HEADER },
    { "avatar_", NULL, 0x2, "Lim.actor.core.api.ApiAvatar;", NULL, NULL, .constantValue.asLong = 0 },
    { "seq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "date_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARResponseEditGroupAvatar = { 2, "ResponseEditGroupAvatar", "im.actor.core.api.rpc", NULL, 0x1, 11, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseEditGroupAvatar;
}

@end


#line 21
ARResponseEditGroupAvatar *ARResponseEditGroupAvatar_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseEditGroupAvatar_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseEditGroupAvatar_init(), data);
}


#line 30
void ARResponseEditGroupAvatar_initWithARApiAvatar_withInt_withByteArray_withLong_(ARResponseEditGroupAvatar *self, ARApiAvatar *avatar, jint seq, IOSByteArray *state, jlong date) {
  (void) ACResponse_init(self);
  
#line 31
  self->avatar_ = avatar;
  self->seq_ = seq;
  self->state_ = state;
  self->date_ = date;
}


#line 30
ARResponseEditGroupAvatar *new_ARResponseEditGroupAvatar_initWithARApiAvatar_withInt_withByteArray_withLong_(ARApiAvatar *avatar, jint seq, IOSByteArray *state, jlong date) {
  ARResponseEditGroupAvatar *self = [ARResponseEditGroupAvatar alloc];
  ARResponseEditGroupAvatar_initWithARApiAvatar_withInt_withByteArray_withLong_(self, avatar, seq, state, date);
  return self;
}


#line 37
void ARResponseEditGroupAvatar_init(ARResponseEditGroupAvatar *self) {
  (void) ACResponse_init(self);
}


#line 37
ARResponseEditGroupAvatar *new_ARResponseEditGroupAvatar_init() {
  ARResponseEditGroupAvatar *self = [ARResponseEditGroupAvatar alloc];
  ARResponseEditGroupAvatar_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseEditGroupAvatar)

#pragma clang diagnostic pop
