//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseVoid.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/rpc/ResponseVoid.h"
#include "im/actor/core/network/parser/Response.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/rpc/ResponseVoid.java"


#line 18
@implementation ARResponseVoid

+ (jint)HEADER {
  return ARResponseVoid_HEADER;
}


#line 21
+ (ARResponseVoid *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARResponseVoid_fromBytesWithByteArray_(data);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARResponseVoid_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 31
- (void)parseWithARBserValues:(ARBserValues *)values {
}


#line 35
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
}


#line 39
- (NSString *)description {
  NSString *res = @"response Void{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 46
- (jint)getHeaderKey {
  return ARResponseVoid_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.rpc.ResponseVoid;", 0x9, "Ljava.io.IOException;", NULL },
    { "init", "ResponseVoid", NULL, 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARResponseVoid_HEADER },
  };
  static const J2ObjcClassInfo _ARResponseVoid = { 2, "ResponseVoid", "im.actor.core.api.rpc", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARResponseVoid;
}

@end


#line 21
ARResponseVoid *ARResponseVoid_fromBytesWithByteArray_(IOSByteArray *data) {
  ARResponseVoid_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARResponseVoid_init(), data);
}


#line 26
void ARResponseVoid_init(ARResponseVoid *self) {
  (void) ACResponse_init(self);
}


#line 26
ARResponseVoid *new_ARResponseVoid_init() {
  ARResponseVoid *self = [ARResponseVoid alloc];
  ARResponseVoid_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARResponseVoid)

#pragma clang diagnostic pop
