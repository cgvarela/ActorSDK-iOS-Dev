//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/updates/UpdateUserNickChanged.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/updates/UpdateUserNickChanged.h"
#include "im/actor/core/network/parser/Update.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARUpdateUserNickChanged () {
 @public
  jint uid_;
  NSString *nickname_;
}

@end

J2OBJC_FIELD_SETTER(ARUpdateUserNickChanged, nickname_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/updates/UpdateUserNickChanged.java"


#line 18
@implementation ARUpdateUserNickChanged

+ (jint)HEADER {
  return ARUpdateUserNickChanged_HEADER;
}


#line 21
+ (ARUpdateUserNickChanged *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARUpdateUserNickChanged_fromBytesWithByteArray_(data);
}


#line 28
- (instancetype)initWithInt:(jint)uid
               withNSString:(NSString *)nickname {
  ARUpdateUserNickChanged_initWithInt_withNSString_(self, uid, nickname);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  ARUpdateUserNickChanged_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 37
- (jint)getUid {
  return self->uid_;
}


#line 42
- (NSString *)getNickname {
  return self->nickname_;
}


#line 47
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->uid_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->nickname_ = [values optStringWithInt:2];
}


#line 53
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->uid_];
  if (self->nickname_ != nil) {
    [writer writeStringWithInt:2 withNSString:self->nickname_];
  }
}


#line 61
- (NSString *)description {
  NSString *res = @"update UserNickChanged{";
  (void) JreStrAppendStrong(&res, "$I", @"uid=", self->uid_);
  (void) JreStrAppendStrong(&res, "$$", @", nickname=", self->nickname_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 70
- (jint)getHeaderKey {
  return ARUpdateUserNickChanged_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.updates.UpdateUserNickChanged;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:withNSString:", "UpdateUserNickChanged", NULL, 0x1, NULL, NULL },
    { "init", "UpdateUserNickChanged", NULL, 0x1, NULL, NULL },
    { "getUid", NULL, "I", 0x1, NULL, NULL },
    { "getNickname", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARUpdateUserNickChanged_HEADER },
    { "uid_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "nickname_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARUpdateUserNickChanged = { 2, "UpdateUserNickChanged", "im.actor.core.api.updates", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARUpdateUserNickChanged;
}

@end


#line 21
ARUpdateUserNickChanged *ARUpdateUserNickChanged_fromBytesWithByteArray_(IOSByteArray *data) {
  ARUpdateUserNickChanged_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARUpdateUserNickChanged_init(), data);
}

void ARUpdateUserNickChanged_initWithInt_withNSString_(ARUpdateUserNickChanged *self, jint uid, NSString *nickname) {
  (void) ACUpdate_init(self);
  
#line 29
  self->uid_ = uid;
  self->nickname_ = nickname;
}


#line 28
ARUpdateUserNickChanged *new_ARUpdateUserNickChanged_initWithInt_withNSString_(jint uid, NSString *nickname) {
  ARUpdateUserNickChanged *self = [ARUpdateUserNickChanged alloc];
  ARUpdateUserNickChanged_initWithInt_withNSString_(self, uid, nickname);
  return self;
}


#line 33
void ARUpdateUserNickChanged_init(ARUpdateUserNickChanged *self) {
  (void) ACUpdate_init(self);
}


#line 33
ARUpdateUserNickChanged *new_ARUpdateUserNickChanged_init() {
  ARUpdateUserNickChanged *self = [ARUpdateUserNickChanged alloc];
  ARUpdateUserNickChanged_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARUpdateUserNickChanged)

#pragma clang diagnostic pop
