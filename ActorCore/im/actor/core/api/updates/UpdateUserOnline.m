//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/updates/UpdateUserOnline.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/updates/UpdateUserOnline.h"
#include "im/actor/core/network/parser/Update.h"
#include "im/actor/runtime/bser/Bser.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARUpdateUserOnline () {
 @public
  jint uid_;
}

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/updates/UpdateUserOnline.java"


#line 18
@implementation ARUpdateUserOnline

+ (jint)HEADER {
  return ARUpdateUserOnline_HEADER;
}


#line 21
+ (ARUpdateUserOnline *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ARUpdateUserOnline_fromBytesWithByteArray_(data);
}


#line 27
- (instancetype)initWithInt:(jint)uid {
  ARUpdateUserOnline_initWithInt_(self, uid);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 31
- (instancetype)init {
  ARUpdateUserOnline_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 35
- (jint)getUid {
  return self->uid_;
}


#line 40
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->uid_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
}


#line 45
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->uid_];
}


#line 50
- (NSString *)description {
  NSString *res = @"update UserOnline{";
  (void) JreStrAppendStrong(&res, "$I", @"uid=", self->uid_);
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}


#line 58
- (jint)getHeaderKey {
  return ARUpdateUserOnline_HEADER;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.core.api.updates.UpdateUserOnline;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithInt:", "UpdateUserOnline", NULL, 0x1, NULL, NULL },
    { "init", "UpdateUserOnline", NULL, 0x1, NULL, NULL },
    { "getUid", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaderKey", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER", "HEADER", 0x19, "I", NULL, NULL, .constantValue.asInt = ARUpdateUserOnline_HEADER },
    { "uid_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARUpdateUserOnline = { 2, "UpdateUserOnline", "im.actor.core.api.updates", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARUpdateUserOnline;
}

@end


#line 21
ARUpdateUserOnline *ARUpdateUserOnline_fromBytesWithByteArray_(IOSByteArray *data) {
  ARUpdateUserOnline_initialize();
  
#line 22
  return ARBser_parseWithARBserObject_withByteArray_(new_ARUpdateUserOnline_init(), data);
}


#line 27
void ARUpdateUserOnline_initWithInt_(ARUpdateUserOnline *self, jint uid) {
  (void) ACUpdate_init(self);
  
#line 28
  self->uid_ = uid;
}


#line 27
ARUpdateUserOnline *new_ARUpdateUserOnline_initWithInt_(jint uid) {
  ARUpdateUserOnline *self = [ARUpdateUserOnline alloc];
  ARUpdateUserOnline_initWithInt_(self, uid);
  return self;
}


#line 31
void ARUpdateUserOnline_init(ARUpdateUserOnline *self) {
  (void) ACUpdate_init(self);
}


#line 31
ARUpdateUserOnline *new_ARUpdateUserOnline_init() {
  ARUpdateUserOnline *self = [ARUpdateUserOnline alloc];
  ARUpdateUserOnline_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARUpdateUserOnline)

#pragma clang diagnostic pop
