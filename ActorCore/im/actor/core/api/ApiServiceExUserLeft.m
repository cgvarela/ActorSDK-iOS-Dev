//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiServiceExUserLeft.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiServiceEx.h"
#include "im/actor/core/api/ApiServiceExUserLeft.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/collections/SparseArray.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiServiceExUserLeft.java"


#line 17
@implementation ARApiServiceExUserLeft

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ARApiServiceExUserLeft_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 24
- (jint)getHeader {
  return 3;
}


#line 29
- (void)parseWithARBserValues:(ARBserValues *)values {
  if ([((ARBserValues *) nil_chk(values)) hasRemaining]) {
    [self setUnmappedObjectsWithARSparseArray:[values buildRemaining]];
  }
}


#line 36
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if ([self getUnmappedObjects] != nil) {
    ARSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ARSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [((ARBserWriter *) nil_chk(writer)) writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}


#line 47
- (NSString *)description {
  NSString *res = @"struct ServiceExUserLeft{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ApiServiceExUserLeft", NULL, 0x1, NULL, NULL },
    { "getHeader", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ARApiServiceExUserLeft = { 2, "ApiServiceExUserLeft", "im.actor.core.api", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiServiceExUserLeft;
}

@end


#line 20
void ARApiServiceExUserLeft_init(ARApiServiceExUserLeft *self) {
  (void) ARApiServiceEx_init(self);
}


#line 20
ARApiServiceExUserLeft *new_ARApiServiceExUserLeft_init() {
  ARApiServiceExUserLeft *self = [ARApiServiceExUserLeft alloc];
  ARApiServiceExUserLeft_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiServiceExUserLeft)

#pragma clang diagnostic pop
