//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiInt32Value.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiInt32Value.h"
#include "im/actor/core/api/ApiRawValue.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARApiInt32Value () {
 @public
  jint value_;
}

@end

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiInt32Value.java"


#line 17
@implementation ARApiInt32Value


#line 21
- (instancetype)initWithInt:(jint)value {
  ARApiInt32Value_initWithInt_(self, value);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 25
- (instancetype)init {
  ARApiInt32Value_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 29
- (jint)getHeader {
  return 2;
}

- (jint)getValue {
  return self->value_;
}


#line 38
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->value_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
}


#line 43
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->value_];
}


#line 48
- (NSString *)description {
  NSString *res = @"struct Int32Value{";
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "ApiInt32Value", NULL, 0x1, NULL, NULL },
    { "init", "ApiInt32Value", NULL, 0x1, NULL, NULL },
    { "getHeader", NULL, "I", 0x1, NULL, NULL },
    { "getValue", NULL, "I", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARApiInt32Value = { 2, "ApiInt32Value", "im.actor.core.api", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiInt32Value;
}

@end


#line 21
void ARApiInt32Value_initWithInt_(ARApiInt32Value *self, jint value) {
  (void) ARApiRawValue_init(self);
  
#line 22
  self->value_ = value;
}


#line 21
ARApiInt32Value *new_ARApiInt32Value_initWithInt_(jint value) {
  ARApiInt32Value *self = [ARApiInt32Value alloc];
  ARApiInt32Value_initWithInt_(self, value);
  return self;
}


#line 25
void ARApiInt32Value_init(ARApiInt32Value *self) {
  (void) ARApiRawValue_init(self);
}


#line 25
ARApiInt32Value *new_ARApiInt32Value_init() {
  ARApiInt32Value *self = [ARApiInt32Value alloc];
  ARApiInt32Value_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiInt32Value)

#pragma clang diagnostic pop
