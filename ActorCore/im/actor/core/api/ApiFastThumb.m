//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiFastThumb.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/core/api/ApiFastThumb.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/bser/Utils.h"
#include "im/actor/runtime/collections/SparseArray.h"
#include "java/io/IOException.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARApiFastThumb () {
 @public
  jint w_;
  jint h_;
  IOSByteArray *thumb_;
}

@end

J2OBJC_FIELD_SETTER(ARApiFastThumb, thumb_, IOSByteArray *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiFastThumb.java"


#line 17
@implementation ARApiFastThumb


#line 23
- (instancetype)initWithInt:(jint)w
                    withInt:(jint)h
              withByteArray:(IOSByteArray *)thumb {
  ARApiFastThumb_initWithInt_withInt_withByteArray_(self, w, h, thumb);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 29
- (instancetype)init {
  ARApiFastThumb_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 33
- (jint)getW {
  return self->w_;
}

- (jint)getH {
  return self->h_;
}


#line 42
- (IOSByteArray *)getThumb {
  return self->thumb_;
}


#line 47
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->w_ = [((ARBserValues *) nil_chk(values)) getIntWithInt:1];
  self->h_ = [values getIntWithInt:2];
  self->thumb_ = [values getBytesWithInt:3];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithARSparseArray:[values buildRemaining]];
  }
}


#line 57
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  [((ARBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->w_];
  [writer writeIntWithInt:2 withInt:self->h_];
  if (self->thumb_ == nil) {
    @throw new_JavaIoIOException_init();
  }
  [writer writeBytesWithInt:3 withByteArray:self->thumb_];
  if ([self getUnmappedObjects] != nil) {
    ARSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ARSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [writer writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}


#line 74
- (NSString *)description {
  NSString *res = @"struct FastThumb{";
  (void) JreStrAppendStrong(&res, "$I", @"w=", self->w_);
  (void) JreStrAppendStrong(&res, "$I", @", h=", self->h_);
  (void) JreStrAppendStrong(&res, "$$", @", thumb=", ARUtils_byteArrayToStringCompactWithByteArray_(self->thumb_));
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withByteArray:", "ApiFastThumb", NULL, 0x1, NULL, NULL },
    { "init", "ApiFastThumb", NULL, 0x1, NULL, NULL },
    { "getW", NULL, "I", 0x1, NULL, NULL },
    { "getH", NULL, "I", 0x1, NULL, NULL },
    { "getThumb", NULL, "[B", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "w_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "h_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "thumb_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARApiFastThumb = { 2, "ApiFastThumb", "im.actor.core.api", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiFastThumb;
}

@end


#line 23
void ARApiFastThumb_initWithInt_withInt_withByteArray_(ARApiFastThumb *self, jint w, jint h, IOSByteArray *thumb) {
  (void) ARBserObject_init(self);
  
#line 24
  self->w_ = w;
  self->h_ = h;
  self->thumb_ = thumb;
}


#line 23
ARApiFastThumb *new_ARApiFastThumb_initWithInt_withInt_withByteArray_(jint w, jint h, IOSByteArray *thumb) {
  ARApiFastThumb *self = [ARApiFastThumb alloc];
  ARApiFastThumb_initWithInt_withInt_withByteArray_(self, w, h, thumb);
  return self;
}

void ARApiFastThumb_init(ARApiFastThumb *self) {
  (void) ARBserObject_init(self);
}


#line 29
ARApiFastThumb *new_ARApiFastThumb_init() {
  ARApiFastThumb *self = [ARApiFastThumb alloc];
  ARApiFastThumb_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiFastThumb)

#pragma clang diagnostic pop
