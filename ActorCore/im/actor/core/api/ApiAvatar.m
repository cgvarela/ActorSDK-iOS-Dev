//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiAvatar.java
//

#include <j2objc/IOSClass.h>
#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/api/ApiAvatar.h"
#include "im/actor/core/api/ApiAvatarImage.h"
#include "im/actor/runtime/bser/BserObject.h"
#include "im/actor/runtime/bser/BserValues.h"
#include "im/actor/runtime/bser/BserWriter.h"
#include "im/actor/runtime/collections/SparseArray.h"
#include <j2objc/java/io/IOException.h>

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ARApiAvatar () {
 @public
  ARApiAvatarImage *smallImage_;
  ARApiAvatarImage *largeImage_;
  ARApiAvatarImage *fullImage_;
}

@end

J2OBJC_FIELD_SETTER(ARApiAvatar, smallImage_, ARApiAvatarImage *)
J2OBJC_FIELD_SETTER(ARApiAvatar, largeImage_, ARApiAvatarImage *)
J2OBJC_FIELD_SETTER(ARApiAvatar, fullImage_, ARApiAvatarImage *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/api/ApiAvatar.java"


#line 17
@implementation ARApiAvatar


#line 23
- (instancetype)initWithARApiAvatarImage:(ARApiAvatarImage *)smallImage
                    withARApiAvatarImage:(ARApiAvatarImage *)largeImage
                    withARApiAvatarImage:(ARApiAvatarImage *)fullImage {
  ARApiAvatar_initWithARApiAvatarImage_withARApiAvatarImage_withARApiAvatarImage_(self, smallImage, largeImage, fullImage);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 29
- (instancetype)init {
  ARApiAvatar_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 34
- (ARApiAvatarImage *)getSmallImage {
  return self->smallImage_;
}


#line 39
- (ARApiAvatarImage *)getLargeImage {
  return self->largeImage_;
}


#line 44
- (ARApiAvatarImage *)getFullImage {
  return self->fullImage_;
}


#line 49
- (void)parseWithARBserValues:(ARBserValues *)values {
  self->smallImage_ = [((ARBserValues *) nil_chk(values)) optObjWithInt:1 withARBserObject:new_ARApiAvatarImage_init()];
  self->largeImage_ = [values optObjWithInt:2 withARBserObject:new_ARApiAvatarImage_init()];
  self->fullImage_ = [values optObjWithInt:3 withARBserObject:new_ARApiAvatarImage_init()];
  if ([values hasRemaining]) {
    [self setUnmappedObjectsWithARSparseArray:[values buildRemaining]];
  }
}


#line 59
- (void)serializeWithARBserWriter:(ARBserWriter *)writer {
  if (self->smallImage_ != nil) {
    [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withARBserObject:self->smallImage_];
  }
  if (self->largeImage_ != nil) {
    [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:2 withARBserObject:self->largeImage_];
  }
  if (self->fullImage_ != nil) {
    [((ARBserWriter *) nil_chk(writer)) writeObjectWithInt:3 withARBserObject:self->fullImage_];
  }
  if ([self getUnmappedObjects] != nil) {
    ARSparseArray *unmapped = [self getUnmappedObjects];
    for (jint i = 0; i < [((ARSparseArray *) nil_chk(unmapped)) size]; i++) {
      jint key = [unmapped keyAtWithInt:i];
      [((ARBserWriter *) nil_chk(writer)) writeUnmappedWithInt:key withId:[unmapped getWithInt:key]];
    }
  }
}


#line 79
- (NSString *)description {
  NSString *res = @"struct Avatar{";
  (void) JreStrAppendStrong(&res, "$$", @"smallImage=", (self->smallImage_ != nil ? @"set" : @"empty"));
  (void) JreStrAppendStrong(&res, "$$", @", largeImage=", (self->largeImage_ != nil ? @"set" : @"empty"));
  (void) JreStrAppendStrong(&res, "$$", @", fullImage=", (self->fullImage_ != nil ? @"set" : @"empty"));
  (void) JreStrAppendStrong(&res, "$", @"}");
  return res;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithARApiAvatarImage:withARApiAvatarImage:withARApiAvatarImage:", "ApiAvatar", NULL, 0x1, NULL, NULL },
    { "init", "ApiAvatar", NULL, 0x1, NULL, NULL },
    { "getSmallImage", NULL, "Lim.actor.core.api.ApiAvatarImage;", 0x1, NULL, NULL },
    { "getLargeImage", NULL, "Lim.actor.core.api.ApiAvatarImage;", 0x1, NULL, NULL },
    { "getFullImage", NULL, "Lim.actor.core.api.ApiAvatarImage;", 0x1, NULL, NULL },
    { "parseWithARBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "serializeWithARBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "smallImage_", NULL, 0x2, "Lim.actor.core.api.ApiAvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
    { "largeImage_", NULL, 0x2, "Lim.actor.core.api.ApiAvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
    { "fullImage_", NULL, 0x2, "Lim.actor.core.api.ApiAvatarImage;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ARApiAvatar = { 2, "ApiAvatar", "im.actor.core.api", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ARApiAvatar;
}

@end


#line 23
void ARApiAvatar_initWithARApiAvatarImage_withARApiAvatarImage_withARApiAvatarImage_(ARApiAvatar *self, ARApiAvatarImage *smallImage, ARApiAvatarImage *largeImage, ARApiAvatarImage *fullImage) {
  (void) ARBserObject_init(self);
  
#line 24
  self->smallImage_ = smallImage;
  self->largeImage_ = largeImage;
  self->fullImage_ = fullImage;
}


#line 23
ARApiAvatar *new_ARApiAvatar_initWithARApiAvatarImage_withARApiAvatarImage_withARApiAvatarImage_(ARApiAvatarImage *smallImage, ARApiAvatarImage *largeImage, ARApiAvatarImage *fullImage) {
  ARApiAvatar *self = [ARApiAvatar alloc];
  ARApiAvatar_initWithARApiAvatarImage_withARApiAvatarImage_withARApiAvatarImage_(self, smallImage, largeImage, fullImage);
  return self;
}

void ARApiAvatar_init(ARApiAvatar *self) {
  (void) ARBserObject_init(self);
}


#line 29
ARApiAvatar *new_ARApiAvatar_init() {
  ARApiAvatar *self = [ARApiAvatar alloc];
  ARApiAvatar_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ARApiAvatar)

#pragma clang diagnostic pop
