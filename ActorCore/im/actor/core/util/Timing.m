//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/util/Timing.java
//

#include <j2objc/J2ObjC_source.h>
#include "im/actor/core/util/Timing.h"
#include "im/actor/runtime/Log.h"
#include "im/actor/runtime/actors/ActorTime.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

@interface ACTiming () {
 @public
  NSString *sectionName_;
  jlong sectionStart_;
  NSString *TAG_;
}

@end

J2OBJC_FIELD_SETTER(ACTiming, sectionName_, NSString *)
J2OBJC_FIELD_SETTER(ACTiming, TAG_, NSString *)

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/util/Timing.java"


#line 13
@implementation ACTiming


#line 23
- (instancetype)initWithNSString:(NSString *)tag {
  ACTiming_initWithNSString_(self, tag);
  return self;
}


#line 32
- (void)sectionWithNSString:(NSString *)sectionName {
  [self end];
  self->sectionName_ = sectionName;
  self->sectionStart_ = ARActorTime_currentTime();
}


#line 41
- (void)end {
  if (self->sectionName_ != nil) {
    ARLog_dWithNSString_withNSString_(TAG_, JreStrcat("$$J$", self->sectionName_, @" loaded in ", (ARActorTime_currentTime() - sectionStart_), @" ms"));
    self->sectionName_ = nil;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Timing", NULL, 0x1, NULL, NULL },
    { "sectionWithNSString:", "section", "V", 0x1, NULL, NULL },
    { "end", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sectionName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "sectionStart_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "TAG_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ACTiming = { 2, "Timing", "im.actor.core.util", NULL, 0x1, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ACTiming;
}

@end


#line 23
void ACTiming_initWithNSString_(ACTiming *self, NSString *tag) {
  (void) NSObject_init(self);
  
#line 24
  self->TAG_ = tag;
}


#line 23
ACTiming *new_ACTiming_initWithNSString_(NSString *tag) {
  ACTiming *self = [ACTiming alloc];
  ACTiming_initWithNSString_(self, tag);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ACTiming)

#pragma clang diagnostic pop
