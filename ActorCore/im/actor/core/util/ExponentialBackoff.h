//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/util/ExponentialBackoff.java
//

#ifndef _ImActorCoreUtilExponentialBackoff_H_
#define _ImActorCoreUtilExponentialBackoff_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

/*!
 @brief Helper for calculation of exponential backoff delays
 */
@interface ACExponentialBackoff : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)minDelay
                    withInt:(jint)maxDelay
                    withInt:(jint)maxFailureCount;

/*!
 @brief Calculating wait duration after failure attempt
 @return wait in ms
 */
- (jlong)exponentialWait;

/*!
 @brief Notification about failure
 */
- (void)onFailure;

/*!
 @brief Notification about success
 */
- (void)onSuccess;

/*!
 @brief Resetting backoff object
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(ACExponentialBackoff)

FOUNDATION_EXPORT void ACExponentialBackoff_initWithInt_withInt_withInt_(ACExponentialBackoff *self, jint minDelay, jint maxDelay, jint maxFailureCount);

FOUNDATION_EXPORT ACExponentialBackoff *new_ACExponentialBackoff_initWithInt_withInt_withInt_(jint minDelay, jint maxDelay, jint maxFailureCount) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACExponentialBackoff)

@compatibility_alias ImActorCoreUtilExponentialBackoff ACExponentialBackoff;


#pragma clang diagnostic pop
#endif // _ImActorCoreUtilExponentialBackoff_H_
