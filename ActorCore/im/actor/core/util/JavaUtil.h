//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/core/core-shared/src/main/java//im/actor/core/util/JavaUtil.java
//

#ifndef _ImActorCoreUtilJavaUtil_H_
#define _ImActorCoreUtilJavaUtil_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class IOSObjectArray;
@protocol JavaUtilList;

/*!
 @brief Utility methods
 */
@interface ACJavaUtil : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Checking if string array contains value
 @param vals  values
 @param value value
 @return is array contains string
 */
+ (jboolean)containsWithNSStringArray:(IOSObjectArray *)vals
                         withNSString:(NSString *)value;

/*!
 @brief Equals with null checking
 @param a first argument
 @param b second argument
 @return is equals result
 */
+ (jboolean)equalsEWithId:(id)a
                   withId:(id)b;

/*!
 @brief Getting last elements of list in reverse order
 @param elements source list
 @param limit    maximum elements count
 @return result list
 */
+ (id<JavaUtilList>)lastWithJavaUtilList:(id<JavaUtilList>)elements
                                 withInt:(jint)limit;

@end

J2OBJC_EMPTY_STATIC_INIT(ACJavaUtil)

FOUNDATION_EXPORT jboolean ACJavaUtil_containsWithNSStringArray_withNSString_(IOSObjectArray *vals, NSString *value);

FOUNDATION_EXPORT jboolean ACJavaUtil_equalsEWithId_withId_(id a, id b);

FOUNDATION_EXPORT id<JavaUtilList> ACJavaUtil_lastWithJavaUtilList_withInt_(id<JavaUtilList> elements, jint limit);

FOUNDATION_EXPORT void ACJavaUtil_init(ACJavaUtil *self);

FOUNDATION_EXPORT ACJavaUtil *new_ACJavaUtil_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ACJavaUtil)

@compatibility_alias ImActorCoreUtilJavaUtil ACJavaUtil;


#pragma clang diagnostic pop
#endif // _ImActorCoreUtilJavaUtil_H_
