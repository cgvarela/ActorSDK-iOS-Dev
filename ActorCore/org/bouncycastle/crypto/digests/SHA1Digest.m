//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/crypto/digests/SHA1Digest.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include <j2objc/java/lang/System.h>
#include "org/bouncycastle/crypto/digests/GeneralDigest.h"
#include "org/bouncycastle/crypto/digests/SHA1Digest.h"
#include "org/bouncycastle/util/Memoable.h"
#include "org/bouncycastle/util/Pack.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#define OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH 20
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y1 1518500249
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y2 1859775393
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y3 -1894007588
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y4 -899497514

@interface OrgBouncycastleCryptoDigestsSHA1Digest () {
 @public
  jint H1_, H2_, H3_, H4_, H5_;
  IOSIntArray *X_;
  jint xOff_;
}

- (void)copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t OBJC_METHOD_FAMILY_NONE;

- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoDigestsSHA1Digest, X_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleCryptoDigestsSHA1Digest, DIGEST_LENGTH, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleCryptoDigestsSHA1Digest, Y1, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleCryptoDigestsSHA1Digest, Y2, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleCryptoDigestsSHA1Digest, Y3, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgBouncycastleCryptoDigestsSHA1Digest, Y4, jint)

__attribute__((unused)) static void OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/crypto/digests/SHA1Digest.java"


#line 12
@implementation OrgBouncycastleCryptoDigestsSHA1Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 26
- (instancetype)init {
  OrgBouncycastleCryptoDigestsSHA1Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 35
- (instancetype)initWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t {
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
  return self;
}


#line 42
- (instancetype)initWithByteArray:(IOSByteArray *)encodedState {
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(self, encodedState);
  return self;
}


#line 59
- (void)copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t {
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
}


#line 71
- (NSString *)getAlgorithmName {
  
#line 73
  return @"SHA-1";
}


#line 76
- (jint)getDigestSize {
  
#line 78
  return OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH;
}


#line 81
- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff {
  
#line 87
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(inArg), inOff), 24);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff);
  *IOSIntArray_GetRef(nil_chk(X_), xOff_) = n;
  
#line 93
  if (++xOff_ == 16) {
    
#line 95
    [self processBlock];
  }
}

- (void)processLengthWithLong:(jlong)bitLength {
  
#line 102
  if (xOff_ > 14) {
    
#line 104
    [self processBlock];
  }
  
#line 107
  *IOSIntArray_GetRef(nil_chk(X_), 14) = (jint) (JreURShift64(bitLength, 32));
  *IOSIntArray_GetRef(X_, 15) = (jint) (bitLength & (jint) 0xffffffff);
}


#line 111
- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  
#line 115
  [self finish];
  
#line 117
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H1_, outArg, outOff);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H2_, outArg, outOff + 4);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H3_, outArg, outOff + 8);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H4_, outArg, outOff + 12);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H5_, outArg, outOff + 16);
  
#line 123
  [self reset];
  
#line 125
  return OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH;
}

- (void)reset {
  
#line 133
  [super reset];
  
#line 135
  H1_ = (jint) 0x67452301;
  H2_ = (jint) 0xefcdab89;
  H3_ = (jint) 0x98badcfe;
  H4_ = (jint) 0x10325476;
  H5_ = (jint) 0xc3d2e1f0;
  
#line 141
  xOff_ = 0;
  for (jint i = 0; i != ((IOSIntArray *) nil_chk(X_))->size_; i++) {
    
#line 144
    *IOSIntArray_GetRef(X_, i) = 0;
  }
}


#line 156
- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, u, v, w);
}


#line 164
- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, u, v, w);
}


#line 172
- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, u, v, w);
}


#line 180
- (void)processBlock {
  
#line 185
  for (jint i = 16; i < 80; i++) {
    
#line 187
    jint t = IOSIntArray_Get(nil_chk(X_), i - 3) ^ IOSIntArray_Get(X_, i - 8) ^ IOSIntArray_Get(X_, i - 14) ^ IOSIntArray_Get(X_, i - 16);
    *IOSIntArray_GetRef(X_, i) = (JreLShift32(t, 1)) | (JreURShift32(t, 31));
  }
  
#line 194
  jint A = H1_;
  jint B = H2_;
  jint C = H3_;
  jint D = H4_;
  jint E = H5_;
  
#line 203
  jint idx = 0;
  
#line 205
  for (jint j = 0; j < 4; j++) {
    
#line 209
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 212
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 215
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 218
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 221
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 228
  for (jint j = 0; j < 4; j++) {
    
#line 232
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 235
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 238
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 241
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 244
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 251
  for (jint j = 0; j < 4; j++) {
    
#line 255
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 258
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 261
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 264
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 267
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 274
  for (jint j = 0; j <= 3; j++) {
    
#line 278
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 281
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 284
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 287
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 290
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(X_, idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 295
  H1_ += A;
  H2_ += B;
  H3_ += C;
  H4_ += D;
  H5_ += E;
  
#line 304
  xOff_ = 0;
  for (jint i = 0; i < 16; i++) {
    
#line 307
    *IOSIntArray_GetRef(nil_chk(X_), i) = 0;
  }
}


#line 311
- (id<OrgBouncycastleUtilMemoable>)copy__ {
  
#line 313
  return new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(self);
}


#line 316
- (void)resetWithOrgBouncycastleUtilMemoable:(id<OrgBouncycastleUtilMemoable>)other {
  
#line 318
  OrgBouncycastleCryptoDigestsSHA1Digest *d = (OrgBouncycastleCryptoDigestsSHA1Digest *) check_class_cast(other, [OrgBouncycastleCryptoDigestsSHA1Digest class]);
  
#line 320
  [super copyInWithOrgBouncycastleCryptoDigestsGeneralDigest:d];
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, d);
}


#line 324
- (IOSByteArray *)getEncodedState {
  
#line 326
  IOSByteArray *state = [IOSByteArray newArrayWithLength:40 + xOff_ * 4];
  
#line 328
  [super populateStateWithByteArray:state];
  
#line 330
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H1_, state, 16);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H2_, state, 20);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H3_, state, 24);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H4_, state, 28);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H5_, state, 32);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(xOff_, state, 36);
  
#line 337
  for (jint i = 0; i != xOff_; i++) {
    
#line 339
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(nil_chk(X_), i), state, 40 + (i * 4));
  }
  
#line 342
  return state;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SHA1Digest", NULL, 0x1, NULL, NULL },
    { "initWithOrgBouncycastleCryptoDigestsSHA1Digest:", "SHA1Digest", NULL, 0x1, NULL, NULL },
    { "initWithByteArray:", "SHA1Digest", NULL, 0x1, NULL, NULL },
    { "copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:", "copyIn", "V", 0x2, NULL, NULL },
    { "getAlgorithmName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDigestSize", NULL, "I", 0x1, NULL, NULL },
    { "processWordWithByteArray:withInt:", "processWord", "V", 0x4, NULL, NULL },
    { "processLengthWithLong:", "processLength", "V", 0x4, NULL, NULL },
    { "doFinalWithByteArray:withInt:", "doFinal", "I", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "fWithInt:withInt:withInt:", "f", "I", 0x2, NULL, NULL },
    { "hWithInt:withInt:withInt:", "h", "I", 0x2, NULL, NULL },
    { "gWithInt:withInt:withInt:", "g", "I", 0x2, NULL, NULL },
    { "processBlock", NULL, "V", 0x4, NULL, NULL },
    { "copy__", "copy", "Lorg.bouncycastle.util.Memoable;", 0x1, NULL, NULL },
    { "resetWithOrgBouncycastleUtilMemoable:", "reset", "V", 0x1, NULL, NULL },
    { "getEncodedState", NULL, "[B", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DIGEST_LENGTH", "DIGEST_LENGTH", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH },
    { "H1_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "H2_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "H3_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "H4_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "H5_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "X_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "xOff_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "Y1", "Y1", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y1 },
    { "Y2", "Y2", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y2 },
    { "Y3", "Y3", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y3 },
    { "Y4", "Y4", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y4 },
  };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoDigestsSHA1Digest = { 2, "SHA1Digest", "org.bouncycastle.crypto.digests", NULL, 0x1, 17, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgBouncycastleCryptoDigestsSHA1Digest;
}

@end


#line 26
void OrgBouncycastleCryptoDigestsSHA1Digest_init(OrgBouncycastleCryptoDigestsSHA1Digest *self) {
  (void) OrgBouncycastleCryptoDigestsGeneralDigest_init(self);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 28
  [self reset];
}


#line 26
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_init() {
  OrgBouncycastleCryptoDigestsSHA1Digest *self = [OrgBouncycastleCryptoDigestsSHA1Digest alloc];
  OrgBouncycastleCryptoDigestsSHA1Digest_init(self);
  return self;
}


#line 35
void OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  (void) OrgBouncycastleCryptoDigestsGeneralDigest_initWithOrgBouncycastleCryptoDigestsGeneralDigest_(self,
#line 37
  t);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 39
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
}


#line 35
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  OrgBouncycastleCryptoDigestsSHA1Digest *self = [OrgBouncycastleCryptoDigestsSHA1Digest alloc];
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
  return self;
}


#line 42
void OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(OrgBouncycastleCryptoDigestsSHA1Digest *self, IOSByteArray *encodedState) {
  (void) OrgBouncycastleCryptoDigestsGeneralDigest_initWithByteArray_(self,
#line 44
  encodedState);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 46
  self->H1_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 16);
  self->H2_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 20);
  self->H3_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 24);
  self->H4_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 28);
  self->H5_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 32);
  
#line 52
  self->xOff_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 36);
  for (jint i = 0; i != self->xOff_; i++) {
    
#line 55
    *IOSIntArray_GetRef(self->X_, i) = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 40 + (i * 4));
  }
}


#line 42
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(IOSByteArray *encodedState) {
  OrgBouncycastleCryptoDigestsSHA1Digest *self = [OrgBouncycastleCryptoDigestsSHA1Digest alloc];
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(self, encodedState);
  return self;
}


#line 59
void OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  
#line 61
  self->H1_ = ((OrgBouncycastleCryptoDigestsSHA1Digest *) nil_chk(t))->H1_;
  self->H2_ = t->H2_;
  self->H3_ = t->H3_;
  self->H4_ = t->H4_;
  self->H5_ = t->H5_;
  
#line 67
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(t->X_, 0, self->X_, 0, ((IOSIntArray *) nil_chk(t->X_))->size_);
  self->xOff_ = t->xOff_;
}


#line 156
jint OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 161
  return ((u & v) | ((~u) & w));
}


#line 164
jint OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 169
  return (u ^ v ^ w);
}


#line 172
jint OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 177
  return ((u & v) | (u & w) | (v & w));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoDigestsSHA1Digest)

#pragma clang diagnostic pop
