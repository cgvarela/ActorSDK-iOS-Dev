//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/crypto/digests/EncodableDigest.java
//

#ifndef _OrgBouncycastleCryptoDigestsEncodableDigest_H_
#define _OrgBouncycastleCryptoDigestsEncodableDigest_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>

@class IOSByteArray;

/*!
 @brief Encodable digests allow you to download an encoded copy of their internal state.
 This is useful for the situation where
 you need to generate a signature on an external device and it allows for "sign with last round", so a copy of the
 internal state of the digest, plus the last few blocks of the message are all that needs to be sent, rather than the
 entire message.
 */
@protocol OrgBouncycastleCryptoDigestsEncodableDigest < NSObject, JavaObject >

/*!
 @brief Return an encoded byte array for the digest's internal state
 @return an encoding of the digests internal state.
 */
- (IOSByteArray *)getEncodedState;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoDigestsEncodableDigest)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoDigestsEncodableDigest)


#pragma clang diagnostic pop
#endif // _OrgBouncycastleCryptoDigestsEncodableDigest_H_
