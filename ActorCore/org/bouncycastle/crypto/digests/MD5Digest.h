//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/crypto/digests/MD5Digest.java
//

#ifndef _OrgBouncycastleCryptoDigestsMD5Digest_H_
#define _OrgBouncycastleCryptoDigestsMD5Digest_H_

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include <j2objc/J2ObjC_header.h>
#include <ActorSDK/org/bouncycastle/crypto/digests/GeneralDigest.h>

@class IOSByteArray;
@protocol OrgBouncycastleUtilMemoable;

/*!
 @brief implementation of MD5 as outlined in "Handbook of Applied Cryptography", pages 346 - 347.
 */
@interface OrgBouncycastleCryptoDigestsMD5Digest : OrgBouncycastleCryptoDigestsGeneralDigest

#pragma mark Public

/*!
 @brief Standard constructor
 */
- (instancetype)init;

/*!
 @brief Copy constructor.
 This will copy the state of the provided
 message digest.
 */
- (instancetype)initWithOrgBouncycastleCryptoDigestsMD5Digest:(OrgBouncycastleCryptoDigestsMD5Digest *)t;

- (id<OrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

/*!
 @brief reset the chaining variables to the IV values.
 */
- (void)reset;

- (void)resetWithOrgBouncycastleUtilMemoable:(id<OrgBouncycastleUtilMemoable>)other;

#pragma mark Protected

- (void)processBlock;

- (void)processLengthWithLong:(jlong)bitLength;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoDigestsMD5Digest)

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsMD5Digest_init(OrgBouncycastleCryptoDigestsMD5Digest *self);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsMD5Digest *new_OrgBouncycastleCryptoDigestsMD5Digest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsMD5Digest_initWithOrgBouncycastleCryptoDigestsMD5Digest_(OrgBouncycastleCryptoDigestsMD5Digest *self, OrgBouncycastleCryptoDigestsMD5Digest *t);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsMD5Digest *new_OrgBouncycastleCryptoDigestsMD5Digest_initWithOrgBouncycastleCryptoDigestsMD5Digest_(OrgBouncycastleCryptoDigestsMD5Digest *t) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoDigestsMD5Digest)


#pragma clang diagnostic pop
#endif // _OrgBouncycastleCryptoDigestsMD5Digest_H_
