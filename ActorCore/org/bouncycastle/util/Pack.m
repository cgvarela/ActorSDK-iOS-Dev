//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/util/Pack.java
//

#include <j2objc/IOSPrimitiveArray.h>
#include <j2objc/J2ObjC_source.h>
#include "org/bouncycastle/util/Pack.h"

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#line 0 "/Users/ex3ndr/Develop/actor-proprietary/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java//org/bouncycastle/util/Pack.java"


#line 3
@implementation OrgBouncycastleUtilPack


#line 4
+ (jint)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off {
  return OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
}


#line 12
+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns {
  OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 19
+ (IOSByteArray *)intToBigEndianWithInt:(jint)n {
  return OrgBouncycastleUtilPack_intToBigEndianWithInt_(n);
}


#line 25
+ (void)intToBigEndianWithInt:(jint)n
                withByteArray:(IOSByteArray *)bs
                      withInt:(jint)off {
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 32
+ (IOSByteArray *)intToBigEndianWithIntArray:(IOSIntArray *)ns {
  return OrgBouncycastleUtilPack_intToBigEndianWithIntArray_(ns);
}


#line 38
+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 45
+ (jlong)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  return OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
}


#line 51
+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)off
                       withLongArray:(IOSLongArray *)ns {
  OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 58
+ (IOSByteArray *)longToBigEndianWithLong:(jlong)n {
  return OrgBouncycastleUtilPack_longToBigEndianWithLong_(n);
}


#line 64
+ (void)longToBigEndianWithLong:(jlong)n
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off {
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, off);
}


#line 69
+ (IOSByteArray *)longToBigEndianWithLongArray:(IOSLongArray *)ns {
  return OrgBouncycastleUtilPack_longToBigEndianWithLongArray_(ns);
}


#line 75
+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}


#line 82
+ (jint)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off {
  return OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
}


#line 90
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off
                          withIntArray:(IOSIntArray *)ns {
  OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 97
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)bOff
                          withIntArray:(IOSIntArray *)ns
                               withInt:(jint)nOff
                               withInt:(jint)count {
  OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, bOff, ns, nOff, count);
}


#line 104
+ (IOSByteArray *)intToLittleEndianWithInt:(jint)n {
  return OrgBouncycastleUtilPack_intToLittleEndianWithInt_(n);
}


#line 110
+ (void)intToLittleEndianWithInt:(jint)n
                   withByteArray:(IOSByteArray *)bs
                         withInt:(jint)off {
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 117
+ (IOSByteArray *)intToLittleEndianWithIntArray:(IOSIntArray *)ns {
  return OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_(ns);
}


#line 123
+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 130
+ (jlong)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                 withInt:(jint)off {
  return OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
}


#line 136
+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off
                          withLongArray:(IOSLongArray *)ns {
  OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 143
+ (IOSByteArray *)longToLittleEndianWithLong:(jlong)n {
  return OrgBouncycastleUtilPack_longToLittleEndianWithLong_(n);
}


#line 149
+ (void)longToLittleEndianWithLong:(jlong)n
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, off);
}


#line 154
+ (IOSByteArray *)longToLittleEndianWithLongArray:(IOSLongArray *)ns {
  return OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_(ns);
}


#line 160
+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgBouncycastleUtilPack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "bigEndianToIntWithByteArray:withInt:", "bigEndianToInt", "I", 0x9, NULL, NULL },
    { "bigEndianToIntWithByteArray:withInt:withIntArray:", "bigEndianToInt", "V", 0x9, NULL, NULL },
    { "intToBigEndianWithInt:", "intToBigEndian", "[B", 0x9, NULL, NULL },
    { "intToBigEndianWithInt:withByteArray:withInt:", "intToBigEndian", "V", 0x9, NULL, NULL },
    { "intToBigEndianWithIntArray:", "intToBigEndian", "[B", 0x9, NULL, NULL },
    { "intToBigEndianWithIntArray:withByteArray:withInt:", "intToBigEndian", "V", 0x9, NULL, NULL },
    { "bigEndianToLongWithByteArray:withInt:", "bigEndianToLong", "J", 0x9, NULL, NULL },
    { "bigEndianToLongWithByteArray:withInt:withLongArray:", "bigEndianToLong", "V", 0x9, NULL, NULL },
    { "longToBigEndianWithLong:", "longToBigEndian", "[B", 0x9, NULL, NULL },
    { "longToBigEndianWithLong:withByteArray:withInt:", "longToBigEndian", "V", 0x9, NULL, NULL },
    { "longToBigEndianWithLongArray:", "longToBigEndian", "[B", 0x9, NULL, NULL },
    { "longToBigEndianWithLongArray:withByteArray:withInt:", "longToBigEndian", "V", 0x9, NULL, NULL },
    { "littleEndianToIntWithByteArray:withInt:", "littleEndianToInt", "I", 0x9, NULL, NULL },
    { "littleEndianToIntWithByteArray:withInt:withIntArray:", "littleEndianToInt", "V", 0x9, NULL, NULL },
    { "littleEndianToIntWithByteArray:withInt:withIntArray:withInt:withInt:", "littleEndianToInt", "V", 0x9, NULL, NULL },
    { "intToLittleEndianWithInt:", "intToLittleEndian", "[B", 0x9, NULL, NULL },
    { "intToLittleEndianWithInt:withByteArray:withInt:", "intToLittleEndian", "V", 0x9, NULL, NULL },
    { "intToLittleEndianWithIntArray:", "intToLittleEndian", "[B", 0x9, NULL, NULL },
    { "intToLittleEndianWithIntArray:withByteArray:withInt:", "intToLittleEndian", "V", 0x9, NULL, NULL },
    { "littleEndianToLongWithByteArray:withInt:", "littleEndianToLong", "J", 0x9, NULL, NULL },
    { "littleEndianToLongWithByteArray:withInt:withLongArray:", "littleEndianToLong", "V", 0x9, NULL, NULL },
    { "longToLittleEndianWithLong:", "longToLittleEndian", "[B", 0x9, NULL, NULL },
    { "longToLittleEndianWithLong:withByteArray:withInt:", "longToLittleEndian", "V", 0x9, NULL, NULL },
    { "longToLittleEndianWithLongArray:", "longToLittleEndian", "[B", 0x9, NULL, NULL },
    { "longToLittleEndianWithLongArray:withByteArray:withInt:", "longToLittleEndian", "V", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgBouncycastleUtilPack = { 2, "Pack", "org.bouncycastle.util", NULL, 0x401, 26, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgBouncycastleUtilPack;
}

@end


#line 4
jint OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 5
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(bs), off), 24);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(bs, ++off) & (jint) 0xff);
  return n;
}


#line 12
void OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 13
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 19
IOSByteArray *OrgBouncycastleUtilPack_intToBigEndianWithInt_(jint n) {
  OrgBouncycastleUtilPack_initialize();
  
#line 20
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}


#line 25
void OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 26
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (JreURShift32(n, 24));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (n);
}


#line 32
IOSByteArray *OrgBouncycastleUtilPack_intToBigEndianWithIntArray_(IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 33
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}


#line 38
void OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 39
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}


#line 45
jlong OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 46
  jint hi = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
  jint lo = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}


#line 51
void OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 52
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 58
IOSByteArray *OrgBouncycastleUtilPack_longToBigEndianWithLong_(jlong n) {
  OrgBouncycastleUtilPack_initialize();
  
#line 59
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}


#line 64
void OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 65
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off + 4);
}


#line 69
IOSByteArray *OrgBouncycastleUtilPack_longToBigEndianWithLongArray_(IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 70
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}


#line 75
void OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 76
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}


#line 82
jint OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 83
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32(IOSByteArray_Get(bs, ++off), 24);
  return n;
}


#line 90
void OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 91
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    *IOSIntArray_GetRef(ns, i) = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 97
void OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint bOff, IOSIntArray *ns, jint nOff, jint count) {
  OrgBouncycastleUtilPack_initialize();
  
#line 98
  for (jint i = 0; i < count; ++i) {
    *IOSIntArray_GetRef(nil_chk(ns), nOff + i) = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, bOff);
    bOff += 4;
  }
}


#line 104
IOSByteArray *OrgBouncycastleUtilPack_intToLittleEndianWithInt_(jint n) {
  OrgBouncycastleUtilPack_initialize();
  
#line 105
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}


#line 110
void OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 111
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (n);
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 24));
}


#line 117
IOSByteArray *OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_(IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 118
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}


#line 123
void OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 124
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}


#line 130
jlong OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 131
  jint lo = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
  jint hi = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}


#line 136
void OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 137
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    *IOSLongArray_GetRef(ns, i) = OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 143
IOSByteArray *OrgBouncycastleUtilPack_longToLittleEndianWithLong_(jlong n) {
  OrgBouncycastleUtilPack_initialize();
  
#line 144
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}


#line 149
void OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 150
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off);
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off + 4);
}


#line 154
IOSByteArray *OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_(IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  
#line 155
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}


#line 160
void OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 161
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}

void OrgBouncycastleUtilPack_init(OrgBouncycastleUtilPack *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilPack)

#pragma clang diagnostic pop
